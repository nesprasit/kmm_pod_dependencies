#import <Foundation/NSArray.h>
#import <Foundation/NSDictionary.h>
#import <Foundation/NSError.h>
#import <Foundation/NSObject.h>
#import <Foundation/NSSet.h>
#import <Foundation/NSString.h>
#import <Foundation/NSValue.h>

@class SharedKotlinx_serialization_jsonJsonElement, SharedKotlinEnumCompanion, SharedKotlinEnum<E>, SharedPlatform, SharedKotlinArray<T>, SharedKotlinPair<__covariant A, __covariant B>, SharedConfirmNewPasswordBody, SharedResponseStatus, SharedNetworkResponse<__covariant T, __covariant U>, SharedGetOfficialAccountResult, SharedUserRoleMenuResult, SharedLoginBody, SharedLoginResult, SharedSetNewPasswordResult, SharedResetPasswordBody, SharedResetPasswordResult, SharedVerifyOTPBody, SharedContactResult, SharedDashboardResult, SharedAcceptChatResult, SharedSearchMessageResult, SharedSearchNameResult, SharedGetFollowerChatResultChatRoomList, SharedAgentAssignResult, SharedGetAgentChatStatusResult, SharedAgentFilterResult, SharedGetChatMessageResult, SharedFileFolderListResult, SharedSortType, SharedSortField, SharedFileListResult, SharedChatRoomType, SharedGetFollowerChatResult, SharedGroupAssignResult, SharedGroupFilterResult, SharedContactInformationResult, SharedMasterDataChatResult, SharedContactInformationResultNote, SharedNotificationCountResult, SharedGetChatMessageResultMessageSent, SharedGetReplyTemplateResult, SharedGetSearchFollowerResult, SharedStickerResult, SharedSwitchModeResult, SharedSearchTagResult, SharedTagListResult, SharedGetChatMessageResultSearchFollowerInfo, SharedSearchMessageInChatResult, SharedFileListResultFileResult, SharedChangePasswordBody, SharedChangePasswordResult, SharedCheckAppVersionUpdateResult, SharedCheckUserTokenResult, SharedSettingNotificationResult, SharedSettingNotificationAccountResult, SharedLiveChatSettingResult, SharedProfileBody, SharedProfileResult, SharedSettingNotificationBodyChannelSetting, SharedSettingNotificationBodyChatAvailabilityStatus, SharedSettingNotificationBodyChatSetting, SharedAgentSocket, SharedGetChatMessageResultChatMessageList, SharedStartChatSocket, SharedTriggerExtendChatTimeSocket, SharedSocketOption, SharedNetworkResponseApiError<U>, SharedKotlinNothing, SharedNetworkResponseNetworkError<U>, SharedNetworkResponseSuccess<T>, SharedNetworkResponseUnknownError<U>, SharedResponseStatusType, SharedAcceptChatResultCompanion, SharedAgentAssignResultAgentInfo, SharedAgentAssignResultCompanion, SharedAgentAssignResultAgentInfoCompanion, SharedAgentFilterResultAgentInfo, SharedAgentFilterResultCompanion, SharedAgentFilterResultAgentInfoCompanion, SharedContactInformationResultChannelTypeInfo, SharedContactInformationResultProfile, SharedContactInformationResultVerify, SharedContactInformationResultCompanion, SharedContactInformationResultChannelTypeInfoCompanion, SharedFieldPermissionType, SharedContactInformationResultContactDetailCompanion, SharedContactInformationResultContactDetail, SharedContactInformationResultNoteUser, SharedContactInformationResultNoteCompanion, SharedContactInformationResultNoteUserProfile, SharedContactInformationResultNoteUserCompanion, SharedContactInformationResultNoteUserProfileCompanion, SharedContactInformationResultProfileCompanion, SharedContactInformationResultTagCompanion, SharedContactInformationResultTag, SharedCustomerStatus, SharedContactInformationResultVerifyCompanion, SharedFileFolderListResultFolderResult, SharedFileFolderListResultCompanion, SharedFileFolderListResultFolderResultCompanion, SharedFileFolderListResultStorageResultCompanion, SharedFileFolderListResultStorageResult, SharedFileListResultCompanion, SharedFileType, SharedFileListResultFileResultCompanion, SharedGetAgentChatStatusResultCompanion, SharedGetChatMessageResultFollowerInfo, SharedGetChatMessageResultCompanion, SharedChatMessageType, SharedChatMode, SharedGetChatMessageResultUserInfo, SharedGetChatMessageResultMentionMessage, SharedChatCategory, SharedGetChatMessageResultChatMessageListCompanion, SharedGetChatMessageResultCustomerProfileCompanion, SharedGetChatMessageResultCustomerProfile, SharedGetChatMessageResultFollowerInfoCompanion, SharedGetChatMessageResultGroupInfoCompanion, SharedGetChatMessageResultGroupInfo, SharedGetChatMessageResultMentionMessageCompanion, SharedMessageType, SharedStickerType, SharedGetChatMessageResultMessageSentCompanion, SharedGetChatMessageResultSearchFollowerInfoCompanion, SharedGetChatMessageResultUserInfoCompanion, SharedGetFollowerChatResultCompanion, SharedGetFollowerChatResultCustomerProfile, SharedOwnerChatStatus, SharedGetFollowerChatResultUserInfo, SharedChatRoomStatus, SharedGetFollowerChatResultGroupInfo, SharedChannelType, SharedGetFollowerChatResultChatRoomListCompanion, SharedGetFollowerChatResultCustomerProfileCompanion, SharedGetFollowerChatResultGroupInfoCompanion, SharedGetFollowerChatResultUserInfoCompanion, SharedGetReplyTemplateResultGroupList, SharedGetReplyTemplateResultCompanion, SharedGetReplyTemplateResultReplyMessage, SharedGetReplyTemplateResultGroupListCompanion, SharedGetReplyTemplateResultReplyMessageCompanion, SharedGetSearchFollowerResultFollower, SharedGetSearchFollowerResultCompanion, SharedGetSearchFollowerResultFollowerCompanion, SharedGroupAssignResultGroupInfo, SharedGroupAssignResultCompanion, SharedGroupAssignResultGroupInfoAgentInfo, SharedGroupAssignResultGroupInfoCompanion, SharedGroupAssignResultGroupInfoAgentInfoCompanion, SharedGroupFilterResultGroupInfo, SharedGroupFilterResultCompanion, SharedGroupFilterResultGroupInfoCompanion, SharedMasterDataChatResultChannelInfo, SharedMasterDataChatResultChatTypeInfo, SharedMasterDataChatResultCompanion, SharedMasterDataChatResultChannelInfoCompanion, SharedMasterDataChatResultChatTypeInfoCompanion, SharedNotificationCountResultNotificationCountData, SharedNotificationCountResultCompanion, SharedNotificationCountResultNotificationCountDataCompanion, SharedReplyMessageResultCompanion, SharedReplyMessageResult, SharedBaseResponseStatusEntityCompanion, SharedBaseResponseStatusEntity, SharedSearchMessageInChatResultMessage, SharedSearchMessageInChatResultMessageFoundAll, SharedSearchMessageInChatResultCompanion, SharedSearchMessageInChatResultMessageUser, SharedSearchMessageInChatResultMessageCompanion, SharedSearchMessageInChatResultMessageUserCompanion, SharedSearchMessageInChatResultMessageFoundAllCompanion, SharedSearchMessageResultSearchChatInfo, SharedSearchMessageResultCompanion, SharedSearchMessageResultSearchChatInfoCompanion, SharedSearchNameResultCompanion, SharedSearchTagResultFollower, SharedSearchTagResultCompanion, SharedSearchTagResultFollowerCompanion, SharedStickerResultSticker, SharedStickerResultCompanion, SharedStickerResultStickerStickerData, SharedStickerResultStickerCompanion, SharedStickerResultStickerStickerDataCompanion, SharedSwitchModeResultSwitchModeData, SharedSwitchModeResultCompanion, SharedSwitchModeResultSwitchModeDataCompanion, SharedTagListResultTagInfo, SharedTagListResultCompanion, SharedTagListResultTagInfoTags, SharedTagListResultTagInfoCompanion, SharedTagListResultTagInfoTagsCompanion, SharedDashboardResultResult, SharedDashboardResultCompanion, SharedDashboardResultResultPerformanceData, SharedDashboardResultResultChat, SharedDashboardResultResultChatVolumeData, SharedDashboardResultResultContactChatData, SharedDashboardResultResultContactGraphData, SharedDashboardResultResultCompanion, SharedDashboardResultResultChatCompanion, SharedDashboardResultResultChatVolumeDataLabelData, SharedDashboardResultResultChatVolumeDataDayValue, SharedDashboardResultResultChatVolumeDataCompanion, SharedDashboardResultResultChatVolumeDataDayValueVolume, SharedDashboardResultResultChatVolumeDataDayValueCompanion, SharedDashboardResultResultChatVolumeDataDayValueVolumeCompanion, SharedDashboardResultResultChatVolumeDataLabelDataCompanion, SharedDashboardResultResultContactChatDataCompanion, SharedDashboardResultResultGraphData, SharedDashboardResultResultContactSummary, SharedDashboardResultResultContactGraphDataCompanion, SharedDashboardResultResultContactSummaryCompanion, SharedDashboardResultResultGraphDataCompanion, SharedPercentType, SharedDashboardResultResultPerformanceDataCompanion, SharedCheckAppStatus, SharedGetOfficialAccountResultCompanyList, SharedGetOfficialAccountResultCompanion, SharedGetOfficialAccountResultBotInfoCompanion, SharedGetOfficialAccountResultBotInfo, SharedGetOfficialAccountResultChannelListCompanion, SharedGetOfficialAccountResultChannelList, SharedChatStatus, SharedGetOfficialAccountResultCompanyListCompanion, SharedLoginResultCompanion, SharedResetPasswordResultCompanion, SharedSetNewPasswordResultCompanion, SharedUserRoleMenuResultCompanion, SharedChangePasswordResultCompanion, SharedCheckAppVersionUpdateResultAppVersionData, SharedCheckAppVersionUpdateResultCompanion, SharedCheckAppVersionUpdateResultAppVersionDataCompanion, SharedCheckUserTokenResultUserTokenData, SharedCheckUserTokenResultCompanion, SharedCheckUserTokenResultUserTokenDataCompanion, SharedLiveChatSettingResultLiveChatSettingResponse, SharedLiveChatSettingResultCompanion, SharedLiveChatSettingResultLiveChatSettingResponseCompanion, SharedProfileResultProfileData, SharedProfileResultCompanion, SharedProfileResultProfileDataCompanion, SharedSettingNotificationAccountResultNotificationAccount, SharedSettingNotificationAccountResultCompanion, SharedSettingNotificationAccountResultNotificationAccountCompanion, SharedSettingNotificationResultSetting, SharedSettingNotificationResultCompanion, SharedSettingNotificationResultSettingSettingInfo, SharedSettingNotificationResultSettingCompanion, SharedSettingNotificationResultSettingSettingInfoCompanion, SharedContactResultContactList, SharedContactResultCompanion, SharedContactResultContactListCompanion, SharedChangePasswordBodyCompanion, SharedFirebaseTokenBodyCompanion, SharedFirebaseTokenBody, SharedProfileBodyProfileData, SharedProfileBodyCompanion, SharedProfileBodyImageDataCompanion, SharedProfileBodyImageData, SharedProfileBodyProfileDataCompanion, SharedSettingNotificationBodyCompanion, SharedSettingNotificationBody, SharedSettingNotificationBodyChannelSettingCompanion, SharedSettingNotificationBodyChatAvailabilityStatusCompanion, SharedSettingNotificationBodyChatSettingCompanion, SharedUserProfileInfoCompanion, SharedUserProfileInfo, SharedCheckAppStatusBodyCompanion, SharedCheckAppStatusBody, SharedConfirmNewPasswordBodyCompanion, SharedContactBodyCompanion, SharedContactBody, SharedDashboardBodyCompanion, SharedDashboardBody, SharedEmptyBodyCompanion, SharedEmptyBody, SharedLoginBodyCompanion, SharedResetPasswordBodyCompanion, SharedVerifyOTPBodyCompanion, SharedAcceptChatBodyCompanion, SharedAcceptChatBody, SharedAgentStatusBodyCompanion, SharedAgentStatusBody, SharedAssignAgentBodyCompanion, SharedAssignAgentBody, SharedAssignGroupBodyCompanion, SharedAssignGroupBody, SharedCloseChatBodyCompanion, SharedCloseChatBody, SharedContactCreateLiveChatBodyCompanion, SharedContactCreateLiveChatBody, SharedContentFileDataBodyBody, SharedContentFileDataBodyFooter, SharedContentFileDataBodyCompanion, SharedContentFileDataBody, SharedContentFileDataBodyBodyContent, SharedContentFileDataBodyBodyCompanion, SharedContentFileDataBodyBodyContentContent, SharedContentFileDataBodyBodyContentCompanion, SharedContentFileDataBodyBodyContentContentContent, SharedContentFileDataBodyBodyContentContentCompanion, SharedContentFileDataBodyBodyContentContentContentContent, SharedContentFileDataBodyBodyContentContentContentCompanion, SharedContentFileDataBodyBodyContentContentContentContentContent, SharedContentFileDataBodyBodyContentContentContentContentCompanion, SharedContentFileDataBodyBodyContentContentContentContentContentCompanion, SharedContentFileDataBodyFooterContent, SharedContentFileDataBodyFooterCompanion, SharedContentFileDataBodyFooterContentAction, SharedContentFileDataBodyFooterContentContent, SharedContentFileDataBodyFooterContentCompanion, SharedContentFileDataBodyFooterContentActionCompanion, SharedContentFileDataBodyFooterContentContentCompanion, SharedCreateTextBodyCompanion, SharedCreateTextBody, SharedDeleteNoteBodyCompanion, SharedDeleteNoteBody, SharedExtendChatBodyCompanion, SharedExtendChatBody, SharedFileUploadBodyFile, SharedFileUploadBodyCompanion, SharedFileUploadBody, SharedFileUploadBodyResolution, SharedFileUploadBodyFileCompanion, SharedFileUploadBodyResolutionCompanion, SharedFollowChatBodyCompanion, SharedFollowChatBody, SharedGetSearchFollowerBodyCompanion, SharedGetSearchFollowerBody, SharedGetTagBodyCompanion, SharedGetTagBody, SharedSearchNameBodyCompanion, SharedSearchNameBody, SharedSendMessageToChatBodyCompanion, SharedSendMessageToChatBody, SharedSendReplyFile2MessageBodyFileMessageBody, SharedSendReplyFile2MessageBodyCompanion, SharedSendReplyFile2MessageBodyMessageSentBody, SharedSendReplyFile2MessageBodyFileMessageBodyCompanion, SharedSendReplyFile2MessageBodyMessageSentBodyCompanion, SharedSendReplyFileMessageBodyFileMessageBody, SharedSendReplyFileMessageBodyCompanion, SharedSendReplyFileMessageBodyMessageSentBody, SharedSendReplyFileMessageBodyFileMessageBodyCompanion, SharedSendReplyFileMessageBodyMessageSentBodyCompanion, SharedSendStickerBodyCompanion, SharedSendStickerBody, SharedSendTemplateMessageToChatBodyCompanion, SharedSendTemplateMessageToChatBody, SharedSpamChatBodyCompanion, SharedSpamChatBody, SharedTakeChatBodyCompanion, SharedTakeChatBody, SharedUpdateInformationListBodyCompanion, SharedUpdateInformationListBody, SharedUpdateNicknameBodyCompanion, SharedUpdateNicknameBody, SharedUpdateNoteBodyCompanion, SharedUpdateNoteBody, SharedUpdateTagBodyCompanion, SharedUpdateTagBody, SharedBaseMessage, SharedBaseMessageDisplay, SharedMessageEntity, SharedMessageDisplayEntity, SharedPlatformType, SharedAgentSocketCompanion, SharedSocketOptionCompanion, SharedStartChatSocketCompanion, SharedTriggerExtendChatTimeSocketCompanion, SharedStatusCode, SharedKoin_coreKoin, SharedHeader, SharedFilterFile, SharedConstants, SharedSocketEvent, SharedChannelTypeCompanion, SharedChatCategoryCompanion, SharedChatMessageTypeCompanion, SharedChatModeCompanion, SharedChatRoomStatusCompanion, SharedChatMessageEntityGetChatListDataEntity, SharedGetFollowerChatEntityChatEntity, SharedChatRoomTypeCompanion, SharedChatStatusCompanion, SharedContactFieldTypeCompanion, SharedContactFieldType, SharedContactsSummaryTypeCompanion, SharedContactsSummaryType, SharedCustomerStatusCompanion, SharedCustomerTypeCompanion, SharedCustomerType, SharedDayNameCompanion, SharedDayName, SharedFieldPermissionTypeCompanion, SharedFileExtensionCompanion, SharedFileExtension, SharedFileTypeCompanion, SharedFilterFileCompanion, SharedLiveChatTypeCompanion, SharedLiveChatType, SharedMenuKeyCompanion, SharedMenuKey, SharedMessageTypeCompanion, SharedOwnerChatStatusCompanion, SharedPercentExpiredMissedTypeCompanion, SharedPercentExpiredMissedType, SharedPercentTypeCompanion, SharedPerformanceTypeCompanion, SharedPerformanceType, SharedResponseStatusTypeCompanion, SharedSortFieldCompanion, SharedSortTypeCompanion, SharedStickerTypeCompanion, SharedSocketClientPlatform, SharedStartChatSocketMapper, SharedTriggerExtendChatTimeSocketMapper, SharedGetChatMessageResultMapper, SharedGetFollowerChatResultMapper, SharedKtor_client_coreHttpResponse, SharedKtor_client_coreHttpClient, SharedKtorClient, SharedContactEntity, SharedDashboardEntity, SharedAcceptChatEntity, SharedSearchMessageEntity, SharedSearchNameEntity, SharedCloseChatEntity, SharedContractCreateLiveChatEntity, SharedStringEntity, SharedAgentFilterEntity, SharedChatMessageEntity, SharedFileFolderListEntity, SharedFileListEntity, SharedGetFollowerChatEntity, SharedGroupAssignEntity, SharedGroupFilterEntity, SharedContactInformationEntity, SharedMasterDataChatEntity, SharedNotificationCountEntity, SharedReplyTemplateEntity, SharedReplyMessageEntity, SharedChatLiveChatEntity, SharedStickerEntity, SharedSwitchModeEntity, SharedSearchTagEntity, SharedTagListEntity, SharedSearchMessageInChatEntity, SharedSendReplyFileMessageBody, SharedOfficialAccountListEntity, SharedUserRoleMenuEntity, SharedLoginEntity, SharedSetNewPasswordEntity, SharedResetPasswordEntity, SharedVerifyOTPEntity, SharedChangePasswordEntity, SharedCheckAppVersionUpdateEntity, SharedCheckUserTokenEntity, SharedSettingNotificationEntity, SharedSettingNotificationAccountEntity, SharedLiveChatSettingEntity, SharedProfileEntity, SharedRoutes, SharedChatMessageRealm, SharedMessageDisplayEntityCompanion, SharedMessageEntityCompanion, SharedChangePasswordEntityCompanion, SharedCheckAppVersionUpdateEntityCheckAppVersionUpdateResponse, SharedCheckAppVersionUpdateEntityCompanion, SharedCheckAppVersionUpdateEntityCheckAppVersionUpdateResponseCompanion, SharedCheckUserTokenEntityUserTokenData, SharedCheckUserTokenEntityCompanion, SharedCheckUserTokenEntityUserTokenDataUserData, SharedCheckUserTokenEntityUserTokenDataCompanion, SharedCheckUserTokenEntityUserTokenDataUserDataCompanion, SharedLiveChatSettingEntityLiveChatSettingResponseEntity, SharedLiveChatSettingEntityCompanion, SharedLiveChatSettingEntityLiveChatSettingResponseEntityCompanion, SharedProfileEntityProfileResponseEntity, SharedProfileEntityCompanion, SharedProfileEntityProfileResponseEntityCompanion, SharedSettingNotificationAccountEntityNotificationAccount, SharedSettingNotificationAccountEntityCompanion, SharedSettingNotificationAccountEntityNotificationAccountCompanion, SharedSettingNotificationEntitySettingNotification, SharedSettingNotificationEntityCompanion, SharedSettingNotificationEntitySettingNotificationSetting, SharedSettingNotificationEntitySettingNotificationCompanion, SharedSettingNotificationEntitySettingNotificationSettingSettingInfo, SharedSettingNotificationEntitySettingNotificationSettingCompanion, SharedSettingNotificationEntitySettingNotificationSettingSettingInfoCompanion, SharedStringEntityCompanion, SharedContactEntityContactResponseEntity, SharedContactEntityCompanion, SharedContactEntityProfile, SharedContactEntityContactDataEntityCompanion, SharedContactEntityContactDataEntity, SharedContactEntityContactResponseEntityCompanion, SharedContactEntityProfileCompanion, SharedDashboardEntityDashboardResponseEntity, SharedDashboardEntityCompanion, SharedDashboardEntityAvgChatDataCompanion, SharedDashboardEntityContactChatInfoCompanion, SharedDashboardEntityInsightData, SharedDashboardEntityContactGraphCompanion, SharedDashboardEntityOverAllData, SharedDashboardEntityHeatMapTableInfo, SharedDashboardEntityContactChatInfo, SharedDashboardEntityContactGraph, SharedDashboardEntityDashboardResponseEntityCompanion, SharedDashboardEntityFollowerDataCompanion, SharedDashboardEntityFollowerData, SharedDashboardEntityGraphDataCompanion, SharedDashboardEntityGrowDataCompanion, SharedDashboardEntityGrowData, SharedDashboardEntityGrowPercentCompanion, SharedDashboardEntityHeatMapTableInfoCompanion, SharedDashboardEntityGraphData, SharedDashboardEntityGrowPercent, SharedDashboardEntityInsightDataCompanion, SharedDashboardEntityPercentData, SharedDashboardEntityAvgChatData, SharedDashboardEntityOverAllDataCompanion, SharedDashboardEntityPercentDataCompanion, SharedAcceptChatEntityAcceptChatResponseEntity, SharedAcceptChatEntityCompanion, SharedAcceptChatEntityAcceptChatResponseEntityCompanion, SharedAgentFilterEntityAgentFilterResponseEntity, SharedAgentFilterEntityCompanion, SharedAgentFilterEntityAgentFilterResponseEntityCompanion, SharedChatLiveChatEntityChatLiveChatResponse, SharedChatLiveChatEntityCompanion, SharedChatLiveChatEntityChatLiveChatResponseFollowerData, SharedChatLiveChatEntityChatLiveChatResponseCompanion, SharedChatLiveChatEntityChatLiveChatResponseFollowerDataProfile, SharedChatLiveChatEntityChatLiveChatResponseFollowerDataLastLiveChat, SharedChatLiveChatEntityChatLiveChatResponseFollowerDataChannelTypeInfo, SharedChatLiveChatEntityChatLiveChatResponseFollowerDataCompanion, SharedChatLiveChatEntityChatLiveChatResponseFollowerDataChannelTypeInfoCompanion, SharedChatLiveChatEntityChatLiveChatResponseFollowerDataLastLiveChatLastChatMsg, SharedChatLiveChatEntityChatLiveChatResponseFollowerDataLastLiveChatCompanion, SharedChatLiveChatEntityChatLiveChatResponseFollowerDataLastLiveChatLastChatMsgCompanion, SharedChatLiveChatEntityChatLiveChatResponseFollowerDataProfileCompanion, SharedChatMessageEntityGetChatListResponseEntity, SharedChatMessageEntityCompanion, SharedChatMessageEntityMessageSentEntity, SharedGetFollowerChatEntityUserInfoEntity, SharedGetFollowerChatEntityQueueInfoEntity, SharedChatMessageEntityLiveChatFollowerEntity, SharedChatMessageEntityLiveChatMemberEntity, SharedChatMessageEntityLastLiveChatEntity, SharedChatMessageEntityMentionEntity, SharedChatMessageEntityProfile, SharedChatMessageEntityGetChatListDataEntityCompanion, SharedChatMessageEntityGetChatListMessageEntityCompanion, SharedChatMessageEntityGetChatListMessageEntity, SharedChatMessageEntityGetChatListResponseEntityCompanion, SharedChatMessageEntityLastLiveChatEntityCompanion, SharedGetFollowerChatEntityProfileFollowerEntity, SharedChatMessageEntityLiveChatFollowerEntityCompanion, SharedChatMessageEntityLiveChatMemberEntityCompanion, SharedChatMessageEntityMentionEntityCompanion, SharedChatMessageEntityVideoMessageEntity, SharedChatMessageEntityMessageSentEntityCompanion, SharedChatMessageEntityProfileCompanion, SharedChatMessageEntityVideoMessageEntityCompanion, SharedCloseChatEntityCompanion, SharedContactInformationEntityContactInformationResponseEntity, SharedContactInformationEntityCompanion, SharedContactInformationEntityContactInformationResponseEntityActivity, SharedContactInformationEntityContactInformationResponseEntityChannelTypeInfo, SharedContactInformationEntityContactInformationResponseEntityProfile, SharedContactInformationEntityContactInformationResponseEntityVerifySystemTags, SharedContactInformationEntityContactInformationResponseEntityVerify, SharedContactInformationEntityContactInformationResponseEntityCompanion, SharedContactInformationEntityContactInformationResponseEntityActivityCompanion, SharedContactInformationEntityContactInformationResponseEntityChannelTypeInfoCompanion, SharedPermissionEntity, SharedContactInformationEntityContactInformationResponseEntityContactDetailCompanion, SharedContactInformationEntityContactInformationResponseEntityMemberImageCompanion, SharedContactInformationEntityContactInformationResponseEntityNoteUser, SharedContactInformationEntityContactInformationResponseEntityNoteCompanion, SharedContactInformationEntityContactInformationResponseEntityNoteUserProfile, SharedContactInformationEntityContactInformationResponseEntityNoteUserCompanion, SharedContactInformationEntityContactInformationResponseEntityNoteUserProfileCompanion, SharedContactInformationEntityContactInformationResponseEntityProfileCompanion, SharedContactInformationEntityContactInformationResponseEntityTagsIdCompanion, SharedContactInformationEntityContactInformationResponseEntityVerifyCompanion, SharedContactInformationEntityContactInformationResponseEntityVerifySystemTagsCompanion, SharedContractCreateLiveChatEntityCompanion, SharedFileFolderListEntityFolderEntity, SharedFileFolderListEntityCompanion, SharedFileFolderListEntityFolderEntityCompanion, SharedFileListEntityFileListResponseEntity, SharedFileListEntityCompanion, SharedFileListEntityFilesEntity, SharedFileListEntityFileListResponseEntityCompanion, SharedFileListEntityFilesEntityCompanion, SharedGetChatRoomListEntityGetChatListResponseEntity, SharedGetChatRoomListEntityCompanion, SharedGetChatRoomListEntityLiveChatFollowerEntity, SharedGetChatRoomListEntityGetChatListDataEntityCompanion, SharedGetChatRoomListEntityGetChatListMessageEntityCompanion, SharedGetChatRoomListEntityGetChatListMessageEntity, SharedGetChatRoomListEntityGetChatListDataEntity, SharedGetChatRoomListEntityGetChatListResponseEntityCompanion, SharedGetChatRoomListEntityLastLiveChatEntityCompanion, SharedGetChatRoomListEntityLiveChatFollowerEntityCompanion, SharedGetFollowerChatEntityGetFollowerChatResponseEntity, SharedGetFollowerChatEntityCompanion, SharedGetFollowerChatEntityAgentCompanion, SharedGetFollowerChatEntityChannelTypeInfoCompanion, SharedGetFollowerChatEntityChannelTypeInfo, SharedGetFollowerChatEntityLiveChatMsgEntity, SharedGetFollowerChatEntityChatEntityCompanion, SharedGetFollowerChatEntityFollowerChatEntityCompanion, SharedGetFollowerChatEntityFollowerChatEntity, SharedGetFollowerChatEntityGetFollowerChatResponseEntityCompanion, SharedGetFollowerChatEntityLiveChatMsgItemEntity, SharedGetFollowerChatEntityLiveChatMsgEntityCompanion, SharedGetFollowerChatEntityLiveChatMsgItemEntityCompanion, SharedGetFollowerChatEntityProfileFollowerEntityCompanion, SharedGetFollowerChatEntityQueueInfoSettingEntity, SharedGetFollowerChatEntityAgent, SharedGetFollowerChatEntityQueueInfoEntityCompanion, SharedGetFollowerChatEntityQueueInfoSettingEntityCompanion, SharedGetFollowerChatEntitySocketUserEntityCompanion, SharedGetFollowerChatEntitySocketUserEntity, SharedGetFollowerChatEntityUserInfoEntityCompanion, SharedGroupAssignEntityGroupFilterResponseEntity, SharedGroupAssignEntityCompanion, SharedGroupAssignEntityGroupFilterResponseEntityAgentInfo, SharedGroupAssignEntityGroupFilterResponseEntityCompanion, SharedGroupAssignEntityGroupFilterResponseEntityAgentInfoCompanion, SharedGroupFilterEntityGroupFilterResponseEntity, SharedGroupFilterEntityCompanion, SharedGroupFilterEntityGroupFilterResponseEntityAgentInfo, SharedGroupFilterEntityGroupFilterResponseEntityCompanion, SharedGroupFilterEntityGroupFilterResponseEntityAgentInfoCompanion, SharedMasterDataChatEntityMasterDataChatResponseEntity, SharedMasterDataChatEntityCompanion, SharedMasterDataChatEntityChannelTypeCompanion, SharedMasterDataChatEntityChatTypeDetail, SharedMasterDataChatEntityChatTypeCompanion, SharedMasterDataChatEntityChatTypeDetailCompanion, SharedMasterDataChatEntityChannelType, SharedMasterDataChatEntityChatType, SharedMasterDataChatEntityMasterDataChatResponseEntityCompanion, SharedNotificationCountEntityNotificationCountResponseEntity, SharedNotificationCountEntityCompanion, SharedNotificationCountEntityNotificationCountResponseEntityCompanion, SharedPermissionEntityCompanion, SharedPermissionEntityActionCompanion, SharedReplyMessageEntityReplyMessageDetailEntity, SharedReplyMessageEntityCompanion, SharedReplyMessageEntityReplyMessageTemplateEntity, SharedReplyMessageEntityReplyMessageDetailEntityCompanion, SharedReplyMessageEntityReplyMessageTemplateEntityCompanion, SharedReplyTemplateEntityTemplateGroupEntity, SharedReplyTemplateEntityCompanion, SharedReplyTemplateEntityReplyEntityCompanion, SharedReplyTemplateEntityReplyEntity, SharedReplyTemplateEntityTemplateGroupEntityCompanion, SharedSearchMessageEntitySearchMessageResponse, SharedSearchMessageEntityCompanion, SharedSearchMessageEntitySearchMessageResponseMessage, SharedSearchMessageEntitySearchMessageResponseCompanion, SharedSearchMessageEntitySearchMessageResponseMessageChannelTypeInfo, SharedSearchMessageEntitySearchMessageResponseMessageProfile, SharedSearchMessageEntitySearchMessageResponseMessageCompanion, SharedSearchMessageEntitySearchMessageResponseMessageChannelTypeInfoCompanion, SharedSearchMessageEntitySearchMessageResponseMessageProfileCompanion, SharedSearchMessageInChatEntitySearchMessageInChatResponse, SharedSearchMessageInChatEntityCompanion, SharedSearchMessageInChatEntitySearchMessageInChatResponseMessage, SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageFoundAll, SharedSearchMessageInChatEntitySearchMessageInChatResponseCompanion, SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageUser, SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageMessageInfo, SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageMember, SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageCompanion, SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageMemberCompanion, SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageMessageInfoCompanion, SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageUserCompanion, SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageFoundAllCompanion, SharedSearchNameEntitySearchNameResponse, SharedSearchNameEntityCompanion, SharedSearchNameEntitySearchNameResponseFollowerData, SharedSearchNameEntitySearchNameResponseCompanion, SharedSearchNameEntitySearchNameResponseFollowerDataCompanion, SharedSearchTagEntitySearchTagResponse, SharedSearchTagEntityCompanion, SharedSearchTagEntitySearchTagResponseCompanion, SharedStickerEntityStickerEntityResponse, SharedStickerEntityCompanion, SharedStickerEntityStickerEntityResponseSticker, SharedStickerEntityStickerEntityResponseCompanion, SharedStickerEntityStickerEntityResponseStickerCompanion, SharedStorageInfoEntityStorageInfoResponseEntity, SharedStorageInfoEntityCompanion, SharedStorageInfoEntityDiskInfoEntityCompanion, SharedStorageInfoEntityDiskInfoEntity, SharedStorageInfoEntityStorageInfoResponseEntityCompanion, SharedSwitchModeEntitySwitchModeResponseEntity, SharedSwitchModeEntityCompanion, SharedSwitchModeEntitySwitchModeResponseEntityCompanion, SharedTagListEntityTagListResponseEntity, SharedTagListEntityCompanion, SharedTagListEntityTagListResponseEntityCompanion, SharedTagListEntityTagListResponseEntityTagGroupTag, SharedTagListEntityTagListResponseEntityTagCompanion, SharedTagListEntityTagListResponseEntityTag, SharedTagListEntityTagListResponseEntityTagGroupTagCompanion, SharedTagListEntityTagListResponseEntityTagSocialIdCompanion, SharedTagListEntityTagListResponseEntityTagSocialId, SharedCheckAppStatusEntityCompanion, SharedLoginEntityLoginResponseEntity, SharedLoginEntityCompanion, SharedLoginEntityBotInfoCompanion, SharedLoginEntityChannelTypeInfoEntity, SharedLoginEntityChannelEntityCompanion, SharedLoginEntityChannelTypeInfoEntityCompanion, SharedLoginEntityRoleEntity, SharedLoginEntityCompanyInfoEntity, SharedLoginEntityChannelEntity, SharedLoginEntitySetting, SharedLoginEntityCompanyDataEntityCompanion, SharedOfficialAccountListEntityPackageInfoEntity, SharedLoginEntityCompanyInfoEntityCompanion, SharedLoginEntityCompanyDataEntity, SharedLoginEntityLoginResponseEntityCompanion, SharedLoginEntityRoleEntityCompanion, SharedLoginEntityBotInfo, SharedLoginEntitySettingCompanion, SharedOfficialAccountListEntityOfficialAccountResponseEntity, SharedOfficialAccountListEntityCompanion, SharedOfficialAccountListEntityChannelTypeInfoEntity, SharedOfficialAccountListEntityChannelEntityCompanion, SharedOfficialAccountListEntityChannelTypeInfoEntityCompanion, SharedOfficialAccountListEntityCompanyInfoEntityCompanion, SharedOfficialAccountListEntityTotalDataEntity, SharedOfficialAccountListEntityOfficialAccountResponseEntityCompanion, SharedOfficialAccountListEntityPackageInfoOptionEntity, SharedOfficialAccountListEntityPackageInfoEntityCompanion, SharedOfficialAccountListEntityPackageInfoOptionEntityCompanion, SharedOfficialAccountListEntityRolesListEntityCompanion, SharedOfficialAccountListEntityChannelEntity, SharedOfficialAccountListEntityCompanyInfoEntity, SharedOfficialAccountListEntityRolesListEntity, SharedOfficialAccountListEntityTotalDataEntityCompanion, SharedResetPasswordEntityResetPasswordResponseEntity, SharedResetPasswordEntityCompanion, SharedResetPasswordEntityResetPasswordResponseEntityCompanion, SharedSetNewPasswordEntitySetNewPasswordResponseEntity, SharedSetNewPasswordEntityCompanion, SharedSetNewPasswordEntitySetNewPasswordResponseEntityCompanion, SharedUserRoleMenuEntityUserRoleMenuResponseEntity, SharedUserRoleMenuEntityCompanion, SharedUserRoleMenuEntityUserRoleMenuResponseEntityMenuType, SharedUserRoleMenuEntityUserRoleMenuResponseEntityCompanion, SharedUserRoleMenuEntityUserRoleMenuResponseEntityMenuTypeMenu, SharedUserRoleMenuEntityUserRoleMenuResponseEntityMenuTypeCompanion, SharedUserRoleMenuEntityUserRoleMenuResponseEntityMenuTypeMenuCompanion, SharedVerifyOTPEntityVerifyOTPResponseEntity, SharedVerifyOTPEntityCompanion, SharedVerifyOTPEntityVerifyOTPResponseEntityCompanion, SharedStartChatSocketEntityCompanion, SharedStartChatSocketEntity, SharedTriggerExtendChatTimeSocketEntityCompanion, SharedTriggerExtendChatTimeSocketEntity, SharedLoginResultMapper, SharedGetOfficialAccountResultMapper, SharedResetPasswordMapper, SharedSetNewPasswordMapper, SharedVerifyOTPMapper, SharedBaseMapper, SharedUserRoleMenuMapper, SharedContactResultMapper, SharedDashboardResultMapper, SharedStringResultMapper, SharedAcceptChatResultMapper, SharedCloseChatResultMapper, SharedChatRoomListMapper, SharedContactInformationResultMapper, SharedContactNoteResultMapper, SharedGetReplyTemplateResultMapper, SharedReplyMessageResultMapper, SharedFileFolderListResultMapper, SharedFileListResultMapper, SharedAgentFilterMapper, SharedGroupFilterMapper, SharedAgentAssignMapper, SharedGroupAssignMapper, SharedMasterDataChatMapper, SharedGetAgentChatStatusResultMapper, SharedSearchNameMapper, SharedTagListMapper, SharedSearchTagMapper, SharedStickerResultMapper, SharedGetSearchFollowerMapper, SharedSearchMessageMapper, SharedSearchMessageInChatMapper, SharedSwitchModeMapper, SharedNotificationCountMapper, SharedProfileResultMapper, SharedChangePasswordResultMapper, SharedCheckUserTokenResultMapper, SharedSettingNotificationAccountMapper, SharedSettingNotificationMapper, SharedLiveChatSettingMapper, SharedCheckAppVersionMapper, SharedVolumeUtils, SharedDashboardResultMapperCompanion, SharedKotlinTriple<__covariant A, __covariant B, __covariant C>, SharedMasterDataChatMapperChatTypeResult, SharedBlocks, SharedBlocksContainer, SharedBlocksTypes, SharedBubble, SharedBubbleImageSize, SharedBubbleSize, SharedBubbleSpacing, SharedCSSClass, SharedCSSClassAlign, SharedCSSClassAlignItems, SharedCSSClassAspectMode, SharedCSSClassBase, SharedCSSClassBlock, SharedCSSClassBoxTypeProperties, SharedCSSClassBoxTypePropertiesValue, SharedCSSClassButton, SharedCSSClassButtonTypeProperties, SharedCSSClassButtonTypePropertiesValue, SharedCSSClassCarouselClass, SharedCSSClassComponents, SharedCSSClassDirection, SharedCSSClassGravity, SharedCSSClassIconTypeProperties, SharedCSSClassIconTypePropertiesValue, SharedCSSClassImageTypeProperties, SharedCSSClassImageTypePropertiesValue, SharedCSSClassJustifyContent, SharedCSSClassLayout, SharedCSSClassPosition, SharedCSSClassSeparatorTypeProperties, SharedCSSClassSeparatorTypePropertiesValue, SharedCSSClassSize, SharedCSSClassSpacerTypeProperties, SharedCSSClassSpacerTypePropertiesValue, SharedCSSClassSpanTypeProperties, SharedCSSClassSpanTypePropertiesValue, SharedCSSClassTextAlign, SharedCSSClassTextTypeProperties, SharedCSSClassTextTypePropertiesValue, SharedComponents, SharedComponentsTypes, SharedComponentsViews, SharedMapperObject, SharedMessages, SharedMessagesViews, SharedMessagesViewsType, SharedProperties, SharedPropertiesKey, SharedPropertiesKeyBackground, SharedPropertiesKeyBase, SharedPropertiesKeyBubble, SharedPropertiesKeyButton, SharedPropertiesKeyImage, SharedPropertiesKeyOffset, SharedPropertiesKeyPadding, SharedPropertiesKeyStyle, SharedPropertiesKeyText, SharedPropertiesValue, SharedPropertiesValueAlign, SharedPropertiesValueAlignItems, SharedPropertiesValueAspectMode, SharedPropertiesValueBackgroundType, SharedPropertiesValueBackgroundValue, SharedPropertiesValueBubbleSize, SharedPropertiesValueButtonHeight, SharedPropertiesValueButtonStyle, SharedPropertiesValueComponents, SharedPropertiesValueDecoration, SharedPropertiesValueDirection, SharedPropertiesValueGravity, SharedPropertiesValueImageSize, SharedPropertiesValueImageSizeValue, SharedPropertiesValueJustifyContent, SharedPropertiesValueLayout, SharedPropertiesValueMargin, SharedPropertiesValueMarginValue, SharedPropertiesValuePosition, SharedPropertiesValueSpacerSize, SharedPropertiesValueSpacerSizeValue, SharedPropertiesValueSpacing, SharedPropertiesValueSpacingValue, SharedPropertiesValueSpanSize, SharedPropertiesValueSpanSizeValue, SharedPropertiesValueStyle, SharedPropertiesValueTextSize, SharedPropertiesValueTextSizeValue, SharedPropertiesValueWeight, SharedWebUtils, SharedKoin_coreModule, SharedKoin_coreKoinApplication, SharedKotlinx_serialization_jsonJsonElementCompanion, SharedKotlinThrowable, SharedKotlinException, SharedKotlinRuntimeException, SharedKotlinIllegalStateException, SharedKtor_client_coreHttpRequestData, SharedKtor_client_coreHttpResponseData, SharedKtor_client_coreHttpClientEngineConfig, SharedKotlinx_coroutines_coreCoroutineDispatcher, SharedKoin_coreScope, SharedKoin_coreParametersHolder, SharedKotlinLazyThreadSafetyMode, SharedKoin_coreLogger, SharedKoin_coreInstanceRegistry, SharedKoin_corePropertyRegistry, SharedKoin_coreScopeRegistry, SharedKtor_client_coreHttpClientCall, SharedKtor_utilsGMTDate, SharedKtor_httpHttpStatusCode, SharedKtor_httpHttpProtocolVersion, SharedKtor_client_coreHttpClientConfig<T>, SharedKtor_eventsEvents, SharedKtor_client_coreHttpReceivePipeline, SharedKtor_client_coreHttpRequestPipeline, SharedKtor_client_coreHttpResponsePipeline, SharedKtor_client_coreHttpSendPipeline, SharedKoin_coreInstanceFactory<T>, SharedKoin_coreScopeDSL, SharedKoin_coreSingleInstanceFactory<T>, SharedKoin_coreKoinApplicationCompanion, SharedKoin_coreLevel, SharedKtor_httpUrl, SharedKtor_httpHttpMethod, SharedKtor_httpOutgoingContent, SharedKtor_client_coreProxyConfig, SharedKotlinAbstractCoroutineContextElement, SharedKotlinx_coroutines_coreCoroutineDispatcherKey, SharedKotlinx_serialization_coreSerializersModule, SharedKotlinx_serialization_coreSerialKind, SharedKoin_coreLockable, SharedKoin_coreParametersHolderCompanion, SharedKoin_coreScopeRegistryCompanion, SharedKtor_client_coreHttpClientCallCompanion, SharedKtor_utilsTypeInfo, SharedKtor_ioMemory, SharedKtor_ioChunkBuffer, SharedKotlinByteArray, SharedKtor_ioBuffer, SharedKtor_ioByteReadPacket, SharedKtor_utilsGMTDateCompanion, SharedKtor_utilsWeekDay, SharedKtor_utilsMonth, SharedKtor_httpHttpStatusCodeCompanion, SharedKtor_httpHttpProtocolVersionCompanion, SharedKtor_utilsAttributeKey<T>, SharedKtor_eventsEventDefinition<T>, SharedKtor_utilsPipelinePhase, SharedKtor_utilsPipeline<TSubject, TContext>, SharedKtor_client_coreHttpReceivePipelinePhases, SharedKotlinUnit, SharedKtor_client_coreHttpRequestPipelinePhases, SharedKtor_client_coreHttpRequestBuilder, SharedKtor_client_coreHttpResponsePipelinePhases, SharedKtor_client_coreHttpResponseContainer, SharedKtor_client_coreHttpSendPipelinePhases, SharedKoin_coreBeanDefinition<T>, SharedKoin_coreInstanceFactoryCompanion, SharedKoin_coreInstanceContext, SharedKtor_httpUrlCompanion, SharedKtor_httpURLProtocol, SharedKtor_httpHttpMethodCompanion, SharedKtor_httpContentType, SharedKotlinCancellationException, SharedKotlinAbstractCoroutineContextKey<B, E>, SharedKtor_ioMemoryCompanion, SharedKtor_ioBufferCompanion, SharedKtor_ioChunkBufferCompanion, SharedKotlinByteIterator, SharedKtor_ioInputCompanion, SharedKtor_ioInput, SharedKtor_ioByteReadPacketCompanion, SharedKtor_utilsWeekDayCompanion, SharedKtor_utilsMonthCompanion, SharedKtor_httpHeadersBuilder, SharedKtor_client_coreHttpRequestBuilderCompanion, SharedKtor_httpURLBuilder, SharedKoin_coreKind, SharedKoin_coreCallbacks<T>, SharedKtor_httpURLProtocolCompanion, SharedKtor_httpHeaderValueParam, SharedKtor_httpHeaderValueWithParametersCompanion, SharedKtor_httpHeaderValueWithParameters, SharedKtor_httpContentTypeCompanion, SharedKotlinKTypeProjection, SharedKtor_utilsStringValuesBuilderImpl, SharedKtor_httpURLBuilderCompanion, SharedKotlinx_coroutines_coreAtomicDesc, SharedKotlinx_coroutines_coreLockFreeLinkedListNodePrepareOp, SharedKotlinKVariance, SharedKotlinKTypeProjectionCompanion, SharedKotlinx_coroutines_coreAtomicOp<__contravariant T>, SharedKotlinx_coroutines_coreOpDescriptor, SharedKotlinx_coroutines_coreLockFreeLinkedListNode, SharedKotlinx_coroutines_coreLockFreeLinkedListNodeAbstractAtomicDesc, SharedKotlinx_coroutines_coreLockFreeLinkedListNodeAddLastDesc<T>, SharedKotlinx_coroutines_coreLockFreeLinkedListNodeRemoveFirstDesc<T>;

@protocol SharedKotlinComparable, SharedSocketClientEventPlatform, SharedKtor_client_coreHttpClientEngine, SharedIAuthRepository, SharedIContactRepository, SharedIDashboardRepository, SharedILiveChatRepository, SharedISettingRepository, SharedISocketClientEvent, SharedISocketChatEvent, SharedKotlinx_serialization_coreKSerializer, SharedKoin_coreKoinComponent, SharedMapper, SharedMessage, SharedKotlinIterator, SharedKtor_client_coreHttpClientEngineCapability, SharedKotlinCoroutineContext, SharedKotlinx_coroutines_coreCoroutineScope, SharedKtor_ioCloseable, SharedKotlinx_serialization_coreEncoder, SharedKotlinx_serialization_coreSerialDescriptor, SharedKotlinx_serialization_coreSerializationStrategy, SharedKotlinx_serialization_coreDecoder, SharedKotlinx_serialization_coreDeserializationStrategy, SharedKoin_coreKoinScopeComponent, SharedKoin_coreQualifier, SharedKotlinKClass, SharedKotlinLazy, SharedKtor_httpHeaders, SharedKtor_httpHttpMessage, SharedKtor_ioByteReadChannel, SharedKtor_utilsAttributes, SharedKotlinx_coroutines_coreJob, SharedKotlinCoroutineContextKey, SharedKotlinCoroutineContextElement, SharedKotlinContinuation, SharedKotlinContinuationInterceptor, SharedKotlinx_coroutines_coreRunnable, SharedKotlinx_serialization_coreCompositeEncoder, SharedKotlinAnnotation, SharedKotlinx_serialization_coreCompositeDecoder, SharedKoin_coreScopeCallback, SharedKotlinKDeclarationContainer, SharedKotlinKAnnotatedElement, SharedKotlinKClassifier, SharedKotlinMapEntry, SharedKtor_utilsStringValues, SharedKtor_client_coreHttpRequest, SharedKtor_ioReadSession, SharedKotlinSuspendFunction1, SharedKotlinAppendable, SharedKtor_client_coreHttpClientPlugin, SharedKotlinx_coroutines_coreDisposableHandle, SharedKotlinSuspendFunction2, SharedKtor_httpParameters, SharedKotlinx_coroutines_coreChildHandle, SharedKotlinx_coroutines_coreChildJob, SharedKotlinSequence, SharedKotlinx_coroutines_coreSelectClause0, SharedKotlinx_serialization_coreSerializersModuleCollector, SharedKotlinKType, SharedKtor_ioObjectPool, SharedKotlinFunction, SharedKtor_httpHttpMessageBuilder, SharedKotlinx_coroutines_coreParentJob, SharedKotlinx_coroutines_coreSelectInstance, SharedKotlinSuspendFunction0, SharedKtor_utilsStringValuesBuilder, SharedKtor_httpParametersBuilder;

NS_ASSUME_NONNULL_BEGIN
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunknown-warning-option"
#pragma clang diagnostic ignored "-Wincompatible-property-type"
#pragma clang diagnostic ignored "-Wnullability"

#pragma push_macro("_Nullable_result")
#if !__has_feature(nullability_nullable_result)
#undef _Nullable_result
#define _Nullable_result _Nullable
#endif

__attribute__((swift_name("KotlinBase")))
@interface SharedBase : NSObject
- (instancetype)init __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (void)initialize __attribute__((objc_requires_super));
@end

@interface SharedBase (SharedBaseCopying) <NSCopying>
@end

__attribute__((swift_name("KotlinMutableSet")))
@interface SharedMutableSet<ObjectType> : NSMutableSet<ObjectType>
@end

__attribute__((swift_name("KotlinMutableDictionary")))
@interface SharedMutableDictionary<KeyType, ObjectType> : NSMutableDictionary<KeyType, ObjectType>
@end

@interface NSError (NSErrorSharedKotlinException)
@property (readonly) id _Nullable kotlinException;
@end

__attribute__((swift_name("KotlinNumber")))
@interface SharedNumber : NSNumber
- (instancetype)initWithChar:(char)value __attribute__((unavailable));
- (instancetype)initWithUnsignedChar:(unsigned char)value __attribute__((unavailable));
- (instancetype)initWithShort:(short)value __attribute__((unavailable));
- (instancetype)initWithUnsignedShort:(unsigned short)value __attribute__((unavailable));
- (instancetype)initWithInt:(int)value __attribute__((unavailable));
- (instancetype)initWithUnsignedInt:(unsigned int)value __attribute__((unavailable));
- (instancetype)initWithLong:(long)value __attribute__((unavailable));
- (instancetype)initWithUnsignedLong:(unsigned long)value __attribute__((unavailable));
- (instancetype)initWithLongLong:(long long)value __attribute__((unavailable));
- (instancetype)initWithUnsignedLongLong:(unsigned long long)value __attribute__((unavailable));
- (instancetype)initWithFloat:(float)value __attribute__((unavailable));
- (instancetype)initWithDouble:(double)value __attribute__((unavailable));
- (instancetype)initWithBool:(BOOL)value __attribute__((unavailable));
- (instancetype)initWithInteger:(NSInteger)value __attribute__((unavailable));
- (instancetype)initWithUnsignedInteger:(NSUInteger)value __attribute__((unavailable));
+ (instancetype)numberWithChar:(char)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedChar:(unsigned char)value __attribute__((unavailable));
+ (instancetype)numberWithShort:(short)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedShort:(unsigned short)value __attribute__((unavailable));
+ (instancetype)numberWithInt:(int)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedInt:(unsigned int)value __attribute__((unavailable));
+ (instancetype)numberWithLong:(long)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedLong:(unsigned long)value __attribute__((unavailable));
+ (instancetype)numberWithLongLong:(long long)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedLongLong:(unsigned long long)value __attribute__((unavailable));
+ (instancetype)numberWithFloat:(float)value __attribute__((unavailable));
+ (instancetype)numberWithDouble:(double)value __attribute__((unavailable));
+ (instancetype)numberWithBool:(BOOL)value __attribute__((unavailable));
+ (instancetype)numberWithInteger:(NSInteger)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedInteger:(NSUInteger)value __attribute__((unavailable));
@end

__attribute__((swift_name("KotlinByte")))
@interface SharedByte : SharedNumber
- (instancetype)initWithChar:(char)value;
+ (instancetype)numberWithChar:(char)value;
@end

__attribute__((swift_name("KotlinUByte")))
@interface SharedUByte : SharedNumber
- (instancetype)initWithUnsignedChar:(unsigned char)value;
+ (instancetype)numberWithUnsignedChar:(unsigned char)value;
@end

__attribute__((swift_name("KotlinShort")))
@interface SharedShort : SharedNumber
- (instancetype)initWithShort:(short)value;
+ (instancetype)numberWithShort:(short)value;
@end

__attribute__((swift_name("KotlinUShort")))
@interface SharedUShort : SharedNumber
- (instancetype)initWithUnsignedShort:(unsigned short)value;
+ (instancetype)numberWithUnsignedShort:(unsigned short)value;
@end

__attribute__((swift_name("KotlinInt")))
@interface SharedInt : SharedNumber
- (instancetype)initWithInt:(int)value;
+ (instancetype)numberWithInt:(int)value;
@end

__attribute__((swift_name("KotlinUInt")))
@interface SharedUInt : SharedNumber
- (instancetype)initWithUnsignedInt:(unsigned int)value;
+ (instancetype)numberWithUnsignedInt:(unsigned int)value;
@end

__attribute__((swift_name("KotlinLong")))
@interface SharedLong : SharedNumber
- (instancetype)initWithLongLong:(long long)value;
+ (instancetype)numberWithLongLong:(long long)value;
@end

__attribute__((swift_name("KotlinULong")))
@interface SharedULong : SharedNumber
- (instancetype)initWithUnsignedLongLong:(unsigned long long)value;
+ (instancetype)numberWithUnsignedLongLong:(unsigned long long)value;
@end

__attribute__((swift_name("KotlinFloat")))
@interface SharedFloat : SharedNumber
- (instancetype)initWithFloat:(float)value;
+ (instancetype)numberWithFloat:(float)value;
@end

__attribute__((swift_name("KotlinDouble")))
@interface SharedDouble : SharedNumber
- (instancetype)initWithDouble:(double)value;
+ (instancetype)numberWithDouble:(double)value;
@end

__attribute__((swift_name("KotlinBoolean")))
@interface SharedBoolean : SharedNumber
- (instancetype)initWithBool:(BOOL)value;
+ (instancetype)numberWithBool:(BOOL)value;
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JwtParser")))
@interface SharedJwtParser : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> * _Nullable)parseToJsonObjectJwtToken:(NSString *)jwtToken __attribute__((swift_name("parseToJsonObject(jwtToken:)")));
@end

__attribute__((swift_name("KotlinComparable")))
@protocol SharedKotlinComparable
@required
- (int32_t)compareToOther:(id _Nullable)other __attribute__((swift_name("compareTo(other:)")));
@end

__attribute__((swift_name("KotlinEnum")))
@interface SharedKotlinEnum<E> : SharedBase <SharedKotlinComparable>
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedKotlinEnumCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)compareToOther:(E)other __attribute__((swift_name("compareTo(other:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) int32_t ordinal __attribute__((swift_name("ordinal")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Platform")))
@interface SharedPlatform : SharedKotlinEnum<SharedPlatform *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPlatform *android __attribute__((swift_name("android")));
@property (class, readonly) SharedPlatform *ios __attribute__((swift_name("ios")));
+ (SharedKotlinArray<SharedPlatform *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((swift_name("SocketClientEventPlatform")))
@protocol SharedSocketClientEventPlatform
@required
- (void)connect __attribute__((swift_name("connect()")));
- (void)disconnect __attribute__((swift_name("disconnect()")));
- (void)emitEvent:(NSString *)event objects:(id)objects __attribute__((swift_name("emit(event:objects:)")));
- (void)emitEvent:(NSString *)event objects_:(NSArray<id> *)objects __attribute__((swift_name("emit(event:objects_:)")));
- (void)doInitBaseURL:(NSString *)baseURL nameSpace:(NSString *)nameSpace __attribute__((swift_name("doInit(baseURL:nameSpace:)")));
- (BOOL)isConnected __attribute__((swift_name("isConnected()")));
- (void)offEvent:(NSString *)event __attribute__((swift_name("off(event:)")));
- (void)offConnectErrorEvent __attribute__((swift_name("offConnectErrorEvent()")));
- (void)offConnectEvent __attribute__((swift_name("offConnectEvent()")));
- (void)offDisconnectEvent __attribute__((swift_name("offDisconnectEvent()")));
- (void)onEvent:(NSString *)event callback:(void (^)(id))callback __attribute__((swift_name("on(event:callback:)")));
- (void)onConnectErrorEventCallback:(void (^)(void))callback __attribute__((swift_name("onConnectErrorEvent(callback:)")));
- (void)onConnectEventCallback:(void (^)(void))callback __attribute__((swift_name("onConnectEvent(callback:)")));
- (void)onDisconnectEventCallback:(void (^)(void))callback __attribute__((swift_name("onDisconnectEvent(callback:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SocketClientPlatform")))
@interface SharedSocketClientPlatform : SharedBase <SharedSocketClientEventPlatform>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)connect __attribute__((swift_name("connect()")));
- (void)disconnect __attribute__((swift_name("disconnect()")));
- (void)emitEvent:(NSString *)event objects:(id)objects __attribute__((swift_name("emit(event:objects:)")));
- (void)emitEvent:(NSString *)event objects_:(NSArray<id> *)objects __attribute__((swift_name("emit(event:objects_:)")));
- (void)doInitBaseURL:(NSString *)baseURL nameSpace:(NSString *)nameSpace __attribute__((swift_name("doInit(baseURL:nameSpace:)")));
- (BOOL)isConnected __attribute__((swift_name("isConnected()")));
- (void)offEvent:(NSString *)event __attribute__((swift_name("off(event:)")));
- (void)offConnectErrorEvent __attribute__((swift_name("offConnectErrorEvent()")));
- (void)offConnectEvent __attribute__((swift_name("offConnectEvent()")));
- (void)offDisconnectEvent __attribute__((swift_name("offDisconnectEvent()")));
- (void)onEvent:(NSString *)event callback:(void (^)(id))callback __attribute__((swift_name("on(event:callback:)")));
- (void)onConnectErrorEventCallback:(void (^)(void))callback __attribute__((swift_name("onConnectErrorEvent(callback:)")));
- (void)onConnectEventCallback:(void (^)(void))callback __attribute__((swift_name("onConnectEvent(callback:)")));
- (void)onDisconnectEventCallback:(void (^)(void))callback __attribute__((swift_name("onDisconnectEvent(callback:)")));
@end

__attribute__((swift_name("IAuthRepository")))
@protocol SharedIAuthRepository
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)ConfirmNewPasswordConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine body:(SharedConfirmNewPasswordBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("ConfirmNewPassword(config:engine:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getOfficialAccountListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine searchName:(NSString *)searchName completionHandler:(void (^)(SharedNetworkResponse<SharedGetOfficialAccountResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getOfficialAccountList(config:engine:searchName:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getUserMenuConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedUserRoleMenuResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getUserMenu(config:engine:roleId:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)loginWithUserConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine body:(SharedLoginBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedLoginResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("loginWithUser(config:engine:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)resendOTPConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine link:(NSString *)link completionHandler:(void (^)(SharedNetworkResponse<SharedSetNewPasswordResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("resendOTP(config:engine:link:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)resetPasswordConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine body:(SharedResetPasswordBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedResetPasswordResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("resetPassword(config:engine:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setNewPasswordConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine link:(NSString *)link completionHandler:(void (^)(SharedNetworkResponse<SharedSetNewPasswordResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setNewPassword(config:engine:link:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)verifyOTPConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine body:(SharedVerifyOTPBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("verifyOTP(config:engine:body:completionHandler:)")));
@end

__attribute__((swift_name("IContactRepository")))
@protocol SharedIContactRepository
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getContactListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId channel_type_id:(NSArray<NSString *> *)channel_type_id contact_type:(NSArray<NSString *> *)contact_type customer_status:(NSArray<NSString *> *)customer_status customer_type:(NSArray<NSString *> *)customer_type page_index:(int32_t)page_index page_size:(int32_t)page_size search:(NSString *)search sortAsc:(int32_t)sortAsc sortField:(NSString *)sortField tag:(NSArray<NSString *> *)tag completionHandler:(void (^)(SharedNetworkResponse<SharedContactResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getContactList(config:engine:channelId:companyId:channelLists:roleId:channel_type_id:contact_type:customer_status:customer_type:page_index:page_size:search:sortAsc:sortField:tag:completionHandler:)")));
@end

__attribute__((swift_name("IDashboardRepository")))
@protocol SharedIDashboardRepository
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getDashboardConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channel_id:(NSString * _Nullable)channel_id channel_lists:(NSArray<NSString *> * _Nullable)channel_lists company_id:(NSString *)company_id role_id:(NSString *)role_id channelType:(NSArray<NSString *> *)channelType startDate:(NSString *)startDate endData:(NSString *)endData completionHandler:(void (^)(SharedNetworkResponse<SharedDashboardResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getDashboard(config:engine:channel_id:channel_lists:company_id:role_id:channelType:startDate:endData:completionHandler:)")));
@end

__attribute__((swift_name("ILiveChatRepository")))
@protocol SharedILiveChatRepository
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)acceptChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId agentId:(NSString *)agentId completionHandler:(void (^)(SharedNetworkResponse<SharedAcceptChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("acceptChat(config:engine:channelId:companyId:channelLists:followerId:agentId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)addTagConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId tagId:(NSString *)tagId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("addTag(config:engine:roleId:channelId:companyId:channelLists:followerId:tagId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)assignToAgentConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId userId:(NSString *)userId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("assignToAgent(config:engine:channelId:companyId:channelLists:roleId:followerId:liveChatId:userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)assignToGroupConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId groupId:(NSString *)groupId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("assignToGroup(config:engine:channelId:companyId:channelLists:roleId:followerId:liveChatId:groupId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)chatSearchMessageConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId text:(NSString *)text skip:(int32_t)skip limit:(int32_t)limit channelList:(NSArray<NSString *> *)channelList completionHandler:(void (^)(SharedNetworkResponse<SharedSearchMessageResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("chatSearchMessage(config:engine:channelId:companyId:channelLists:roleId:text:skip:limit:channelList:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)chatSearchNameConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId text:(NSString *)text skip:(int32_t)skip limit:(int32_t)limit channel:(NSArray<NSString *> *)channel completionHandler:(void (^)(SharedNetworkResponse<SharedSearchNameResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("chatSearchName(config:engine:channelId:companyId:channelLists:roleId:text:skip:limit:channel:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)closeChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId agentId:(NSString *)agentId liveChatId:(NSString *)liveChatId completionHandler:(void (^)(SharedNetworkResponse<SharedGetFollowerChatResultChatRoomList *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("closeChat(config:engine:channelId:companyId:channelLists:followerId:agentId:liveChatId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createNoteConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId text:(NSString *)text completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createNote(config:engine:roleId:channelId:companyId:channelLists:followerId:text:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createTagConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId text:(NSString *)text completionHandler:(void (^)(SharedNetworkResponse<NSString *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createTag(config:engine:roleId:channelId:companyId:channelLists:followerId:text:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteNoteConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId no:(int32_t)no completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteNote(config:engine:roleId:channelId:companyId:channelLists:followerId:no:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteTagConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId tagId:(NSString *)tagId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteTag(config:engine:roleId:channelId:companyId:channelLists:followerId:tagId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)extendLiveChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId liveChatId:(NSString *)liveChatId completionHandler:(void (^)(SharedNetworkResponse<SharedAcceptChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("extendLiveChat(config:engine:channelId:companyId:channelLists:roleId:liveChatId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAgentAssignListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedAgentAssignResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAgentAssignList(config:engine:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAgentChatStatusConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedGetAgentChatStatusResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAgentChatStatus(config:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAgentFilterListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists searchName:(NSString *)searchName completionHandler:(void (^)(SharedNetworkResponse<SharedAgentFilterResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAgentFilterList(config:engine:channelId:companyId:channelLists:searchName:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getChatMessageConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId startID:(NSString *)startID endID:(NSString *)endID fromID:(NSString *)fromID toID:(NSString *)toID limit:(int32_t)limit hide:(BOOL)hide oldResult:(SharedGetChatMessageResult * _Nullable)oldResult userId:(NSString *)userId completionHandler:(void (^)(SharedNetworkResponse<SharedGetChatMessageResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getChatMessage(config:engine:roleId:channelId:companyId:channelLists:followerId:startID:endID:fromID:toID:limit:hide:oldResult:userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFileFolderListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedFileFolderListResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFileFolderList(config:engine:roleId:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFileListByFolderIdConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists folderId:(NSString *)folderId sortType:(SharedSortType *)sortType sortField:(SharedSortField *)sortField completionHandler:(void (^)(SharedNetworkResponse<SharedFileListResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFileListByFolderId(config:engine:roleId:channelId:companyId:channelLists:folderId:sortType:sortField:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFollowerChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine userId:(NSString *)userId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId skip:(int32_t)skip limit:(int32_t)limit sortType:(SharedSortType *)sortType chatType:(SharedChatRoomType *)chatType assigneeId:(NSString *)assigneeId channelType:(NSString * _Nullable)channelType groupId:(NSString * _Nullable)groupId completionHandler:(void (^)(SharedNetworkResponse<SharedGetFollowerChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFollowerChat(config:engine:userId:channelId:companyId:channelLists:roleId:skip:limit:sortType:chatType:assigneeId:channelType:groupId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getGroupAssignListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists userId:(NSString *)userId completionHandler:(void (^)(SharedNetworkResponse<SharedGroupAssignResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getGroupAssignList(config:engine:channelId:companyId:channelLists:userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getGroupFilterListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists searchName:(NSString *)searchName completionHandler:(void (^)(SharedNetworkResponse<SharedGroupFilterResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getGroupFilterList(config:engine:channelId:companyId:channelLists:searchName:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getInformationConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId completionHandler:(void (^)(SharedNetworkResponse<SharedContactInformationResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getInformation(config:engine:roleId:channelId:companyId:channelLists:followerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getMasterDataChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedMasterDataChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getMasterDataChat(config:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getNotesConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId roleLevel:(int32_t)roleLevel userId:(NSString *)userId completionHandler:(void (^)(SharedNetworkResponse<NSArray<SharedContactInformationResultNote *> *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getNotes(config:engine:roleId:channelId:companyId:channelLists:followerId:roleLevel:userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getNotificationCountConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedNotificationCountResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getNotificationCount(config:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getReplyMessageByIdConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId replyMessageId:(NSString *)replyMessageId chatChannelTypeId:(NSString *)chatChannelTypeId completionHandler:(void (^)(SharedNetworkResponse<NSMutableArray<SharedGetChatMessageResultMessageSent *> *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getReplyMessageById(config:engine:channelId:companyId:channelLists:roleId:replyMessageId:chatChannelTypeId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getReplyTemplateConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedGetReplyTemplateResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getReplyTemplate(config:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getSearchFollowerInfoConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSArray<NSString *> *)followerId completionHandler:(void (^)(SharedNetworkResponse<SharedGetSearchFollowerResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getSearchFollowerInfo(config:engine:channelId:companyId:channelLists:roleId:followerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getStickerListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedStickerResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getStickerList(config:engine:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getSwitchModeConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId liveChatId:(NSString *)liveChatId completionHandler:(void (^)(SharedNetworkResponse<SharedSwitchModeResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getSwitchMode(config:engine:channelId:companyId:channelLists:roleId:liveChatId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTagInfoConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId limit:(int32_t)limit skip:(int32_t)skip tagId:(NSString *)tagId channel:(NSArray<NSString *> *)channel completionHandler:(void (^)(SharedNetworkResponse<SharedSearchTagResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTagInfo(config:engine:channelId:companyId:channelLists:roleId:limit:skip:tagId:channel:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTagListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId sortField:(SharedSortField *)sortField sortType:(SharedSortType *)sortType completionHandler:(void (^)(SharedNetworkResponse<SharedTagListResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTagList(config:engine:channelId:companyId:channelLists:roleId:sortField:sortType:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)searchMessageInChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId skip:(int32_t)skip limit:(int32_t)limit search:(NSString *)search followerId:(NSString *)followerId followerInfo:(SharedGetChatMessageResultSearchFollowerInfo *)followerInfo completionHandler:(void (^)(SharedNetworkResponse<SharedSearchMessageInChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("searchMessageInChat(config:engine:channelId:companyId:channelLists:roleId:skip:limit:search:followerId:followerInfo:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendFileFromLocalConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId userId:(NSString *)userId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId tempId:(NSString *)tempId fileBase64:(NSString *)fileBase64 fileName:(NSString *)fileName resolutionWidth:(int32_t)resolutionWidth reslutionHeight:(int32_t)reslutionHeight fileSize:(int64_t)fileSize completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendFileFromLocal(config:engine:channelId:companyId:channelLists:roleId:userId:followerId:liveChatId:tempId:fileBase64:fileName:resolutionWidth:reslutionHeight:fileSize:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendFileMessageConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId userId:(NSString *)userId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId tempId:(NSString *)tempId file:(SharedFileListResultFileResult *)file completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendFileMessage(config:engine:channelId:companyId:channelLists:roleId:userId:followerId:liveChatId:tempId:file:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendMessageConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId liveChatId:(NSString *)liveChatId followerId:(NSString *)followerId userId:(NSString *)userId message:(NSString *)message tempId:(NSString *)tempId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendMessage(config:engine:channelId:companyId:channelLists:roleId:liveChatId:followerId:userId:message:tempId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendReplyMessageConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId replyMessageId:(NSString *)replyMessageId userId:(NSString *)userId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendReplyMessage(config:engine:channelId:companyId:channelLists:roleId:followerId:liveChatId:replyMessageId:userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendStickerConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId packageId:(int32_t)packageId stickerId:(int32_t)stickerId tempId:(NSString *)tempId userId:(NSString *)userId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendSticker(config:engine:channelId:companyId:channelLists:roleId:followerId:liveChatId:packageId:stickerId:tempId:userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setAgentDefaultStatusConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId chatStatus:(int32_t)chatStatus completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setAgentDefaultStatus(config:engine:channelId:companyId:channelLists:roleId:chatStatus:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setAgentStatusConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId chatStatus:(int32_t)chatStatus completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setAgentStatus(config:engine:channelId:companyId:channelLists:roleId:chatStatus:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setChatFollowConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId userId:(NSString *)userId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setChatFollow(config:engine:channelId:companyId:channelLists:roleId:followerId:liveChatId:userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setChatSpamConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setChatSpam(config:engine:channelId:companyId:channelLists:roleId:followerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)takeChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId agentId:(NSString *)agentId liveChatId:(NSString *)liveChatId completionHandler:(void (^)(SharedNetworkResponse<SharedAcceptChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("takeChat(config:engine:roleId:channelId:companyId:channelLists:followerId:agentId:liveChatId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateInformationConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists information:(SharedMutableDictionary<NSString *, NSMutableArray<NSString *> *> *)information followerId:(NSString *)followerId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateInformation(config:engine:roleId:channelId:companyId:channelLists:information:followerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateNickNameConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId nickname:(NSString *)nickname completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateNickName(config:engine:roleId:channelId:companyId:channelLists:followerId:nickname:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateNoteConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId text:(NSString *)text no:(int32_t)no completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateNote(config:engine:roleId:channelId:companyId:channelLists:followerId:text:no:completionHandler:)")));
@end

__attribute__((swift_name("ISettingRepository")))
@protocol SharedISettingRepository
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)changePasswordConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine body:(SharedChangePasswordBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedChangePasswordResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("changePassword(config:engine:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)checkAppVersionUpdateConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine appVersion:(NSString *)appVersion completionHandler:(void (^)(SharedNetworkResponse<SharedCheckAppVersionUpdateResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAppVersionUpdate(config:engine:appVersion:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)checkUserTokenConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine completionHandler:(void (^)(SharedNetworkResponse<SharedCheckUserTokenResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkUserToken(config:engine:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getSettingNotificationConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedSettingNotificationResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getSettingNotification(config:engine:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getSettingNotificationAccountConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedSettingNotificationAccountResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getSettingNotificationAccount(config:engine:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)livechatSettingsConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedLiveChatSettingResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("livechatSettings(config:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)logoutConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("logout(config:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)saveProfileConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine data:(SharedProfileBody *)data completionHandler:(void (^)(SharedNetworkResponse<SharedProfileResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("saveProfile(config:engine:data:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setFirebaseTokenConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists firebaseToken:(NSString *)firebaseToken completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setFirebaseToken(config:engine:channelId:companyId:channelLists:firebaseToken:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setNotificationSettingConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists allowNotification:(BOOL)allowNotification channelSettingList:(NSArray<SharedSettingNotificationBodyChannelSetting *> *)channelSettingList chatAvailability:(SharedSettingNotificationBodyChatAvailabilityStatus *)chatAvailability chatSetting:(SharedSettingNotificationBodyChatSetting *)chatSetting completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setNotificationSetting(config:engine:channelId:companyId:channelLists:allowNotification:channelSettingList:chatAvailability:chatSetting:completionHandler:)")));
@end

__attribute__((swift_name("ISocketChatEvent")))
@protocol SharedISocketChatEvent
@required
- (void)addAgentModel:(SharedAgentSocket *)model __attribute__((swift_name("addAgent(model:)")));
- (void)joinChannelsChannelIds:(NSArray<NSString *> *)channelIds __attribute__((swift_name("joinChannels(channelIds:)")));
- (void)joinChatFollowerId:(NSString *)followerId __attribute__((swift_name("joinChat(followerId:)")));
- (void)joinOACompanyId:(NSString *)companyId __attribute__((swift_name("joinOA(companyId:)")));
- (void)leaveChannelsChannelIds:(NSArray<NSString *> *)channelIds __attribute__((swift_name("leaveChannels(channelIds:)")));
- (void)leaveChatFollowerId:(NSString *)followerId __attribute__((swift_name("leaveChat(followerId:)")));
- (void)leaveRoomCompanyId:(NSString *)companyId __attribute__((swift_name("leaveRoom(companyId:)")));
- (void)onAddChatCallback:(void (^)(SharedGetChatMessageResultChatMessageList *, NSString *))callback __attribute__((swift_name("onAddChat(callback:)")));
- (void)onFetchChatsCallback:(void (^)(SharedInt *))callback __attribute__((swift_name("onFetchChats(callback:)")));
- (void)onFetchFollowersUserId:(NSString *)userId callback:(void (^)(SharedGetFollowerChatResultChatRoomList *))callback __attribute__((swift_name("onFetchFollowers(userId:callback:)")));
- (void)onFetchFollowersCloseChatCallback:(void (^)(SharedGetFollowerChatResultChatRoomList *))callback __attribute__((swift_name("onFetchFollowersCloseChat(callback:)")));
- (void)onFetchLogoutCallback:(void (^)(void))callback __attribute__((swift_name("onFetchLogout(callback:)")));
- (void)onFetchStartChatCallback:(void (^)(SharedStartChatSocket *))callback __attribute__((swift_name("onFetchStartChat(callback:)")));
- (void)onTriggerExtendChatTimeCallback:(void (^)(SharedTriggerExtendChatTimeSocket *))callback __attribute__((swift_name("onTriggerExtendChatTime(callback:)")));
@end

__attribute__((swift_name("ISocketClientEvent")))
@protocol SharedISocketClientEvent
@required
- (void)connect __attribute__((swift_name("connect()")));
- (void)disconnect __attribute__((swift_name("disconnect()")));
- (void)doInitOption:(SharedSocketOption *)option __attribute__((swift_name("doInit(option:)")));
- (BOOL)isConnected __attribute__((swift_name("isConnected()")));
- (void)offConnectErrorEvent __attribute__((swift_name("offConnectErrorEvent()")));
- (void)offConnectEvent __attribute__((swift_name("offConnectEvent()")));
- (void)offDisconnectEvent __attribute__((swift_name("offDisconnectEvent()")));
- (void)onConnectErrorEventCallback:(void (^)(void))callback __attribute__((swift_name("onConnectErrorEvent(callback:)")));
- (void)onConnectEventCallback:(void (^)(void))callback __attribute__((swift_name("onConnectEvent(callback:)")));
- (void)onDisconnectEventCallback:(void (^)(void))callback __attribute__((swift_name("onDisconnectEvent(callback:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuthUseCase")))
@interface SharedAuthUseCase : SharedBase
- (instancetype)initWithRepo:(id<SharedIAuthRepository>)repo __attribute__((swift_name("init(repo:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)confirmNewPasswordConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine email:(NSString *)email password:(NSString *)password uuid:(NSString *)uuid completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("confirmNewPassword(config:engine:email:password:uuid:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getOfficialAccountListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine searchName:(NSString *)searchName completionHandler:(void (^)(SharedNetworkResponse<SharedGetOfficialAccountResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getOfficialAccountList(config:engine:searchName:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getUserMenuConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedUserRoleMenuResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getUserMenu(config:engine:roleId:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)loginWithUserConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine body:(SharedLoginBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedLoginResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("loginWithUser(config:engine:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)resendOTPConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine link:(NSString *)link completionHandler:(void (^)(SharedNetworkResponse<SharedSetNewPasswordResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("resendOTP(config:engine:link:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)resetPasswordConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine email:(NSString *)email completionHandler:(void (^)(SharedNetworkResponse<SharedResetPasswordResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("resetPassword(config:engine:email:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setNewPasswordConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine link:(NSString *)link completionHandler:(void (^)(SharedNetworkResponse<SharedSetNewPasswordResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setNewPassword(config:engine:link:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)verifyOTPConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine email:(NSString *)email otp:(NSString *)otp ref:(NSString *)ref completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("verifyOTP(config:engine:email:otp:ref:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactUseCase")))
@interface SharedContactUseCase : SharedBase
- (instancetype)initWithRepo:(id<SharedIContactRepository>)repo __attribute__((swift_name("init(repo:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getContactListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId channel_type_id:(NSArray<NSString *> *)channel_type_id contact_type:(NSArray<NSString *> *)contact_type customer_status:(NSArray<NSString *> *)customer_status customer_type:(NSArray<NSString *> *)customer_type page_index:(int32_t)page_index page_size:(int32_t)page_size search:(NSString *)search sortAsc:(int32_t)sortAsc sortField:(NSString *)sortField tag:(NSArray<NSString *> *)tag completionHandler:(void (^)(SharedNetworkResponse<SharedContactResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getContactList(config:engine:channelId:companyId:channelLists:roleId:channel_type_id:contact_type:customer_status:customer_type:page_index:page_size:search:sortAsc:sortField:tag:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardUseCase")))
@interface SharedDashboardUseCase : SharedBase
- (instancetype)initWithRepo:(id<SharedIDashboardRepository>)repo __attribute__((swift_name("init(repo:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getDashboardConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channel_id:(NSString * _Nullable)channel_id channel_lists:(NSArray<NSString *> * _Nullable)channel_lists company_id:(NSString *)company_id role_id:(NSString *)role_id channelType:(NSArray<NSString *> *)channelType startDate:(NSString *)startDate endData:(NSString *)endData completionHandler:(void (^)(SharedNetworkResponse<SharedDashboardResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getDashboard(config:engine:channel_id:channel_lists:company_id:role_id:channelType:startDate:endData:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LiveChatUseCase")))
@interface SharedLiveChatUseCase : SharedBase
- (instancetype)initWithRepo:(id<SharedILiveChatRepository>)repo __attribute__((swift_name("init(repo:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)acceptChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId agentId:(NSString *)agentId completionHandler:(void (^)(SharedNetworkResponse<SharedAcceptChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("acceptChat(config:engine:channelId:companyId:channelLists:followerId:agentId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)addTagConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId tagId:(NSString *)tagId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("addTag(config:engine:roleId:channelId:companyId:channelLists:followerId:tagId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)assignToAgentConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId userId:(NSString *)userId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("assignToAgent(config:engine:channelId:companyId:channelLists:roleId:followerId:liveChatId:userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)assignToGroupConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId groupId:(NSString *)groupId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("assignToGroup(config:engine:channelId:companyId:channelLists:roleId:followerId:liveChatId:groupId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)chatSearchMessageConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId text:(NSString *)text skip:(int32_t)skip limit:(int32_t)limit channelList:(NSArray<NSString *> *)channelList completionHandler:(void (^)(SharedNetworkResponse<SharedSearchMessageResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("chatSearchMessage(config:engine:channelId:companyId:channelLists:roleId:text:skip:limit:channelList:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)chatSearchNameConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId text:(NSString *)text skip:(int32_t)skip limit:(int32_t)limit channel:(NSArray<NSString *> *)channel completionHandler:(void (^)(SharedNetworkResponse<SharedSearchNameResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("chatSearchName(config:engine:channelId:companyId:channelLists:roleId:text:skip:limit:channel:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)closeChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId agentId:(NSString *)agentId liveChatId:(NSString *)liveChatId completionHandler:(void (^)(SharedNetworkResponse<SharedGetFollowerChatResultChatRoomList *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("closeChat(config:engine:channelId:companyId:channelLists:followerId:agentId:liveChatId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createNoteConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId text:(NSString *)text completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createNote(config:engine:roleId:channelId:companyId:channelLists:followerId:text:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createTagConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId text:(NSString *)text completionHandler:(void (^)(SharedNetworkResponse<NSString *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createTag(config:engine:roleId:channelId:companyId:channelLists:followerId:text:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteNoteConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId no:(int32_t)no completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteNote(config:engine:roleId:channelId:companyId:channelLists:followerId:no:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteTagConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId tagId:(NSString *)tagId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteTag(config:engine:roleId:channelId:companyId:channelLists:followerId:tagId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)extendLiveChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId liveChatId:(NSString *)liveChatId completionHandler:(void (^)(SharedNetworkResponse<SharedAcceptChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("extendLiveChat(config:engine:channelId:companyId:channelLists:roleId:liveChatId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAgentAssignListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedAgentAssignResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAgentAssignList(config:engine:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAgentChatStatusConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedGetAgentChatStatusResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAgentChatStatus(config:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAgentFilterListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists searchName:(NSString *)searchName completionHandler:(void (^)(SharedNetworkResponse<SharedAgentFilterResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAgentFilterList(config:engine:channelId:companyId:channelLists:searchName:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getChatMessageConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId startID:(NSString *)startID endID:(NSString *)endID fromID:(NSString *)fromID toID:(NSString *)toID limit:(int32_t)limit hide:(BOOL)hide oldResult:(SharedGetChatMessageResult * _Nullable)oldResult userId:(NSString *)userId completionHandler:(void (^)(SharedNetworkResponse<SharedGetChatMessageResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getChatMessage(config:engine:roleId:channelId:companyId:channelLists:followerId:startID:endID:fromID:toID:limit:hide:oldResult:userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFileFolderListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedFileFolderListResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFileFolderList(config:engine:roleId:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFileListByFolderIdConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists folderId:(NSString *)folderId sortType:(SharedSortType *)sortType sortField:(SharedSortField *)sortField completionHandler:(void (^)(SharedNetworkResponse<SharedFileListResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFileListByFolderId(config:engine:roleId:channelId:companyId:channelLists:folderId:sortType:sortField:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFollowerChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine userId:(NSString *)userId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId skip:(int32_t)skip limit:(int32_t)limit sortType:(SharedSortType * _Nullable)sortType chatType:(SharedChatRoomType * _Nullable)chatType assigneeId:(NSString *)assigneeId channelType:(NSString * _Nullable)channelType groupId:(NSString * _Nullable)groupId completionHandler:(void (^)(SharedNetworkResponse<SharedGetFollowerChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFollowerChat(config:engine:userId:channelId:companyId:channelLists:roleId:skip:limit:sortType:chatType:assigneeId:channelType:groupId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getGroupAssignListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists userId:(NSString *)userId completionHandler:(void (^)(SharedNetworkResponse<SharedGroupAssignResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getGroupAssignList(config:engine:channelId:companyId:channelLists:userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getGroupFilterListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists searchName:(NSString * _Nullable)searchName completionHandler:(void (^)(SharedNetworkResponse<SharedGroupFilterResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getGroupFilterList(config:engine:channelId:companyId:channelLists:searchName:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getInformationConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId completionHandler:(void (^)(SharedNetworkResponse<SharedContactInformationResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getInformation(config:engine:roleId:channelId:companyId:channelLists:followerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getMasterDataChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedMasterDataChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getMasterDataChat(config:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getNotesConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId roleLevel:(int32_t)roleLevel userId:(NSString *)userId completionHandler:(void (^)(SharedNetworkResponse<NSArray<SharedContactInformationResultNote *> *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getNotes(config:engine:roleId:channelId:companyId:channelLists:followerId:roleLevel:userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getNotificationCountConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedNotificationCountResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getNotificationCount(config:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getReplyMessageByIdConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId replyMessageId:(NSString *)replyMessageId chatChannelTypeId:(NSString *)chatChannelTypeId completionHandler:(void (^)(SharedNetworkResponse<NSMutableArray<SharedGetChatMessageResultMessageSent *> *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getReplyMessageById(config:engine:channelId:companyId:channelLists:roleId:replyMessageId:chatChannelTypeId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getReplyTemplateConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedGetReplyTemplateResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getReplyTemplate(config:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getSearchFollowerInfoConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSArray<NSString *> *)followerId completionHandler:(void (^)(SharedNetworkResponse<SharedGetSearchFollowerResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getSearchFollowerInfo(config:engine:channelId:companyId:channelLists:roleId:followerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getStickerListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedStickerResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getStickerList(config:engine:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getSwitchModeConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId liveChatId:(NSString *)liveChatId completionHandler:(void (^)(SharedNetworkResponse<SharedSwitchModeResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getSwitchMode(config:engine:channelId:companyId:channelLists:roleId:liveChatId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTagInfoConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId limit:(int32_t)limit skip:(int32_t)skip tagId:(NSString *)tagId channel:(NSArray<NSString *> *)channel completionHandler:(void (^)(SharedNetworkResponse<SharedSearchTagResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTagInfo(config:engine:channelId:companyId:channelLists:roleId:limit:skip:tagId:channel:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTagListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId sortField:(SharedSortField *)sortField sortType:(SharedSortType *)sortType completionHandler:(void (^)(SharedNetworkResponse<SharedTagListResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTagList(config:engine:channelId:companyId:channelLists:roleId:sortField:sortType:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)searchMessageInChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId limit:(int32_t)limit skip:(int32_t)skip search:(NSString *)search followerId:(NSString *)followerId followerInfo:(SharedGetChatMessageResultSearchFollowerInfo *)followerInfo completionHandler:(void (^)(SharedNetworkResponse<SharedSearchMessageInChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("searchMessageInChat(config:engine:channelId:companyId:channelLists:roleId:limit:skip:search:followerId:followerInfo:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendFileFromLocalConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId userId:(NSString *)userId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId tempId:(NSString *)tempId fileBase64:(NSString *)fileBase64 fileName:(NSString *)fileName resolutionWidth:(int32_t)resolutionWidth reslutionHeight:(int32_t)reslutionHeight fileSize:(int64_t)fileSize completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendFileFromLocal(config:engine:channelId:companyId:channelLists:roleId:userId:followerId:liveChatId:tempId:fileBase64:fileName:resolutionWidth:reslutionHeight:fileSize:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendFileMessageConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId userId:(NSString *)userId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId tempId:(NSString *)tempId file:(SharedFileListResultFileResult *)file completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendFileMessage(config:engine:channelId:companyId:channelLists:roleId:userId:followerId:liveChatId:tempId:file:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendMessageConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId liveChatId:(NSString *)liveChatId followerId:(NSString *)followerId userId:(NSString *)userId message:(NSString *)message tempId:(NSString *)tempId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendMessage(config:engine:channelId:companyId:channelLists:roleId:liveChatId:followerId:userId:message:tempId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendReplyMessageConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId replyMessageId:(NSString *)replyMessageId userId:(NSString *)userId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendReplyMessage(config:engine:channelId:companyId:channelLists:roleId:followerId:liveChatId:replyMessageId:userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendStickerConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId packageId:(int32_t)packageId stickerId:(int32_t)stickerId tempId:(NSString *)tempId userId:(NSString *)userId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendSticker(config:engine:channelId:companyId:channelLists:roleId:followerId:liveChatId:packageId:stickerId:tempId:userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setAgentDefaultStatusConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId chatStatus:(int32_t)chatStatus completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setAgentDefaultStatus(config:engine:channelId:companyId:channelLists:roleId:chatStatus:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setAgentStatusConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId chatStatus:(int32_t)chatStatus completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setAgentStatus(config:engine:channelId:companyId:channelLists:roleId:chatStatus:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setChatFollowConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId userId:(NSString *)userId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setChatFollow(config:engine:channelId:companyId:channelLists:roleId:followerId:liveChatId:userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setChatSpamConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setChatSpam(config:engine:channelId:companyId:channelLists:roleId:followerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)takeChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId agentId:(NSString *)agentId liveChatId:(NSString *)liveChatId completionHandler:(void (^)(SharedNetworkResponse<SharedAcceptChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("takeChat(config:engine:roleId:channelId:companyId:channelLists:followerId:agentId:liveChatId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateInformationConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists information:(SharedMutableDictionary<NSString *, NSMutableArray<NSString *> *> *)information followerId:(NSString *)followerId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateInformation(config:engine:roleId:channelId:companyId:channelLists:information:followerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateNickNameConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId nickname:(NSString *)nickname completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateNickName(config:engine:roleId:channelId:companyId:channelLists:followerId:nickname:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateNoteConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId text:(NSString *)text no:(int32_t)no completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateNote(config:engine:roleId:channelId:companyId:channelLists:followerId:text:no:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingUseCase")))
@interface SharedSettingUseCase : SharedBase
- (instancetype)initWithRepo:(id<SharedISettingRepository>)repo __attribute__((swift_name("init(repo:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)changePasswordConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine body:(SharedChangePasswordBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedChangePasswordResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("changePassword(config:engine:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)checkAppVersionUpdateConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine appVersion:(NSString *)appVersion completionHandler:(void (^)(SharedNetworkResponse<SharedCheckAppVersionUpdateResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAppVersionUpdate(config:engine:appVersion:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)checkUserTokenConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine completionHandler:(void (^)(SharedNetworkResponse<SharedCheckUserTokenResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkUserToken(config:engine:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getSettingNotificationConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedSettingNotificationResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getSettingNotification(config:engine:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getSettingNotificationAccountConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedSettingNotificationAccountResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getSettingNotificationAccount(config:engine:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)livechatSettingsConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedLiveChatSettingResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("livechatSettings(config:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)logoutConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("logout(config:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)saveProfileConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine body:(SharedProfileBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedProfileResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("saveProfile(config:engine:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setFirebaseTokenConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists firebaseToken:(NSString *)firebaseToken completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setFirebaseToken(config:engine:channelId:companyId:channelLists:firebaseToken:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setNotificationSettingConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists allowNotification:(BOOL)allowNotification channelSettingList:(NSArray<SharedSettingNotificationBodyChannelSetting *> *)channelSettingList chatAvailability:(SharedSettingNotificationBodyChatAvailabilityStatus *)chatAvailability chatSetting:(SharedSettingNotificationBodyChatSetting *)chatSetting completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setNotificationSetting(config:engine:channelId:companyId:channelLists:allowNotification:channelSettingList:chatAvailability:chatSetting:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SocketUseCase")))
@interface SharedSocketUseCase : SharedBase
- (instancetype)initWithClient:(id<SharedISocketClientEvent>)client chat:(id<SharedISocketChatEvent>)chat __attribute__((swift_name("init(client:chat:)"))) __attribute__((objc_designated_initializer));
- (void)addAgentModel:(SharedAgentSocket *)model __attribute__((swift_name("addAgent(model:)")));
- (void)connect __attribute__((swift_name("connect()")));
- (void)disconnect __attribute__((swift_name("disconnect()")));
- (void)doInitOption:(SharedSocketOption *)option __attribute__((swift_name("doInit(option:)")));
- (BOOL)isConnected __attribute__((swift_name("isConnected()")));
- (void)joinChannelsChannelIds:(NSArray<NSString *> *)channelIds __attribute__((swift_name("joinChannels(channelIds:)")));
- (void)joinChatFollowerId:(NSString *)followerId __attribute__((swift_name("joinChat(followerId:)")));
- (void)joinOACompanyId:(NSString *)companyId __attribute__((swift_name("joinOA(companyId:)")));
- (void)leaveChannelsChannelIds:(NSArray<NSString *> *)channelIds __attribute__((swift_name("leaveChannels(channelIds:)")));
- (void)leaveChatFollowerId:(NSString *)followerId __attribute__((swift_name("leaveChat(followerId:)")));
- (void)leaveRoomCompanyId:(NSString *)companyId __attribute__((swift_name("leaveRoom(companyId:)")));
- (void)offConnectErrorEvent __attribute__((swift_name("offConnectErrorEvent()")));
- (void)offConnectEvent __attribute__((swift_name("offConnectEvent()")));
- (void)offDisconnectEvent __attribute__((swift_name("offDisconnectEvent()")));
- (void)onAddChatCallback:(void (^)(SharedGetChatMessageResultChatMessageList *, NSString *))callback __attribute__((swift_name("onAddChat(callback:)")));
- (void)onConnectErrorEventCallback:(void (^)(void))callback __attribute__((swift_name("onConnectErrorEvent(callback:)")));
- (void)onConnectEventCallback:(void (^)(void))callback __attribute__((swift_name("onConnectEvent(callback:)")));
- (void)onDisconnectEventCallback:(void (^)(void))callback __attribute__((swift_name("onDisconnectEvent(callback:)")));
- (void)onFetchChatsCallback:(void (^)(SharedInt *))callback __attribute__((swift_name("onFetchChats(callback:)")));
- (void)onFetchFollowersUserId:(NSString *)userId callback:(void (^)(SharedGetFollowerChatResultChatRoomList *))callback __attribute__((swift_name("onFetchFollowers(userId:callback:)")));
- (void)onFetchFollowersCloseChatCallback:(void (^)(SharedGetFollowerChatResultChatRoomList *))callback __attribute__((swift_name("onFetchFollowersCloseChat(callback:)")));
- (void)onFetchLogoutCallback:(void (^)(void))callback __attribute__((swift_name("onFetchLogout(callback:)")));
- (void)onFetchStartChatCallback:(void (^)(SharedStartChatSocket *))callback __attribute__((swift_name("onFetchStartChat(callback:)")));
- (void)onTriggerExtendChatTimeCallback:(void (^)(SharedTriggerExtendChatTimeSocket *))callback __attribute__((swift_name("onTriggerExtendChatTime(callback:)")));
@end

__attribute__((swift_name("NetworkResponse")))
@interface SharedNetworkResponse<__covariant T, __covariant U> : SharedBase
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NetworkResponseApiError")))
@interface SharedNetworkResponseApiError<U> : SharedNetworkResponse<SharedKotlinNothing *, U>
- (instancetype)initWithBody:(U)body __attribute__((swift_name("init(body:)"))) __attribute__((objc_designated_initializer));
- (SharedNetworkResponseApiError<U> *)doCopyBody:(U)body __attribute__((swift_name("doCopy(body:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) U body __attribute__((swift_name("body")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NetworkResponseNetworkError")))
@interface SharedNetworkResponseNetworkError<U> : SharedNetworkResponse<SharedKotlinNothing *, U>
- (instancetype)initWithBody:(U)body __attribute__((swift_name("init(body:)"))) __attribute__((objc_designated_initializer));
- (SharedNetworkResponseNetworkError<U> *)doCopyBody:(U)body __attribute__((swift_name("doCopy(body:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) U body __attribute__((swift_name("body")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NetworkResponseSuccess")))
@interface SharedNetworkResponseSuccess<T> : SharedNetworkResponse<T, SharedKotlinNothing *>
- (instancetype)initWithBody:(T)body __attribute__((swift_name("init(body:)"))) __attribute__((objc_designated_initializer));
- (SharedNetworkResponseSuccess<T> *)doCopyBody:(T)body __attribute__((swift_name("doCopy(body:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) T body __attribute__((swift_name("body")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NetworkResponseUnknownError")))
@interface SharedNetworkResponseUnknownError<U> : SharedNetworkResponse<SharedKotlinNothing *, U>
- (instancetype)initWithBody:(U)body __attribute__((swift_name("init(body:)"))) __attribute__((objc_designated_initializer));
- (SharedNetworkResponseUnknownError<U> *)doCopyBody:(U)body __attribute__((swift_name("doCopy(body:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) U body __attribute__((swift_name("body")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ResponseStatus")))
@interface SharedResponseStatus : SharedBase
- (instancetype)initWithResponseType:(SharedResponseStatusType * _Nullable)responseType responseCode:(NSString *)responseCode responseMessage:(NSString *)responseMessage message:(NSString *)message __attribute__((swift_name("init(responseType:responseCode:responseMessage:message:)"))) __attribute__((objc_designated_initializer));
- (SharedResponseStatus *)doCopyResponseType:(SharedResponseStatusType * _Nullable)responseType responseCode:(NSString *)responseCode responseMessage:(NSString *)responseMessage message:(NSString *)message __attribute__((swift_name("doCopy(responseType:responseCode:responseMessage:message:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@property (readonly) NSString *responseCode __attribute__((swift_name("responseCode")));
@property (readonly) NSString *responseMessage __attribute__((swift_name("responseMessage")));
@property (readonly) SharedResponseStatusType * _Nullable responseType __attribute__((swift_name("responseType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AcceptChatResult")))
@interface SharedAcceptChatResult : SharedBase
- (instancetype)initWithSwitchModeAt:(NSString *)switchModeAt countDownSecond:(int32_t)countDownSecond livechatId:(NSString *)livechatId __attribute__((swift_name("init(switchModeAt:countDownSecond:livechatId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedAcceptChatResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedAcceptChatResult *)doCopySwitchModeAt:(NSString *)switchModeAt countDownSecond:(int32_t)countDownSecond livechatId:(NSString *)livechatId __attribute__((swift_name("doCopy(switchModeAt:countDownSecond:livechatId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t countDownSecond __attribute__((swift_name("countDownSecond")));
@property (readonly) NSString *livechatId __attribute__((swift_name("livechatId")));
@property (readonly) NSString *switchModeAt __attribute__((swift_name("switchModeAt")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AcceptChatResult.Companion")))
@interface SharedAcceptChatResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedAcceptChatResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AgentAssignResult")))
@interface SharedAgentAssignResult : SharedBase
- (instancetype)initWithAgentInfo:(NSArray<SharedAgentAssignResultAgentInfo *> *)agentInfo __attribute__((swift_name("init(agentInfo:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedAgentAssignResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedAgentAssignResult *)doCopyAgentInfo:(NSArray<SharedAgentAssignResultAgentInfo *> *)agentInfo __attribute__((swift_name("doCopy(agentInfo:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedAgentAssignResultAgentInfo *> *agentInfo __attribute__((swift_name("agentInfo")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AgentAssignResult.AgentInfo")))
@interface SharedAgentAssignResultAgentInfo : SharedBase
- (instancetype)initWithAgentID:(NSString * _Nullable)agentID agentName:(NSString * _Nullable)agentName agentImage:(NSString * _Nullable)agentImage agentRole:(NSString * _Nullable)agentRole isMobile:(SharedBoolean * _Nullable)isMobile isOnline:(SharedBoolean * _Nullable)isOnline isFull:(SharedBoolean * _Nullable)isFull isAvailable:(SharedBoolean * _Nullable)isAvailable __attribute__((swift_name("init(agentID:agentName:agentImage:agentRole:isMobile:isOnline:isFull:isAvailable:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedAgentAssignResultAgentInfoCompanion *companion __attribute__((swift_name("companion")));
- (SharedAgentAssignResultAgentInfo *)doCopyAgentID:(NSString * _Nullable)agentID agentName:(NSString * _Nullable)agentName agentImage:(NSString * _Nullable)agentImage agentRole:(NSString * _Nullable)agentRole isMobile:(SharedBoolean * _Nullable)isMobile isOnline:(SharedBoolean * _Nullable)isOnline isFull:(SharedBoolean * _Nullable)isFull isAvailable:(SharedBoolean * _Nullable)isAvailable __attribute__((swift_name("doCopy(agentID:agentName:agentImage:agentRole:isMobile:isOnline:isFull:isAvailable:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable agentID __attribute__((swift_name("agentID")));
@property (readonly) NSString * _Nullable agentImage __attribute__((swift_name("agentImage")));
@property (readonly) NSString * _Nullable agentName __attribute__((swift_name("agentName")));
@property (readonly) NSString * _Nullable agentRole __attribute__((swift_name("agentRole")));
@property (readonly) SharedBoolean * _Nullable isAvailable __attribute__((swift_name("isAvailable")));
@property (readonly) SharedBoolean * _Nullable isFull __attribute__((swift_name("isFull")));
@property (readonly) SharedBoolean * _Nullable isMobile __attribute__((swift_name("isMobile")));
@property (readonly) SharedBoolean * _Nullable isOnline __attribute__((swift_name("isOnline")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AgentAssignResult.AgentInfoCompanion")))
@interface SharedAgentAssignResultAgentInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedAgentAssignResultAgentInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AgentAssignResult.Companion")))
@interface SharedAgentAssignResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedAgentAssignResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AgentFilterResult")))
@interface SharedAgentFilterResult : SharedBase
- (instancetype)initWithAgentInfo:(NSArray<SharedAgentFilterResultAgentInfo *> *)agentInfo __attribute__((swift_name("init(agentInfo:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedAgentFilterResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedAgentFilterResult *)doCopyAgentInfo:(NSArray<SharedAgentFilterResultAgentInfo *> *)agentInfo __attribute__((swift_name("doCopy(agentInfo:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedAgentFilterResultAgentInfo *> *agentInfo __attribute__((swift_name("agentInfo")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AgentFilterResult.AgentInfo")))
@interface SharedAgentFilterResultAgentInfo : SharedBase
- (instancetype)initWithAgentID:(NSString * _Nullable)agentID agentName:(NSString * _Nullable)agentName agentImage:(NSString * _Nullable)agentImage isFull:(SharedBoolean * _Nullable)isFull isOnline:(SharedBoolean * _Nullable)isOnline isMobile:(SharedBoolean * _Nullable)isMobile __attribute__((swift_name("init(agentID:agentName:agentImage:isFull:isOnline:isMobile:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedAgentFilterResultAgentInfoCompanion *companion __attribute__((swift_name("companion")));
- (SharedAgentFilterResultAgentInfo *)doCopyAgentID:(NSString * _Nullable)agentID agentName:(NSString * _Nullable)agentName agentImage:(NSString * _Nullable)agentImage isFull:(SharedBoolean * _Nullable)isFull isOnline:(SharedBoolean * _Nullable)isOnline isMobile:(SharedBoolean * _Nullable)isMobile __attribute__((swift_name("doCopy(agentID:agentName:agentImage:isFull:isOnline:isMobile:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable agentID __attribute__((swift_name("agentID")));
@property (readonly) NSString * _Nullable agentImage __attribute__((swift_name("agentImage")));
@property (readonly) NSString * _Nullable agentName __attribute__((swift_name("agentName")));
@property (readonly) SharedBoolean * _Nullable isFull __attribute__((swift_name("isFull")));
@property (readonly) SharedBoolean * _Nullable isMobile __attribute__((swift_name("isMobile")));
@property (readonly) SharedBoolean * _Nullable isOnline __attribute__((swift_name("isOnline")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AgentFilterResult.AgentInfoCompanion")))
@interface SharedAgentFilterResultAgentInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedAgentFilterResultAgentInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AgentFilterResult.Companion")))
@interface SharedAgentFilterResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedAgentFilterResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationResult")))
@interface SharedContactInformationResult : SharedBase
- (instancetype)initWithActivities:(NSArray<id> * _Nullable)activities channelTypeInfo:(SharedContactInformationResultChannelTypeInfo * _Nullable)channelTypeInfo contactDetail:(NSArray<id> * _Nullable)contactDetail followerType:(NSString * _Nullable)followerType id:(NSString * _Nullable)id isBlock:(SharedBoolean * _Nullable)isBlock isFollow:(SharedBoolean * _Nullable)isFollow isSpam:(SharedBoolean * _Nullable)isSpam note:(NSArray<id> * _Nullable)note profile:(SharedContactInformationResultProfile * _Nullable)profile socialId:(NSString * _Nullable)socialId tags:(NSArray<id> * _Nullable)tags verify:(SharedContactInformationResultVerify * _Nullable)verify apiTag:(NSArray<id> * _Nullable)apiTag tagList:(NSArray<id> * _Nullable)tagList __attribute__((swift_name("init(activities:channelTypeInfo:contactDetail:followerType:id:isBlock:isFollow:isSpam:note:profile:socialId:tags:verify:apiTag:tagList:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactInformationResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedContactInformationResult *)doCopyActivities:(NSArray<id> * _Nullable)activities channelTypeInfo:(SharedContactInformationResultChannelTypeInfo * _Nullable)channelTypeInfo contactDetail:(NSArray<id> * _Nullable)contactDetail followerType:(NSString * _Nullable)followerType id:(NSString * _Nullable)id isBlock:(SharedBoolean * _Nullable)isBlock isFollow:(SharedBoolean * _Nullable)isFollow isSpam:(SharedBoolean * _Nullable)isSpam note:(NSArray<id> * _Nullable)note profile:(SharedContactInformationResultProfile * _Nullable)profile socialId:(NSString * _Nullable)socialId tags:(NSArray<id> * _Nullable)tags verify:(SharedContactInformationResultVerify * _Nullable)verify apiTag:(NSArray<id> * _Nullable)apiTag tagList:(NSArray<id> * _Nullable)tagList __attribute__((swift_name("doCopy(activities:channelTypeInfo:contactDetail:followerType:id:isBlock:isFollow:isSpam:note:profile:socialId:tags:verify:apiTag:tagList:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (SharedKotlinx_serialization_jsonJsonElement *)toJson __attribute__((swift_name("toJson()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<id> * _Nullable activities __attribute__((swift_name("activities")));
@property (readonly) NSArray<id> * _Nullable apiTag __attribute__((swift_name("apiTag")));
@property (readonly) SharedContactInformationResultChannelTypeInfo * _Nullable channelTypeInfo __attribute__((swift_name("channelTypeInfo")));
@property (readonly) NSArray<id> * _Nullable contactDetail __attribute__((swift_name("contactDetail")));
@property (readonly) NSString * _Nullable followerType __attribute__((swift_name("followerType")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) SharedBoolean * _Nullable isBlock __attribute__((swift_name("isBlock")));
@property (readonly) SharedBoolean * _Nullable isFollow __attribute__((swift_name("isFollow")));
@property (readonly) SharedBoolean * _Nullable isSpam __attribute__((swift_name("isSpam")));
@property (readonly) NSArray<id> * _Nullable note __attribute__((swift_name("note")));
@property (readonly) SharedContactInformationResultProfile * _Nullable profile __attribute__((swift_name("profile")));
@property (readonly) NSString * _Nullable socialId __attribute__((swift_name("socialId")));
@property (readonly) NSArray<id> * _Nullable tagList __attribute__((swift_name("tagList")));
@property (readonly) NSArray<id> * _Nullable tags __attribute__((swift_name("tags")));
@property (readonly) SharedContactInformationResultVerify * _Nullable verify __attribute__((swift_name("verify")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationResult.ChannelTypeInfo")))
@interface SharedContactInformationResultChannelTypeInfo : SharedBase
- (instancetype)initWithCreatedAt:(NSString * _Nullable)createdAt iconPng:(NSString * _Nullable)iconPng iconSvg:(NSString * _Nullable)iconSvg id:(NSString * _Nullable)id isActive:(SharedBoolean * _Nullable)isActive name:(NSString * _Nullable)name sort:(SharedInt * _Nullable)sort __attribute__((swift_name("init(createdAt:iconPng:iconSvg:id:isActive:name:sort:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactInformationResultChannelTypeInfoCompanion *companion __attribute__((swift_name("companion")));
- (SharedContactInformationResultChannelTypeInfo *)doCopyCreatedAt:(NSString * _Nullable)createdAt iconPng:(NSString * _Nullable)iconPng iconSvg:(NSString * _Nullable)iconSvg id:(NSString * _Nullable)id isActive:(SharedBoolean * _Nullable)isActive name:(NSString * _Nullable)name sort:(SharedInt * _Nullable)sort __attribute__((swift_name("doCopy(createdAt:iconPng:iconSvg:id:isActive:name:sort:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable createdAt __attribute__((swift_name("createdAt")));
@property (readonly) NSString * _Nullable iconPng __attribute__((swift_name("iconPng")));
@property (readonly) NSString * _Nullable iconSvg __attribute__((swift_name("iconSvg")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) SharedBoolean * _Nullable isActive __attribute__((swift_name("isActive")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) SharedInt * _Nullable sort __attribute__((swift_name("sort")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationResult.ChannelTypeInfoCompanion")))
@interface SharedContactInformationResultChannelTypeInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactInformationResultChannelTypeInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationResult.Companion")))
@interface SharedContactInformationResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactInformationResultCompanion *shared __attribute__((swift_name("shared")));
- (SharedContactInformationResult *)fromJsonJson:(NSString *)json __attribute__((swift_name("fromJson(json:)")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationResult.ContactDetail")))
@interface SharedContactInformationResultContactDetail : SharedBase
- (instancetype)initWithId:(NSString * _Nullable)id key:(NSString * _Nullable)key name:(NSString * _Nullable)name nameEn:(NSString * _Nullable)nameEn nameTh:(NSString * _Nullable)nameTh permission:(SharedFieldPermissionType * _Nullable)permission type:(NSString * _Nullable)type value:(NSArray<id> * _Nullable)value __attribute__((swift_name("init(id:key:name:nameEn:nameTh:permission:type:value:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactInformationResultContactDetailCompanion *companion __attribute__((swift_name("companion")));
- (SharedContactInformationResultContactDetail *)doCopyId:(NSString * _Nullable)id key:(NSString * _Nullable)key name:(NSString * _Nullable)name nameEn:(NSString * _Nullable)nameEn nameTh:(NSString * _Nullable)nameTh permission:(SharedFieldPermissionType * _Nullable)permission type:(NSString * _Nullable)type value:(NSArray<id> * _Nullable)value __attribute__((swift_name("doCopy(id:key:name:nameEn:nameTh:permission:type:value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable key __attribute__((swift_name("key")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable nameEn __attribute__((swift_name("nameEn")));
@property (readonly) NSString * _Nullable nameTh __attribute__((swift_name("nameTh")));
@property (readonly) SharedFieldPermissionType * _Nullable permission __attribute__((swift_name("permission")));
@property (readonly) NSString * _Nullable type __attribute__((swift_name("type")));
@property (readonly) NSArray<id> * _Nullable value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationResult.ContactDetailCompanion")))
@interface SharedContactInformationResultContactDetailCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactInformationResultContactDetailCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationResult.Note")))
@interface SharedContactInformationResultNote : SharedBase
- (instancetype)initWithCreatedAt:(NSString * _Nullable)createdAt no:(SharedInt * _Nullable)no updatedAt:(NSString * _Nullable)updatedAt updatedBy:(NSString * _Nullable)updatedBy user:(SharedContactInformationResultNoteUser * _Nullable)user value:(NSString * _Nullable)value isCanEdit:(SharedBoolean * _Nullable)isCanEdit __attribute__((swift_name("init(createdAt:no:updatedAt:updatedBy:user:value:isCanEdit:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactInformationResultNoteCompanion *companion __attribute__((swift_name("companion")));
- (SharedContactInformationResultNote *)doCopyCreatedAt:(NSString * _Nullable)createdAt no:(SharedInt * _Nullable)no updatedAt:(NSString * _Nullable)updatedAt updatedBy:(NSString * _Nullable)updatedBy user:(SharedContactInformationResultNoteUser * _Nullable)user value:(NSString * _Nullable)value isCanEdit:(SharedBoolean * _Nullable)isCanEdit __attribute__((swift_name("doCopy(createdAt:no:updatedAt:updatedBy:user:value:isCanEdit:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable createdAt __attribute__((swift_name("createdAt")));
@property (readonly) SharedBoolean * _Nullable isCanEdit __attribute__((swift_name("isCanEdit")));
@property (readonly) SharedInt * _Nullable no __attribute__((swift_name("no")));
@property (readonly) NSString * _Nullable updatedAt __attribute__((swift_name("updatedAt")));
@property (readonly) NSString * _Nullable updatedBy __attribute__((swift_name("updatedBy")));
@property (readonly) SharedContactInformationResultNoteUser * _Nullable user __attribute__((swift_name("user")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationResult.NoteCompanion")))
@interface SharedContactInformationResultNoteCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactInformationResultNoteCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationResult.NoteUser")))
@interface SharedContactInformationResultNoteUser : SharedBase
- (instancetype)initWithId:(NSString * _Nullable)id profile:(SharedContactInformationResultNoteUserProfile * _Nullable)profile __attribute__((swift_name("init(id:profile:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactInformationResultNoteUserCompanion *companion __attribute__((swift_name("companion")));
- (SharedContactInformationResultNoteUser *)doCopyId:(NSString * _Nullable)id profile:(SharedContactInformationResultNoteUserProfile * _Nullable)profile __attribute__((swift_name("doCopy(id:profile:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) SharedContactInformationResultNoteUserProfile * _Nullable profile __attribute__((swift_name("profile")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationResult.NoteUserCompanion")))
@interface SharedContactInformationResultNoteUserCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactInformationResultNoteUserCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationResult.NoteUserProfile")))
@interface SharedContactInformationResultNoteUserProfile : SharedBase
- (instancetype)initWithFirstname:(NSString * _Nullable)firstname image:(NSString * _Nullable)image lastname:(NSString * _Nullable)lastname __attribute__((swift_name("init(firstname:image:lastname:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactInformationResultNoteUserProfileCompanion *companion __attribute__((swift_name("companion")));
- (SharedContactInformationResultNoteUserProfile *)doCopyFirstname:(NSString * _Nullable)firstname image:(NSString * _Nullable)image lastname:(NSString * _Nullable)lastname __attribute__((swift_name("doCopy(firstname:image:lastname:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable firstname __attribute__((swift_name("firstname")));
@property (readonly) NSString * _Nullable image __attribute__((swift_name("image")));
@property (readonly) NSString * _Nullable lastname __attribute__((swift_name("lastname")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationResult.NoteUserProfileCompanion")))
@interface SharedContactInformationResultNoteUserProfileCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactInformationResultNoteUserProfileCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationResult.Profile")))
@interface SharedContactInformationResultProfile : SharedBase
- (instancetype)initWithCacheDate:(SharedLong * _Nullable)cacheDate email:(NSString * _Nullable)email image:(NSString * _Nullable)image name:(NSString * _Nullable)name nickname:(NSString * _Nullable)nickname __attribute__((swift_name("init(cacheDate:email:image:name:nickname:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactInformationResultProfileCompanion *companion __attribute__((swift_name("companion")));
- (SharedContactInformationResultProfile *)doCopyCacheDate:(SharedLong * _Nullable)cacheDate email:(NSString * _Nullable)email image:(NSString * _Nullable)image name:(NSString * _Nullable)name nickname:(NSString * _Nullable)nickname __attribute__((swift_name("doCopy(cacheDate:email:image:name:nickname:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedLong * _Nullable cacheDate __attribute__((swift_name("cacheDate")));
@property (readonly) NSString * _Nullable email __attribute__((swift_name("email")));
@property (readonly) NSString * _Nullable image __attribute__((swift_name("image")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable nickname __attribute__((swift_name("nickname")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationResult.ProfileCompanion")))
@interface SharedContactInformationResultProfileCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactInformationResultProfileCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationResult.Tag")))
@interface SharedContactInformationResultTag : SharedBase
- (instancetype)initWithId:(NSString * _Nullable)id text:(NSString * _Nullable)text permission:(SharedFieldPermissionType * _Nullable)permission __attribute__((swift_name("init(id:text:permission:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactInformationResultTagCompanion *companion __attribute__((swift_name("companion")));
- (SharedContactInformationResultTag *)doCopyId:(NSString * _Nullable)id text:(NSString * _Nullable)text permission:(SharedFieldPermissionType * _Nullable)permission __attribute__((swift_name("doCopy(id:text:permission:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) SharedFieldPermissionType * _Nullable permission __attribute__((swift_name("permission")));
@property (readonly) NSString * _Nullable text __attribute__((swift_name("text")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationResult.TagCompanion")))
@interface SharedContactInformationResultTagCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactInformationResultTagCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationResult.Verify")))
@interface SharedContactInformationResultVerify : SharedBase
- (instancetype)initWithStatus:(SharedCustomerStatus * _Nullable)status customerId:(NSString * _Nullable)customerId customerType:(NSString * _Nullable)customerType __attribute__((swift_name("init(status:customerId:customerType:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactInformationResultVerifyCompanion *companion __attribute__((swift_name("companion")));
- (SharedContactInformationResultVerify *)doCopyStatus:(SharedCustomerStatus * _Nullable)status customerId:(NSString * _Nullable)customerId customerType:(NSString * _Nullable)customerType __attribute__((swift_name("doCopy(status:customerId:customerType:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable customerId __attribute__((swift_name("customerId")));
@property (readonly) NSString * _Nullable customerType __attribute__((swift_name("customerType")));
@property (readonly) SharedCustomerStatus * _Nullable status __attribute__((swift_name("status")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationResult.VerifyCompanion")))
@interface SharedContactInformationResultVerifyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactInformationResultVerifyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileFolderListResult")))
@interface SharedFileFolderListResult : SharedBase
- (instancetype)initWithFolderList:(NSMutableArray<SharedFileFolderListResultFolderResult *> *)folderList __attribute__((swift_name("init(folderList:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedFileFolderListResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedFileFolderListResult *)doCopyFolderList:(NSMutableArray<SharedFileFolderListResultFolderResult *> *)folderList __attribute__((swift_name("doCopy(folderList:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSMutableArray<SharedFileFolderListResultFolderResult *> *folderList __attribute__((swift_name("folderList")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileFolderListResult.Companion")))
@interface SharedFileFolderListResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFileFolderListResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileFolderListResult.FolderResult")))
@interface SharedFileFolderListResultFolderResult : SharedBase
- (instancetype)initWithId:(NSString *)id path:(NSString *)path name:(NSString *)name canEditOrDelete:(BOOL)canEditOrDelete __attribute__((swift_name("init(id:path:name:canEditOrDelete:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedFileFolderListResultFolderResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedFileFolderListResultFolderResult *)doCopyId:(NSString *)id path:(NSString *)path name:(NSString *)name canEditOrDelete:(BOOL)canEditOrDelete __attribute__((swift_name("doCopy(id:path:name:canEditOrDelete:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL canEditOrDelete __attribute__((swift_name("canEditOrDelete")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString *path __attribute__((swift_name("path")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileFolderListResult.FolderResultCompanion")))
@interface SharedFileFolderListResultFolderResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFileFolderListResultFolderResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileFolderListResult.StorageResult")))
@interface SharedFileFolderListResultStorageResult : SharedBase
- (instancetype)initWithUsed:(double)used total:(double)total unitType:(NSString *)unitType __attribute__((swift_name("init(used:total:unitType:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedFileFolderListResultStorageResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedFileFolderListResultStorageResult *)doCopyUsed:(double)used total:(double)total unitType:(NSString *)unitType __attribute__((swift_name("doCopy(used:total:unitType:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double total __attribute__((swift_name("total")));
@property (readonly) NSString *unitType __attribute__((swift_name("unitType")));
@property (readonly) double used __attribute__((swift_name("used")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileFolderListResult.StorageResultCompanion")))
@interface SharedFileFolderListResultStorageResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFileFolderListResultStorageResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileListResult")))
@interface SharedFileListResult : SharedBase
- (instancetype)initWithFileList:(NSMutableArray<SharedFileListResultFileResult *> *)fileList __attribute__((swift_name("init(fileList:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedFileListResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedFileListResult *)doCopyFileList:(NSMutableArray<SharedFileListResultFileResult *> *)fileList __attribute__((swift_name("doCopy(fileList:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSMutableArray<SharedFileListResultFileResult *> *fileList __attribute__((swift_name("fileList")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileListResult.Companion")))
@interface SharedFileListResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFileListResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileListResult.FileResult")))
@interface SharedFileListResultFileResult : SharedBase
- (instancetype)initWithType:(SharedFileType *)type fileId:(NSString *)fileId fileName:(NSString *)fileName thumbnail:(NSString *)thumbnail fullPath:(NSString *)fullPath fileUnitName:(NSString *)fileUnitName createDate:(NSString *)createDate fileSizeUnit:(NSString *)fileSizeUnit __attribute__((swift_name("init(type:fileId:fileName:thumbnail:fullPath:fileUnitName:createDate:fileSizeUnit:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedFileListResultFileResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedFileListResultFileResult *)doCopyType:(SharedFileType *)type fileId:(NSString *)fileId fileName:(NSString *)fileName thumbnail:(NSString *)thumbnail fullPath:(NSString *)fullPath fileUnitName:(NSString *)fileUnitName createDate:(NSString *)createDate fileSizeUnit:(NSString *)fileSizeUnit __attribute__((swift_name("doCopy(type:fileId:fileName:thumbnail:fullPath:fileUnitName:createDate:fileSizeUnit:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *createDate __attribute__((swift_name("createDate")));
@property (readonly) NSString *fileId __attribute__((swift_name("fileId")));
@property (readonly) NSString *fileName __attribute__((swift_name("fileName")));
@property (readonly) NSString *fileSizeUnit __attribute__((swift_name("fileSizeUnit")));
@property (readonly) NSString *fileUnitName __attribute__((swift_name("fileUnitName")));
@property (readonly) NSString *fullPath __attribute__((swift_name("fullPath")));
@property (readonly) NSString *thumbnail __attribute__((swift_name("thumbnail")));
@property (readonly) SharedFileType *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileListResult.FileResultCompanion")))
@interface SharedFileListResultFileResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFileListResultFileResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetAgentChatStatusResult")))
@interface SharedGetAgentChatStatusResult : SharedBase
- (instancetype)initWithCompanyId:(NSString * _Nullable)companyId chatStatus:(SharedInt * _Nullable)chatStatus __attribute__((swift_name("init(companyId:chatStatus:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetAgentChatStatusResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetAgentChatStatusResult *)doCopyCompanyId:(NSString * _Nullable)companyId chatStatus:(SharedInt * _Nullable)chatStatus __attribute__((swift_name("doCopy(companyId:chatStatus:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedInt * _Nullable chatStatus __attribute__((swift_name("chatStatus")));
@property (readonly) NSString * _Nullable companyId __attribute__((swift_name("companyId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetAgentChatStatusResult.Companion")))
@interface SharedGetAgentChatStatusResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetAgentChatStatusResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatMessageResult")))
@interface SharedGetChatMessageResult : SharedBase
- (instancetype)initWithChatMessageList:(NSArray<SharedGetChatMessageResultChatMessageList *> * _Nullable)chatMessageList newestMsgTime:(SharedLong * _Nullable)newestMsgTime oldestMsgTime:(SharedLong * _Nullable)oldestMsgTime chatRoomDetail:(SharedGetFollowerChatResultChatRoomList * _Nullable)chatRoomDetail follower:(SharedGetChatMessageResultFollowerInfo *)follower searchFollower:(SharedGetChatMessageResultSearchFollowerInfo *)searchFollower __attribute__((swift_name("init(chatMessageList:newestMsgTime:oldestMsgTime:chatRoomDetail:follower:searchFollower:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetChatMessageResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetChatMessageResult *)doCopyChatMessageList:(NSArray<SharedGetChatMessageResultChatMessageList *> * _Nullable)chatMessageList newestMsgTime:(SharedLong * _Nullable)newestMsgTime oldestMsgTime:(SharedLong * _Nullable)oldestMsgTime chatRoomDetail:(SharedGetFollowerChatResultChatRoomList * _Nullable)chatRoomDetail follower:(SharedGetChatMessageResultFollowerInfo *)follower searchFollower:(SharedGetChatMessageResultSearchFollowerInfo *)searchFollower __attribute__((swift_name("doCopy(chatMessageList:newestMsgTime:oldestMsgTime:chatRoomDetail:follower:searchFollower:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedGetChatMessageResultChatMessageList *> * _Nullable chatMessageList __attribute__((swift_name("chatMessageList")));
@property (readonly) SharedGetFollowerChatResultChatRoomList * _Nullable chatRoomDetail __attribute__((swift_name("chatRoomDetail")));
@property (readonly) SharedGetChatMessageResultFollowerInfo *follower __attribute__((swift_name("follower")));
@property (readonly) SharedLong * _Nullable newestMsgTime __attribute__((swift_name("newestMsgTime")));
@property (readonly) SharedLong * _Nullable oldestMsgTime __attribute__((swift_name("oldestMsgTime")));
@property (readonly) SharedGetChatMessageResultSearchFollowerInfo *searchFollower __attribute__((swift_name("searchFollower")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatMessageResult.ChatMessageList")))
@interface SharedGetChatMessageResultChatMessageList : SharedBase
- (instancetype)initWithId:(NSString * _Nullable)id chatMessageType:(SharedChatMessageType *)chatMessageType chatMode:(SharedChatMode *)chatMode isReplied:(BOOL)isReplied messageTitle:(NSString *)messageTitle messageSent:(NSArray<SharedGetChatMessageResultMessageSent *> * _Nullable)messageSent timeStamp:(int64_t)timeStamp tempId:(NSString * _Nullable)tempId createdAt:(NSString *)createdAt user:(SharedGetChatMessageResultUserInfo *)user isRead:(BOOL)isRead mention:(SharedGetChatMessageResultMentionMessage * _Nullable)mention followerDisplayName:(NSString * _Nullable)followerDisplayName messageSentByName:(NSString * _Nullable)messageSentByName messageSentByImage:(NSString * _Nullable)messageSentByImage chatCategory:(SharedChatCategory * _Nullable)chatCategory __attribute__((swift_name("init(id:chatMessageType:chatMode:isReplied:messageTitle:messageSent:timeStamp:tempId:createdAt:user:isRead:mention:followerDisplayName:messageSentByName:messageSentByImage:chatCategory:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetChatMessageResultChatMessageListCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetChatMessageResultChatMessageList *)doCopyId:(NSString * _Nullable)id chatMessageType:(SharedChatMessageType *)chatMessageType chatMode:(SharedChatMode *)chatMode isReplied:(BOOL)isReplied messageTitle:(NSString *)messageTitle messageSent:(NSArray<SharedGetChatMessageResultMessageSent *> * _Nullable)messageSent timeStamp:(int64_t)timeStamp tempId:(NSString * _Nullable)tempId createdAt:(NSString *)createdAt user:(SharedGetChatMessageResultUserInfo *)user isRead:(BOOL)isRead mention:(SharedGetChatMessageResultMentionMessage * _Nullable)mention followerDisplayName:(NSString * _Nullable)followerDisplayName messageSentByName:(NSString * _Nullable)messageSentByName messageSentByImage:(NSString * _Nullable)messageSentByImage chatCategory:(SharedChatCategory * _Nullable)chatCategory __attribute__((swift_name("doCopy(id:chatMessageType:chatMode:isReplied:messageTitle:messageSent:timeStamp:tempId:createdAt:user:isRead:mention:followerDisplayName:messageSentByName:messageSentByImage:chatCategory:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedChatCategory * _Nullable chatCategory __attribute__((swift_name("chatCategory")));
@property (readonly) SharedChatMessageType *chatMessageType __attribute__((swift_name("chatMessageType")));
@property (readonly) SharedChatMode *chatMode __attribute__((swift_name("chatMode")));
@property (readonly) NSString *createdAt __attribute__((swift_name("createdAt")));
@property (readonly) NSString * _Nullable followerDisplayName __attribute__((swift_name("followerDisplayName")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) BOOL isRead __attribute__((swift_name("isRead")));
@property (readonly) BOOL isReplied __attribute__((swift_name("isReplied")));
@property (readonly) SharedGetChatMessageResultMentionMessage * _Nullable mention __attribute__((swift_name("mention")));
@property (readonly) NSArray<SharedGetChatMessageResultMessageSent *> * _Nullable messageSent __attribute__((swift_name("messageSent")));
@property (readonly) NSString * _Nullable messageSentByImage __attribute__((swift_name("messageSentByImage")));
@property (readonly) NSString * _Nullable messageSentByName __attribute__((swift_name("messageSentByName")));
@property (readonly) NSString *messageTitle __attribute__((swift_name("messageTitle")));
@property (readonly) NSString * _Nullable tempId __attribute__((swift_name("tempId")));
@property (readonly) int64_t timeStamp __attribute__((swift_name("timeStamp")));
@property (readonly) SharedGetChatMessageResultUserInfo *user __attribute__((swift_name("user")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatMessageResult.ChatMessageListCompanion")))
@interface SharedGetChatMessageResultChatMessageListCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetChatMessageResultChatMessageListCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatMessageResult.Companion")))
@interface SharedGetChatMessageResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetChatMessageResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatMessageResult.CustomerProfile")))
@interface SharedGetChatMessageResultCustomerProfile : SharedBase
- (instancetype)initWithId:(NSString * _Nullable)id name:(NSString * _Nullable)name nickname:(NSString * _Nullable)nickname profileImage:(NSString * _Nullable)profileImage __attribute__((swift_name("init(id:name:nickname:profileImage:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetChatMessageResultCustomerProfileCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetChatMessageResultCustomerProfile *)doCopyId:(NSString * _Nullable)id name:(NSString * _Nullable)name nickname:(NSString * _Nullable)nickname profileImage:(NSString * _Nullable)profileImage __attribute__((swift_name("doCopy(id:name:nickname:profileImage:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable nickname __attribute__((swift_name("nickname")));
@property (readonly) NSString * _Nullable profileImage __attribute__((swift_name("profileImage")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatMessageResult.CustomerProfileCompanion")))
@interface SharedGetChatMessageResultCustomerProfileCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetChatMessageResultCustomerProfileCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatMessageResult.FollowerInfo")))
@interface SharedGetChatMessageResultFollowerInfo : SharedBase
- (instancetype)initWithId:(NSString *)id name:(NSString * _Nullable)name profileImage:(NSString * _Nullable)profileImage nickname:(NSString * _Nullable)nickname __attribute__((swift_name("init(id:name:profileImage:nickname:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetChatMessageResultFollowerInfoCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetChatMessageResultFollowerInfo *)doCopyId:(NSString *)id name:(NSString * _Nullable)name profileImage:(NSString * _Nullable)profileImage nickname:(NSString * _Nullable)nickname __attribute__((swift_name("doCopy(id:name:profileImage:nickname:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable nickname __attribute__((swift_name("nickname")));
@property (readonly) NSString * _Nullable profileImage __attribute__((swift_name("profileImage")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatMessageResult.FollowerInfoCompanion")))
@interface SharedGetChatMessageResultFollowerInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetChatMessageResultFollowerInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatMessageResult.GroupInfo")))
@interface SharedGetChatMessageResultGroupInfo : SharedBase
- (instancetype)initWithId:(NSString * _Nullable)id name:(NSString * _Nullable)name settingVisibility:(SharedBoolean * _Nullable)settingVisibility channelId:(NSString * _Nullable)channelId __attribute__((swift_name("init(id:name:settingVisibility:channelId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetChatMessageResultGroupInfoCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetChatMessageResultGroupInfo *)doCopyId:(NSString * _Nullable)id name:(NSString * _Nullable)name settingVisibility:(SharedBoolean * _Nullable)settingVisibility channelId:(NSString * _Nullable)channelId __attribute__((swift_name("doCopy(id:name:settingVisibility:channelId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable channelId __attribute__((swift_name("channelId")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) SharedBoolean * _Nullable settingVisibility __attribute__((swift_name("settingVisibility")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatMessageResult.GroupInfoCompanion")))
@interface SharedGetChatMessageResultGroupInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetChatMessageResultGroupInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatMessageResult.MentionMessage")))
@interface SharedGetChatMessageResultMentionMessage : SharedBase
- (instancetype)initWithId:(NSString *)id messageSent:(NSArray<SharedGetChatMessageResultMessageSent *> * _Nullable)messageSent __attribute__((swift_name("init(id:messageSent:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetChatMessageResultMentionMessageCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetChatMessageResultMentionMessage *)doCopyId:(NSString *)id messageSent:(NSArray<SharedGetChatMessageResultMessageSent *> * _Nullable)messageSent __attribute__((swift_name("doCopy(id:messageSent:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSArray<SharedGetChatMessageResultMessageSent *> * _Nullable messageSent __attribute__((swift_name("messageSent")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatMessageResult.MentionMessageCompanion")))
@interface SharedGetChatMessageResultMentionMessageCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetChatMessageResultMentionMessageCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatMessageResult.MessageSent")))
@interface SharedGetChatMessageResultMessageSent : SharedBase
- (instancetype)initWithType:(SharedMessageType *)type message:(NSString * _Nullable)message previewUrl:(NSString * _Nullable)previewUrl fullUrl:(NSString * _Nullable)fullUrl contentSizeOrDuration:(SharedLong * _Nullable)contentSizeOrDuration contents:(NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> * _Nullable)contents contentsHtml:(NSString * _Nullable)contentsHtml stickerResourceType:(SharedStickerType * _Nullable)stickerResourceType __attribute__((swift_name("init(type:message:previewUrl:fullUrl:contentSizeOrDuration:contents:contentsHtml:stickerResourceType:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetChatMessageResultMessageSentCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetChatMessageResultMessageSent *)doCopyType:(SharedMessageType *)type message:(NSString * _Nullable)message previewUrl:(NSString * _Nullable)previewUrl fullUrl:(NSString * _Nullable)fullUrl contentSizeOrDuration:(SharedLong * _Nullable)contentSizeOrDuration contents:(NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> * _Nullable)contents contentsHtml:(NSString * _Nullable)contentsHtml stickerResourceType:(SharedStickerType * _Nullable)stickerResourceType __attribute__((swift_name("doCopy(type:message:previewUrl:fullUrl:contentSizeOrDuration:contents:contentsHtml:stickerResourceType:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedLong * _Nullable contentSizeOrDuration __attribute__((swift_name("contentSizeOrDuration")));
@property (readonly) NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> * _Nullable contents __attribute__((swift_name("contents")));
@property (readonly) NSString * _Nullable contentsHtml __attribute__((swift_name("contentsHtml")));
@property (readonly) NSString * _Nullable fullUrl __attribute__((swift_name("fullUrl")));
@property (readonly) NSString * _Nullable message __attribute__((swift_name("message")));
@property (readonly) NSString * _Nullable previewUrl __attribute__((swift_name("previewUrl")));
@property (readonly) SharedStickerType * _Nullable stickerResourceType __attribute__((swift_name("stickerResourceType")));
@property (readonly) SharedMessageType *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatMessageResult.MessageSentCompanion")))
@interface SharedGetChatMessageResultMessageSentCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetChatMessageResultMessageSentCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatMessageResult.SearchFollowerInfo")))
@interface SharedGetChatMessageResultSearchFollowerInfo : SharedBase
- (instancetype)initWithId:(NSString *)id name:(NSString * _Nullable)name profileImage:(NSString * _Nullable)profileImage chatCategory:(NSString * _Nullable)chatCategory __attribute__((swift_name("init(id:name:profileImage:chatCategory:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetChatMessageResultSearchFollowerInfoCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetChatMessageResultSearchFollowerInfo *)doCopyId:(NSString *)id name:(NSString * _Nullable)name profileImage:(NSString * _Nullable)profileImage chatCategory:(NSString * _Nullable)chatCategory __attribute__((swift_name("doCopy(id:name:profileImage:chatCategory:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable chatCategory __attribute__((swift_name("chatCategory")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable profileImage __attribute__((swift_name("profileImage")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatMessageResult.SearchFollowerInfoCompanion")))
@interface SharedGetChatMessageResultSearchFollowerInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetChatMessageResultSearchFollowerInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatMessageResult.UserInfo")))
@interface SharedGetChatMessageResultUserInfo : SharedBase
- (instancetype)initWithId:(NSString * _Nullable)id firstname:(NSString * _Nullable)firstname lastname:(NSString * _Nullable)lastname profileImage:(NSString * _Nullable)profileImage socketCompanyID:(NSString * _Nullable)socketCompanyID socketChannelId:(NSString * _Nullable)socketChannelId socketStatusExpired:(NSString * _Nullable)socketStatusExpired __attribute__((swift_name("init(id:firstname:lastname:profileImage:socketCompanyID:socketChannelId:socketStatusExpired:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetChatMessageResultUserInfoCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetChatMessageResultUserInfo *)doCopyId:(NSString * _Nullable)id firstname:(NSString * _Nullable)firstname lastname:(NSString * _Nullable)lastname profileImage:(NSString * _Nullable)profileImage socketCompanyID:(NSString * _Nullable)socketCompanyID socketChannelId:(NSString * _Nullable)socketChannelId socketStatusExpired:(NSString * _Nullable)socketStatusExpired __attribute__((swift_name("doCopy(id:firstname:lastname:profileImage:socketCompanyID:socketChannelId:socketStatusExpired:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable firstname __attribute__((swift_name("firstname")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable lastname __attribute__((swift_name("lastname")));
@property (readonly) NSString * _Nullable profileImage __attribute__((swift_name("profileImage")));
@property (readonly) NSString * _Nullable socketChannelId __attribute__((swift_name("socketChannelId")));
@property (readonly) NSString * _Nullable socketCompanyID __attribute__((swift_name("socketCompanyID")));
@property (readonly) NSString * _Nullable socketStatusExpired __attribute__((swift_name("socketStatusExpired")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatMessageResult.UserInfoCompanion")))
@interface SharedGetChatMessageResultUserInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetChatMessageResultUserInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatResult")))
@interface SharedGetFollowerChatResult : SharedBase
- (instancetype)initWithChatRoom:(NSArray<SharedGetFollowerChatResultChatRoomList *> * _Nullable)chatRoom chatRoomPin:(NSArray<SharedGetFollowerChatResultChatRoomList *> * _Nullable)chatRoomPin __attribute__((swift_name("init(chatRoom:chatRoomPin:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetFollowerChatResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetFollowerChatResult *)doCopyChatRoom:(NSArray<SharedGetFollowerChatResultChatRoomList *> * _Nullable)chatRoom chatRoomPin:(NSArray<SharedGetFollowerChatResultChatRoomList *> * _Nullable)chatRoomPin __attribute__((swift_name("doCopy(chatRoom:chatRoomPin:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedGetFollowerChatResultChatRoomList *> * _Nullable chatRoom __attribute__((swift_name("chatRoom")));
@property (readonly) NSArray<SharedGetFollowerChatResultChatRoomList *> * _Nullable chatRoomPin __attribute__((swift_name("chatRoomPin")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatResult.ChatRoomList")))
@interface SharedGetFollowerChatResultChatRoomList : SharedBase
- (instancetype)initWithId:(NSString * _Nullable)id customerProfile:(SharedGetFollowerChatResultCustomerProfile *)customerProfile chatMessage:(NSString * _Nullable)chatMessage lastUpdate:(NSString * _Nullable)lastUpdate ownerChatStatus:(SharedOwnerChatStatus * _Nullable)ownerChatStatus userInfo:(SharedGetFollowerChatResultUserInfo * _Nullable)userInfo chatRoomStatus:(SharedChatRoomStatus * _Nullable)chatRoomStatus groupInfo:(SharedGetFollowerChatResultGroupInfo * _Nullable)groupInfo unreadCount:(int32_t)unreadCount channelType:(SharedChannelType *)channelType liveChatId:(NSString * _Nullable)liveChatId isFollowing:(BOOL)isFollowing countDownSecond:(SharedInt * _Nullable)countDownSecond chatRoomType:(SharedChatRoomType * _Nullable)chatRoomType isChatInAgentGroup:(SharedBoolean * _Nullable)isChatInAgentGroup chatCategory:(SharedChatCategory * _Nullable)chatCategory __attribute__((swift_name("init(id:customerProfile:chatMessage:lastUpdate:ownerChatStatus:userInfo:chatRoomStatus:groupInfo:unreadCount:channelType:liveChatId:isFollowing:countDownSecond:chatRoomType:isChatInAgentGroup:chatCategory:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetFollowerChatResultChatRoomListCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetFollowerChatResultChatRoomList *)doCopyId:(NSString * _Nullable)id customerProfile:(SharedGetFollowerChatResultCustomerProfile *)customerProfile chatMessage:(NSString * _Nullable)chatMessage lastUpdate:(NSString * _Nullable)lastUpdate ownerChatStatus:(SharedOwnerChatStatus * _Nullable)ownerChatStatus userInfo:(SharedGetFollowerChatResultUserInfo * _Nullable)userInfo chatRoomStatus:(SharedChatRoomStatus * _Nullable)chatRoomStatus groupInfo:(SharedGetFollowerChatResultGroupInfo * _Nullable)groupInfo unreadCount:(int32_t)unreadCount channelType:(SharedChannelType *)channelType liveChatId:(NSString * _Nullable)liveChatId isFollowing:(BOOL)isFollowing countDownSecond:(SharedInt * _Nullable)countDownSecond chatRoomType:(SharedChatRoomType * _Nullable)chatRoomType isChatInAgentGroup:(SharedBoolean * _Nullable)isChatInAgentGroup chatCategory:(SharedChatCategory * _Nullable)chatCategory __attribute__((swift_name("doCopy(id:customerProfile:chatMessage:lastUpdate:ownerChatStatus:userInfo:chatRoomStatus:groupInfo:unreadCount:channelType:liveChatId:isFollowing:countDownSecond:chatRoomType:isChatInAgentGroup:chatCategory:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedChannelType *channelType __attribute__((swift_name("channelType")));
@property (readonly) SharedChatCategory * _Nullable chatCategory __attribute__((swift_name("chatCategory")));
@property (readonly) NSString * _Nullable chatMessage __attribute__((swift_name("chatMessage")));
@property (readonly) SharedChatRoomStatus * _Nullable chatRoomStatus __attribute__((swift_name("chatRoomStatus")));
@property (readonly) SharedChatRoomType * _Nullable chatRoomType __attribute__((swift_name("chatRoomType")));
@property (readonly) SharedInt * _Nullable countDownSecond __attribute__((swift_name("countDownSecond")));
@property (readonly) SharedGetFollowerChatResultCustomerProfile *customerProfile __attribute__((swift_name("customerProfile")));
@property (readonly) SharedGetFollowerChatResultGroupInfo * _Nullable groupInfo __attribute__((swift_name("groupInfo")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) SharedBoolean * _Nullable isChatInAgentGroup __attribute__((swift_name("isChatInAgentGroup")));
@property (readonly) BOOL isFollowing __attribute__((swift_name("isFollowing")));
@property (readonly) NSString * _Nullable lastUpdate __attribute__((swift_name("lastUpdate")));
@property (readonly) NSString * _Nullable liveChatId __attribute__((swift_name("liveChatId")));
@property (readonly) SharedOwnerChatStatus * _Nullable ownerChatStatus __attribute__((swift_name("ownerChatStatus")));
@property (readonly) int32_t unreadCount __attribute__((swift_name("unreadCount")));
@property (readonly) SharedGetFollowerChatResultUserInfo * _Nullable userInfo __attribute__((swift_name("userInfo")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatResult.ChatRoomListCompanion")))
@interface SharedGetFollowerChatResultChatRoomListCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetFollowerChatResultChatRoomListCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatResult.Companion")))
@interface SharedGetFollowerChatResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetFollowerChatResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatResult.CustomerProfile")))
@interface SharedGetFollowerChatResultCustomerProfile : SharedBase
- (instancetype)initWithId:(NSString * _Nullable)id name:(NSString * _Nullable)name nickname:(NSString * _Nullable)nickname profileImage:(NSString * _Nullable)profileImage __attribute__((swift_name("init(id:name:nickname:profileImage:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetFollowerChatResultCustomerProfileCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetFollowerChatResultCustomerProfile *)doCopyId:(NSString * _Nullable)id name:(NSString * _Nullable)name nickname:(NSString * _Nullable)nickname profileImage:(NSString * _Nullable)profileImage __attribute__((swift_name("doCopy(id:name:nickname:profileImage:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable nickname __attribute__((swift_name("nickname")));
@property (readonly) NSString * _Nullable profileImage __attribute__((swift_name("profileImage")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatResult.CustomerProfileCompanion")))
@interface SharedGetFollowerChatResultCustomerProfileCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetFollowerChatResultCustomerProfileCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatResult.GroupInfo")))
@interface SharedGetFollowerChatResultGroupInfo : SharedBase
- (instancetype)initWithId:(NSString * _Nullable)id name:(NSString * _Nullable)name settingVisibility:(SharedBoolean * _Nullable)settingVisibility channelId:(NSString * _Nullable)channelId __attribute__((swift_name("init(id:name:settingVisibility:channelId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetFollowerChatResultGroupInfoCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetFollowerChatResultGroupInfo *)doCopyId:(NSString * _Nullable)id name:(NSString * _Nullable)name settingVisibility:(SharedBoolean * _Nullable)settingVisibility channelId:(NSString * _Nullable)channelId __attribute__((swift_name("doCopy(id:name:settingVisibility:channelId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable channelId __attribute__((swift_name("channelId")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) SharedBoolean * _Nullable settingVisibility __attribute__((swift_name("settingVisibility")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatResult.GroupInfoCompanion")))
@interface SharedGetFollowerChatResultGroupInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetFollowerChatResultGroupInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatResult.UserInfo")))
@interface SharedGetFollowerChatResultUserInfo : SharedBase
- (instancetype)initWithId:(NSString * _Nullable)id firstname:(NSString * _Nullable)firstname lastname:(NSString * _Nullable)lastname profileImage:(NSString * _Nullable)profileImage channelType:(SharedChannelType *)channelType socketChannelId:(NSString * _Nullable)socketChannelId socketStatusExpired:(NSString * _Nullable)socketStatusExpired __attribute__((swift_name("init(id:firstname:lastname:profileImage:channelType:socketChannelId:socketStatusExpired:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetFollowerChatResultUserInfoCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetFollowerChatResultUserInfo *)doCopyId:(NSString * _Nullable)id firstname:(NSString * _Nullable)firstname lastname:(NSString * _Nullable)lastname profileImage:(NSString * _Nullable)profileImage channelType:(SharedChannelType *)channelType socketChannelId:(NSString * _Nullable)socketChannelId socketStatusExpired:(NSString * _Nullable)socketStatusExpired __attribute__((swift_name("doCopy(id:firstname:lastname:profileImage:channelType:socketChannelId:socketStatusExpired:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedChannelType *channelType __attribute__((swift_name("channelType")));
@property (readonly) NSString * _Nullable firstname __attribute__((swift_name("firstname")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable lastname __attribute__((swift_name("lastname")));
@property (readonly) NSString * _Nullable profileImage __attribute__((swift_name("profileImage")));
@property (readonly) NSString * _Nullable socketChannelId __attribute__((swift_name("socketChannelId")));
@property (readonly) NSString * _Nullable socketStatusExpired __attribute__((swift_name("socketStatusExpired")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatResult.UserInfoCompanion")))
@interface SharedGetFollowerChatResultUserInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetFollowerChatResultUserInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetReplyTemplateResult")))
@interface SharedGetReplyTemplateResult : SharedBase
- (instancetype)initWithGroupList:(NSMutableArray<SharedGetReplyTemplateResultGroupList *> * _Nullable)groupList __attribute__((swift_name("init(groupList:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetReplyTemplateResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetReplyTemplateResult *)doCopyGroupList:(NSMutableArray<SharedGetReplyTemplateResultGroupList *> * _Nullable)groupList __attribute__((swift_name("doCopy(groupList:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSMutableArray<SharedGetReplyTemplateResultGroupList *> * _Nullable groupList __attribute__((swift_name("groupList")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetReplyTemplateResult.Companion")))
@interface SharedGetReplyTemplateResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetReplyTemplateResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetReplyTemplateResult.GroupList")))
@interface SharedGetReplyTemplateResultGroupList : SharedBase
- (instancetype)initWithId:(NSString * _Nullable)id name:(NSString * _Nullable)name replyMessage:(NSMutableArray<SharedGetReplyTemplateResultReplyMessage *> * _Nullable)replyMessage __attribute__((swift_name("init(id:name:replyMessage:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetReplyTemplateResultGroupListCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetReplyTemplateResultGroupList *)doCopyId:(NSString * _Nullable)id name:(NSString * _Nullable)name replyMessage:(NSMutableArray<SharedGetReplyTemplateResultReplyMessage *> * _Nullable)replyMessage __attribute__((swift_name("doCopy(id:name:replyMessage:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSMutableArray<SharedGetReplyTemplateResultReplyMessage *> * _Nullable replyMessage __attribute__((swift_name("replyMessage")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetReplyTemplateResult.GroupListCompanion")))
@interface SharedGetReplyTemplateResultGroupListCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetReplyTemplateResultGroupListCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetReplyTemplateResult.ReplyMessage")))
@interface SharedGetReplyTemplateResultReplyMessage : SharedBase
- (instancetype)initWithReplyMessageId:(NSString *)replyMessageId message:(NSString *)message __attribute__((swift_name("init(replyMessageId:message:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetReplyTemplateResultReplyMessageCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetReplyTemplateResultReplyMessage *)doCopyReplyMessageId:(NSString *)replyMessageId message:(NSString *)message __attribute__((swift_name("doCopy(replyMessageId:message:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@property (readonly) NSString *replyMessageId __attribute__((swift_name("replyMessageId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetReplyTemplateResult.ReplyMessageCompanion")))
@interface SharedGetReplyTemplateResultReplyMessageCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetReplyTemplateResultReplyMessageCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetSearchFollowerResult")))
@interface SharedGetSearchFollowerResult : SharedBase
- (instancetype)initWithListFollowerData:(NSArray<SharedGetSearchFollowerResultFollower *> *)listFollowerData __attribute__((swift_name("init(listFollowerData:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetSearchFollowerResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetSearchFollowerResult *)doCopyListFollowerData:(NSArray<SharedGetSearchFollowerResultFollower *> *)listFollowerData __attribute__((swift_name("doCopy(listFollowerData:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedGetSearchFollowerResultFollower *> *listFollowerData __attribute__((swift_name("listFollowerData")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetSearchFollowerResult.Companion")))
@interface SharedGetSearchFollowerResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetSearchFollowerResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetSearchFollowerResult.Follower")))
@interface SharedGetSearchFollowerResultFollower : SharedBase
- (instancetype)initWithFollowerId:(NSString * _Nullable)followerId followerType:(NSString * _Nullable)followerType profileName:(NSString * _Nullable)profileName displayName:(NSString * _Nullable)displayName image:(NSString * _Nullable)image channelId:(NSString * _Nullable)channelId channelTypeId:(NSString * _Nullable)channelTypeId channelIcon:(NSString * _Nullable)channelIcon timeStamp:(SharedLong * _Nullable)timeStamp __attribute__((swift_name("init(followerId:followerType:profileName:displayName:image:channelId:channelTypeId:channelIcon:timeStamp:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetSearchFollowerResultFollowerCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetSearchFollowerResultFollower *)doCopyFollowerId:(NSString * _Nullable)followerId followerType:(NSString * _Nullable)followerType profileName:(NSString * _Nullable)profileName displayName:(NSString * _Nullable)displayName image:(NSString * _Nullable)image channelId:(NSString * _Nullable)channelId channelTypeId:(NSString * _Nullable)channelTypeId channelIcon:(NSString * _Nullable)channelIcon timeStamp:(SharedLong * _Nullable)timeStamp __attribute__((swift_name("doCopy(followerId:followerType:profileName:displayName:image:channelId:channelTypeId:channelIcon:timeStamp:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable channelIcon __attribute__((swift_name("channelIcon")));
@property (readonly) NSString * _Nullable channelId __attribute__((swift_name("channelId")));
@property (readonly) NSString * _Nullable channelTypeId __attribute__((swift_name("channelTypeId")));
@property (readonly) NSString * _Nullable displayName __attribute__((swift_name("displayName")));
@property (readonly) NSString * _Nullable followerId __attribute__((swift_name("followerId")));
@property (readonly) NSString * _Nullable followerType __attribute__((swift_name("followerType")));
@property (readonly) NSString * _Nullable image __attribute__((swift_name("image")));
@property (readonly) NSString * _Nullable profileName __attribute__((swift_name("profileName")));
@property (readonly) SharedLong * _Nullable timeStamp __attribute__((swift_name("timeStamp")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetSearchFollowerResult.FollowerCompanion")))
@interface SharedGetSearchFollowerResultFollowerCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetSearchFollowerResultFollowerCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupAssignResult")))
@interface SharedGroupAssignResult : SharedBase
- (instancetype)initWithGroupList:(NSArray<SharedGroupAssignResultGroupInfo *> *)groupList __attribute__((swift_name("init(groupList:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGroupAssignResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedGroupAssignResult *)doCopyGroupList:(NSArray<SharedGroupAssignResultGroupInfo *> *)groupList __attribute__((swift_name("doCopy(groupList:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedGroupAssignResultGroupInfo *> *groupList __attribute__((swift_name("groupList")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupAssignResult.Companion")))
@interface SharedGroupAssignResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGroupAssignResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupAssignResult.GroupInfo")))
@interface SharedGroupAssignResultGroupInfo : SharedBase
- (instancetype)initWithGroupId:(NSString * _Nullable)groupId groupName:(NSString * _Nullable)groupName isAvailable:(SharedBoolean * _Nullable)isAvailable agentList:(NSArray<SharedGroupAssignResultGroupInfoAgentInfo *> * _Nullable)agentList __attribute__((swift_name("init(groupId:groupName:isAvailable:agentList:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGroupAssignResultGroupInfoCompanion *companion __attribute__((swift_name("companion")));
- (SharedGroupAssignResultGroupInfo *)doCopyGroupId:(NSString * _Nullable)groupId groupName:(NSString * _Nullable)groupName isAvailable:(SharedBoolean * _Nullable)isAvailable agentList:(NSArray<SharedGroupAssignResultGroupInfoAgentInfo *> * _Nullable)agentList __attribute__((swift_name("doCopy(groupId:groupName:isAvailable:agentList:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedGroupAssignResultGroupInfoAgentInfo *> * _Nullable agentList __attribute__((swift_name("agentList")));
@property (readonly) NSString * _Nullable groupId __attribute__((swift_name("groupId")));
@property (readonly) NSString * _Nullable groupName __attribute__((swift_name("groupName")));
@property (readonly) SharedBoolean * _Nullable isAvailable __attribute__((swift_name("isAvailable")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupAssignResult.GroupInfoAgentInfo")))
@interface SharedGroupAssignResultGroupInfoAgentInfo : SharedBase
- (instancetype)initWithAgentID:(NSString * _Nullable)agentID agentName:(NSString * _Nullable)agentName agentImage:(NSString * _Nullable)agentImage agentRole:(NSString * _Nullable)agentRole isMobile:(SharedBoolean * _Nullable)isMobile isFull:(SharedBoolean * _Nullable)isFull isOnline:(SharedBoolean * _Nullable)isOnline isAvailable:(SharedBoolean * _Nullable)isAvailable __attribute__((swift_name("init(agentID:agentName:agentImage:agentRole:isMobile:isFull:isOnline:isAvailable:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGroupAssignResultGroupInfoAgentInfoCompanion *companion __attribute__((swift_name("companion")));
- (SharedGroupAssignResultGroupInfoAgentInfo *)doCopyAgentID:(NSString * _Nullable)agentID agentName:(NSString * _Nullable)agentName agentImage:(NSString * _Nullable)agentImage agentRole:(NSString * _Nullable)agentRole isMobile:(SharedBoolean * _Nullable)isMobile isFull:(SharedBoolean * _Nullable)isFull isOnline:(SharedBoolean * _Nullable)isOnline isAvailable:(SharedBoolean * _Nullable)isAvailable __attribute__((swift_name("doCopy(agentID:agentName:agentImage:agentRole:isMobile:isFull:isOnline:isAvailable:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable agentID __attribute__((swift_name("agentID")));
@property (readonly) NSString * _Nullable agentImage __attribute__((swift_name("agentImage")));
@property (readonly) NSString * _Nullable agentName __attribute__((swift_name("agentName")));
@property (readonly) NSString * _Nullable agentRole __attribute__((swift_name("agentRole")));
@property (readonly) SharedBoolean * _Nullable isAvailable __attribute__((swift_name("isAvailable")));
@property (readonly) SharedBoolean * _Nullable isFull __attribute__((swift_name("isFull")));
@property (readonly) SharedBoolean * _Nullable isMobile __attribute__((swift_name("isMobile")));
@property (readonly) SharedBoolean * _Nullable isOnline __attribute__((swift_name("isOnline")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupAssignResult.GroupInfoAgentInfoCompanion")))
@interface SharedGroupAssignResultGroupInfoAgentInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGroupAssignResultGroupInfoAgentInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupAssignResult.GroupInfoCompanion")))
@interface SharedGroupAssignResultGroupInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGroupAssignResultGroupInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupFilterResult")))
@interface SharedGroupFilterResult : SharedBase
- (instancetype)initWithAgentInfo:(NSArray<SharedGroupFilterResultGroupInfo *> *)agentInfo __attribute__((swift_name("init(agentInfo:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGroupFilterResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedGroupFilterResult *)doCopyAgentInfo:(NSArray<SharedGroupFilterResultGroupInfo *> *)agentInfo __attribute__((swift_name("doCopy(agentInfo:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedGroupFilterResultGroupInfo *> *agentInfo __attribute__((swift_name("agentInfo")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupFilterResult.Companion")))
@interface SharedGroupFilterResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGroupFilterResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupFilterResult.GroupInfo")))
@interface SharedGroupFilterResultGroupInfo : SharedBase
- (instancetype)initWithGroupId:(NSString * _Nullable)groupId groupName:(NSString * _Nullable)groupName agentCount:(SharedInt * _Nullable)agentCount __attribute__((swift_name("init(groupId:groupName:agentCount:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGroupFilterResultGroupInfoCompanion *companion __attribute__((swift_name("companion")));
- (SharedGroupFilterResultGroupInfo *)doCopyGroupId:(NSString * _Nullable)groupId groupName:(NSString * _Nullable)groupName agentCount:(SharedInt * _Nullable)agentCount __attribute__((swift_name("doCopy(groupId:groupName:agentCount:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedInt * _Nullable agentCount __attribute__((swift_name("agentCount")));
@property (readonly) NSString * _Nullable groupId __attribute__((swift_name("groupId")));
@property (readonly) NSString * _Nullable groupName __attribute__((swift_name("groupName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupFilterResult.GroupInfoCompanion")))
@interface SharedGroupFilterResultGroupInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGroupFilterResultGroupInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MasterDataChatResult")))
@interface SharedMasterDataChatResult : SharedBase
- (instancetype)initWithChannelTypeFilter:(NSArray<SharedMasterDataChatResultChannelInfo *> * _Nullable)channelTypeFilter chatTypeFilter:(NSArray<SharedMasterDataChatResultChatTypeInfo *> * _Nullable)chatTypeFilter __attribute__((swift_name("init(channelTypeFilter:chatTypeFilter:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedMasterDataChatResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedMasterDataChatResult *)doCopyChannelTypeFilter:(NSArray<SharedMasterDataChatResultChannelInfo *> * _Nullable)channelTypeFilter chatTypeFilter:(NSArray<SharedMasterDataChatResultChatTypeInfo *> * _Nullable)chatTypeFilter __attribute__((swift_name("doCopy(channelTypeFilter:chatTypeFilter:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedMasterDataChatResultChannelInfo *> * _Nullable channelTypeFilter __attribute__((swift_name("channelTypeFilter")));
@property (readonly) NSArray<SharedMasterDataChatResultChatTypeInfo *> * _Nullable chatTypeFilter __attribute__((swift_name("chatTypeFilter")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MasterDataChatResult.ChannelInfo")))
@interface SharedMasterDataChatResultChannelInfo : SharedBase
- (instancetype)initWithChannelId:(NSString * _Nullable)channelId channelName:(NSString * _Nullable)channelName channelStatus:(SharedBoolean * _Nullable)channelStatus channelIcon:(NSString * _Nullable)channelIcon __attribute__((swift_name("init(channelId:channelName:channelStatus:channelIcon:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedMasterDataChatResultChannelInfoCompanion *companion __attribute__((swift_name("companion")));
- (SharedMasterDataChatResultChannelInfo *)doCopyChannelId:(NSString * _Nullable)channelId channelName:(NSString * _Nullable)channelName channelStatus:(SharedBoolean * _Nullable)channelStatus channelIcon:(NSString * _Nullable)channelIcon __attribute__((swift_name("doCopy(channelId:channelName:channelStatus:channelIcon:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable channelIcon __attribute__((swift_name("channelIcon")));
@property (readonly) NSString * _Nullable channelId __attribute__((swift_name("channelId")));
@property (readonly) NSString * _Nullable channelName __attribute__((swift_name("channelName")));
@property (readonly) SharedBoolean * _Nullable channelStatus __attribute__((swift_name("channelStatus")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MasterDataChatResult.ChannelInfoCompanion")))
@interface SharedMasterDataChatResultChannelInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMasterDataChatResultChannelInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MasterDataChatResult.ChatTypeInfo")))
@interface SharedMasterDataChatResultChatTypeInfo : SharedBase
- (instancetype)initWithChatTypeName:(NSString * _Nullable)chatTypeName chatTypeValue:(NSString * _Nullable)chatTypeValue __attribute__((swift_name("init(chatTypeName:chatTypeValue:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedMasterDataChatResultChatTypeInfoCompanion *companion __attribute__((swift_name("companion")));
- (SharedMasterDataChatResultChatTypeInfo *)doCopyChatTypeName:(NSString * _Nullable)chatTypeName chatTypeValue:(NSString * _Nullable)chatTypeValue __attribute__((swift_name("doCopy(chatTypeName:chatTypeValue:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable chatTypeName __attribute__((swift_name("chatTypeName")));
@property (readonly) NSString * _Nullable chatTypeValue __attribute__((swift_name("chatTypeValue")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MasterDataChatResult.ChatTypeInfoCompanion")))
@interface SharedMasterDataChatResultChatTypeInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMasterDataChatResultChatTypeInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MasterDataChatResult.Companion")))
@interface SharedMasterDataChatResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMasterDataChatResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NotificationCountResult")))
@interface SharedNotificationCountResult : SharedBase
- (instancetype)initWithResult:(SharedNotificationCountResultNotificationCountData *)result __attribute__((swift_name("init(result:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedNotificationCountResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedNotificationCountResult *)doCopyResult:(SharedNotificationCountResultNotificationCountData *)result __attribute__((swift_name("doCopy(result:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedNotificationCountResultNotificationCountData *result __attribute__((swift_name("result")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NotificationCountResult.Companion")))
@interface SharedNotificationCountResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedNotificationCountResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NotificationCountResult.NotificationCountData")))
@interface SharedNotificationCountResultNotificationCountData : SharedBase
- (instancetype)initWithNotificationCount:(int32_t)notificationCount __attribute__((swift_name("init(notificationCount:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedNotificationCountResultNotificationCountDataCompanion *companion __attribute__((swift_name("companion")));
- (SharedNotificationCountResultNotificationCountData *)doCopyNotificationCount:(int32_t)notificationCount __attribute__((swift_name("doCopy(notificationCount:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t notificationCount __attribute__((swift_name("notificationCount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NotificationCountResult.NotificationCountDataCompanion")))
@interface SharedNotificationCountResultNotificationCountDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedNotificationCountResultNotificationCountDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplyMessageResult")))
@interface SharedReplyMessageResult : SharedBase
- (instancetype)initWithId:(NSMutableArray<SharedGetChatMessageResultMessageSent *> *)id messageSent:(NSMutableArray<SharedGetChatMessageResultMessageSent *> *)messageSent __attribute__((swift_name("init(id:messageSent:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedReplyMessageResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedReplyMessageResult *)doCopyId:(NSMutableArray<SharedGetChatMessageResultMessageSent *> *)id messageSent:(NSMutableArray<SharedGetChatMessageResultMessageSent *> *)messageSent __attribute__((swift_name("doCopy(id:messageSent:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSMutableArray<SharedGetChatMessageResultMessageSent *> *id __attribute__((swift_name("id")));
@property (readonly) NSMutableArray<SharedGetChatMessageResultMessageSent *> *messageSent __attribute__((swift_name("messageSent")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplyMessageResult.Companion")))
@interface SharedReplyMessageResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedReplyMessageResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((swift_name("BaseResponseStatusEntity")))
@interface SharedBaseResponseStatusEntity : SharedBase
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedBaseResponseStatusEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable message __attribute__((swift_name("message")));
@property (readonly) SharedBoolean * _Nullable status __attribute__((swift_name("status")));
@property (readonly) NSString * _Nullable statusCode __attribute__((swift_name("statusCode")));
@property (readonly) NSString * _Nullable statusMessage __attribute__((swift_name("statusMessage")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageInChatResult")))
@interface SharedSearchMessageInChatResult : SharedBaseResponseStatusEntity
- (instancetype)initWithTotalCount:(SharedInt * _Nullable)totalCount messageFound:(NSArray<SharedSearchMessageInChatResultMessage *> * _Nullable)messageFound messageFoundAll:(NSArray<SharedSearchMessageInChatResultMessageFoundAll *> * _Nullable)messageFoundAll __attribute__((swift_name("init(totalCount:messageFound:messageFoundAll:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedSearchMessageInChatResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedSearchMessageInChatResult *)doCopyTotalCount:(SharedInt * _Nullable)totalCount messageFound:(NSArray<SharedSearchMessageInChatResultMessage *> * _Nullable)messageFound messageFoundAll:(NSArray<SharedSearchMessageInChatResultMessageFoundAll *> * _Nullable)messageFoundAll __attribute__((swift_name("doCopy(totalCount:messageFound:messageFoundAll:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedSearchMessageInChatResultMessage *> * _Nullable messageFound __attribute__((swift_name("messageFound")));
@property (readonly) NSArray<SharedSearchMessageInChatResultMessageFoundAll *> * _Nullable messageFoundAll __attribute__((swift_name("messageFoundAll")));
@property (readonly) SharedInt * _Nullable totalCount __attribute__((swift_name("totalCount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageInChatResult.Companion")))
@interface SharedSearchMessageInChatResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchMessageInChatResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageInChatResult.Message")))
@interface SharedSearchMessageInChatResultMessage : SharedBase
- (instancetype)initWith_id:(NSString *)_id messageText:(NSString * _Nullable)messageText messageFromType:(NSString * _Nullable)messageFromType messageToType:(NSString * _Nullable)messageToType timestamp:(int64_t)timestamp followerId:(NSString *)followerId userInfo:(SharedSearchMessageInChatResultMessageUser * _Nullable)userInfo __attribute__((swift_name("init(_id:messageText:messageFromType:messageToType:timestamp:followerId:userInfo:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSearchMessageInChatResultMessageCompanion *companion __attribute__((swift_name("companion")));
- (SharedSearchMessageInChatResultMessage *)doCopy_id:(NSString *)_id messageText:(NSString * _Nullable)messageText messageFromType:(NSString * _Nullable)messageFromType messageToType:(NSString * _Nullable)messageToType timestamp:(int64_t)timestamp followerId:(NSString *)followerId userInfo:(SharedSearchMessageInChatResultMessageUser * _Nullable)userInfo __attribute__((swift_name("doCopy(_id:messageText:messageFromType:messageToType:timestamp:followerId:userInfo:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *_id __attribute__((swift_name("_id")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@property (readonly) NSString * _Nullable messageFromType __attribute__((swift_name("messageFromType")));
@property (readonly) NSString * _Nullable messageText __attribute__((swift_name("messageText")));
@property (readonly) NSString * _Nullable messageToType __attribute__((swift_name("messageToType")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@property (readonly) SharedSearchMessageInChatResultMessageUser * _Nullable userInfo __attribute__((swift_name("userInfo")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageInChatResult.MessageCompanion")))
@interface SharedSearchMessageInChatResultMessageCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchMessageInChatResultMessageCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageInChatResult.MessageUser")))
@interface SharedSearchMessageInChatResultMessageUser : SharedBase
- (instancetype)initWithFirstname:(NSString * _Nullable)firstname lastname:(NSString * _Nullable)lastname imageUrl:(NSString * _Nullable)imageUrl __attribute__((swift_name("init(firstname:lastname:imageUrl:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSearchMessageInChatResultMessageUserCompanion *companion __attribute__((swift_name("companion")));
- (SharedSearchMessageInChatResultMessageUser *)doCopyFirstname:(NSString * _Nullable)firstname lastname:(NSString * _Nullable)lastname imageUrl:(NSString * _Nullable)imageUrl __attribute__((swift_name("doCopy(firstname:lastname:imageUrl:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable firstname __attribute__((swift_name("firstname")));
@property (readonly) NSString * _Nullable imageUrl __attribute__((swift_name("imageUrl")));
@property (readonly) NSString * _Nullable lastname __attribute__((swift_name("lastname")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageInChatResult.MessageUserCompanion")))
@interface SharedSearchMessageInChatResultMessageUserCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchMessageInChatResultMessageUserCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageInChatResult.MessageFoundAll")))
@interface SharedSearchMessageInChatResultMessageFoundAll : SharedBase
- (instancetype)initWith_id:(NSString *)_id timestamp:(int64_t)timestamp __attribute__((swift_name("init(_id:timestamp:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSearchMessageInChatResultMessageFoundAllCompanion *companion __attribute__((swift_name("companion")));
- (SharedSearchMessageInChatResultMessageFoundAll *)doCopy_id:(NSString *)_id timestamp:(int64_t)timestamp __attribute__((swift_name("doCopy(_id:timestamp:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *_id __attribute__((swift_name("_id")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageInChatResult.MessageFoundAllCompanion")))
@interface SharedSearchMessageInChatResultMessageFoundAllCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchMessageInChatResultMessageFoundAllCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageResult")))
@interface SharedSearchMessageResult : SharedBase
- (instancetype)initWithListChatData:(NSArray<SharedSearchMessageResultSearchChatInfo *> *)listChatData __attribute__((swift_name("init(listChatData:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSearchMessageResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedSearchMessageResult *)doCopyListChatData:(NSArray<SharedSearchMessageResultSearchChatInfo *> *)listChatData __attribute__((swift_name("doCopy(listChatData:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedSearchMessageResultSearchChatInfo *> *listChatData __attribute__((swift_name("listChatData")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageResult.Companion")))
@interface SharedSearchMessageResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchMessageResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageResult.SearchChatInfo")))
@interface SharedSearchMessageResultSearchChatInfo : SharedBase
- (instancetype)initWithFollowerId:(NSString * _Nullable)followerId followerType:(NSString * _Nullable)followerType profileName:(NSString * _Nullable)profileName displayName:(NSString * _Nullable)displayName image:(NSString * _Nullable)image channelId:(NSString * _Nullable)channelId channelTypeId:(NSString * _Nullable)channelTypeId channelIcon:(NSString * _Nullable)channelIcon countMessage:(SharedInt * _Nullable)countMessage __attribute__((swift_name("init(followerId:followerType:profileName:displayName:image:channelId:channelTypeId:channelIcon:countMessage:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSearchMessageResultSearchChatInfoCompanion *companion __attribute__((swift_name("companion")));
- (SharedSearchMessageResultSearchChatInfo *)doCopyFollowerId:(NSString * _Nullable)followerId followerType:(NSString * _Nullable)followerType profileName:(NSString * _Nullable)profileName displayName:(NSString * _Nullable)displayName image:(NSString * _Nullable)image channelId:(NSString * _Nullable)channelId channelTypeId:(NSString * _Nullable)channelTypeId channelIcon:(NSString * _Nullable)channelIcon countMessage:(SharedInt * _Nullable)countMessage __attribute__((swift_name("doCopy(followerId:followerType:profileName:displayName:image:channelId:channelTypeId:channelIcon:countMessage:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable channelIcon __attribute__((swift_name("channelIcon")));
@property (readonly) NSString * _Nullable channelId __attribute__((swift_name("channelId")));
@property (readonly) NSString * _Nullable channelTypeId __attribute__((swift_name("channelTypeId")));
@property (readonly) SharedInt * _Nullable countMessage __attribute__((swift_name("countMessage")));
@property (readonly) NSString * _Nullable displayName __attribute__((swift_name("displayName")));
@property (readonly) NSString * _Nullable followerId __attribute__((swift_name("followerId")));
@property (readonly) NSString * _Nullable followerType __attribute__((swift_name("followerType")));
@property (readonly) NSString * _Nullable image __attribute__((swift_name("image")));
@property (readonly) NSString * _Nullable profileName __attribute__((swift_name("profileName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageResult.SearchChatInfoCompanion")))
@interface SharedSearchMessageResultSearchChatInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchMessageResultSearchChatInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchNameResult")))
@interface SharedSearchNameResult : SharedBase
- (instancetype)initWithListFollowerId:(NSArray<NSString *> *)listFollowerId __attribute__((swift_name("init(listFollowerId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSearchNameResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedSearchNameResult *)doCopyListFollowerId:(NSArray<NSString *> *)listFollowerId __attribute__((swift_name("doCopy(listFollowerId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<NSString *> *listFollowerId __attribute__((swift_name("listFollowerId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchNameResult.Companion")))
@interface SharedSearchNameResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchNameResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchTagResult")))
@interface SharedSearchTagResult : SharedBase
- (instancetype)initWithFollowerList:(NSArray<SharedSearchTagResultFollower *> *)followerList __attribute__((swift_name("init(followerList:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSearchTagResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedSearchTagResult *)doCopyFollowerList:(NSArray<SharedSearchTagResultFollower *> *)followerList __attribute__((swift_name("doCopy(followerList:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedSearchTagResultFollower *> *followerList __attribute__((swift_name("followerList")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchTagResult.Companion")))
@interface SharedSearchTagResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchTagResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchTagResult.Follower")))
@interface SharedSearchTagResultFollower : SharedBase
- (instancetype)initWithFollowerId:(NSString * _Nullable)followerId profileName:(NSString * _Nullable)profileName displayName:(NSString * _Nullable)displayName image:(NSString * _Nullable)image channelType:(NSString * _Nullable)channelType channelIcon:(NSString * _Nullable)channelIcon lastMessageText:(NSString * _Nullable)lastMessageText lastMessageTimeStamp:(SharedLong * _Nullable)lastMessageTimeStamp __attribute__((swift_name("init(followerId:profileName:displayName:image:channelType:channelIcon:lastMessageText:lastMessageTimeStamp:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSearchTagResultFollowerCompanion *companion __attribute__((swift_name("companion")));
- (SharedSearchTagResultFollower *)doCopyFollowerId:(NSString * _Nullable)followerId profileName:(NSString * _Nullable)profileName displayName:(NSString * _Nullable)displayName image:(NSString * _Nullable)image channelType:(NSString * _Nullable)channelType channelIcon:(NSString * _Nullable)channelIcon lastMessageText:(NSString * _Nullable)lastMessageText lastMessageTimeStamp:(SharedLong * _Nullable)lastMessageTimeStamp __attribute__((swift_name("doCopy(followerId:profileName:displayName:image:channelType:channelIcon:lastMessageText:lastMessageTimeStamp:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable channelIcon __attribute__((swift_name("channelIcon")));
@property (readonly) NSString * _Nullable channelType __attribute__((swift_name("channelType")));
@property (readonly) NSString * _Nullable displayName __attribute__((swift_name("displayName")));
@property (readonly) NSString * _Nullable followerId __attribute__((swift_name("followerId")));
@property (readonly) NSString * _Nullable image __attribute__((swift_name("image")));
@property (readonly) NSString * _Nullable lastMessageText __attribute__((swift_name("lastMessageText")));
@property (readonly) SharedLong * _Nullable lastMessageTimeStamp __attribute__((swift_name("lastMessageTimeStamp")));
@property (readonly) NSString * _Nullable profileName __attribute__((swift_name("profileName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchTagResult.FollowerCompanion")))
@interface SharedSearchTagResultFollowerCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchTagResultFollowerCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StickerResult")))
@interface SharedStickerResult : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(NSArray<SharedStickerResultSticker *> *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedStickerResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedStickerResult *)doCopyResponse:(NSArray<SharedStickerResultSticker *> *)response __attribute__((swift_name("doCopy(response:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedStickerResultSticker *> *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StickerResult.Companion")))
@interface SharedStickerResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedStickerResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StickerResult.Sticker")))
@interface SharedStickerResultSticker : SharedBase
- (instancetype)initWithPackageId:(NSString * _Nullable)packageId packageImageUrl:(NSString * _Nullable)packageImageUrl stickerList:(NSArray<SharedStickerResultStickerStickerData *> *)stickerList __attribute__((swift_name("init(packageId:packageImageUrl:stickerList:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedStickerResultStickerCompanion *companion __attribute__((swift_name("companion")));
- (SharedStickerResultSticker *)doCopyPackageId:(NSString * _Nullable)packageId packageImageUrl:(NSString * _Nullable)packageImageUrl stickerList:(NSArray<SharedStickerResultStickerStickerData *> *)stickerList __attribute__((swift_name("doCopy(packageId:packageImageUrl:stickerList:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable packageId __attribute__((swift_name("packageId")));
@property (readonly) NSString * _Nullable packageImageUrl __attribute__((swift_name("packageImageUrl")));
@property (readonly) NSArray<SharedStickerResultStickerStickerData *> *stickerList __attribute__((swift_name("stickerList")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StickerResult.StickerCompanion")))
@interface SharedStickerResultStickerCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedStickerResultStickerCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StickerResult.StickerStickerData")))
@interface SharedStickerResultStickerStickerData : SharedBase
- (instancetype)initWithStickerNumber:(int32_t)stickerNumber packageId:(NSString * _Nullable)packageId stickerId:(int32_t)stickerId stickerType:(SharedStickerType *)stickerType stickerImageUrl:(NSString * _Nullable)stickerImageUrl stickerAnimationUrl:(NSString * _Nullable)stickerAnimationUrl __attribute__((swift_name("init(stickerNumber:packageId:stickerId:stickerType:stickerImageUrl:stickerAnimationUrl:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedStickerResultStickerStickerDataCompanion *companion __attribute__((swift_name("companion")));
- (SharedStickerResultStickerStickerData *)doCopyStickerNumber:(int32_t)stickerNumber packageId:(NSString * _Nullable)packageId stickerId:(int32_t)stickerId stickerType:(SharedStickerType *)stickerType stickerImageUrl:(NSString * _Nullable)stickerImageUrl stickerAnimationUrl:(NSString * _Nullable)stickerAnimationUrl __attribute__((swift_name("doCopy(stickerNumber:packageId:stickerId:stickerType:stickerImageUrl:stickerAnimationUrl:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable packageId __attribute__((swift_name("packageId")));
@property (readonly) NSString * _Nullable stickerAnimationUrl __attribute__((swift_name("stickerAnimationUrl")));
@property (readonly) int32_t stickerId __attribute__((swift_name("stickerId")));
@property (readonly) NSString * _Nullable stickerImageUrl __attribute__((swift_name("stickerImageUrl")));
@property (readonly) int32_t stickerNumber __attribute__((swift_name("stickerNumber")));
@property (readonly) SharedStickerType *stickerType __attribute__((swift_name("stickerType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StickerResult.StickerStickerDataCompanion")))
@interface SharedStickerResultStickerStickerDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedStickerResultStickerStickerDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwitchModeResult")))
@interface SharedSwitchModeResult : SharedBase
- (instancetype)initWithResponse:(SharedSwitchModeResultSwitchModeData *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSwitchModeResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedSwitchModeResult *)doCopyResponse:(SharedSwitchModeResultSwitchModeData *)response __attribute__((swift_name("doCopy(response:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedSwitchModeResultSwitchModeData *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwitchModeResult.Companion")))
@interface SharedSwitchModeResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSwitchModeResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwitchModeResult.SwitchModeData")))
@interface SharedSwitchModeResultSwitchModeData : SharedBase
- (instancetype)initWithSwitch_mode_at:(NSString * _Nullable)switch_mode_at count_down_second:(NSString * _Nullable)count_down_second __attribute__((swift_name("init(switch_mode_at:count_down_second:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSwitchModeResultSwitchModeDataCompanion *companion __attribute__((swift_name("companion")));
- (SharedSwitchModeResultSwitchModeData *)doCopySwitch_mode_at:(NSString * _Nullable)switch_mode_at count_down_second:(NSString * _Nullable)count_down_second __attribute__((swift_name("doCopy(switch_mode_at:count_down_second:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable count_down_second __attribute__((swift_name("count_down_second")));
@property (readonly) NSString * _Nullable switch_mode_at __attribute__((swift_name("switch_mode_at")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwitchModeResult.SwitchModeDataCompanion")))
@interface SharedSwitchModeResultSwitchModeDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSwitchModeResultSwitchModeDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TagListResult")))
@interface SharedTagListResult : SharedBase
- (instancetype)initWithTagList:(NSArray<SharedTagListResultTagInfo *> *)tagList __attribute__((swift_name("init(tagList:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedTagListResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedTagListResult *)doCopyTagList:(NSArray<SharedTagListResultTagInfo *> *)tagList __attribute__((swift_name("doCopy(tagList:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedTagListResultTagInfo *> *tagList __attribute__((swift_name("tagList")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TagListResult.Companion")))
@interface SharedTagListResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedTagListResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TagListResult.TagInfo")))
@interface SharedTagListResultTagInfo : SharedBase
- (instancetype)initWithTagType:(NSString *)tagType countTagInType:(int32_t)countTagInType listTag:(NSArray<SharedTagListResultTagInfoTags *> *)listTag __attribute__((swift_name("init(tagType:countTagInType:listTag:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedTagListResultTagInfoCompanion *companion __attribute__((swift_name("companion")));
- (SharedTagListResultTagInfo *)doCopyTagType:(NSString *)tagType countTagInType:(int32_t)countTagInType listTag:(NSArray<SharedTagListResultTagInfoTags *> *)listTag __attribute__((swift_name("doCopy(tagType:countTagInType:listTag:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t countTagInType __attribute__((swift_name("countTagInType")));
@property (readonly) NSArray<SharedTagListResultTagInfoTags *> *listTag __attribute__((swift_name("listTag")));
@property (readonly) NSString *tagType __attribute__((swift_name("tagType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TagListResult.TagInfoCompanion")))
@interface SharedTagListResultTagInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedTagListResultTagInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TagListResult.TagInfoTags")))
@interface SharedTagListResultTagInfoTags : SharedBase
- (instancetype)initWithTagId:(NSString *)tagId tagName:(NSString *)tagName countResult:(int32_t)countResult __attribute__((swift_name("init(tagId:tagName:countResult:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedTagListResultTagInfoTagsCompanion *companion __attribute__((swift_name("companion")));
- (SharedTagListResultTagInfoTags *)doCopyTagId:(NSString *)tagId tagName:(NSString *)tagName countResult:(int32_t)countResult __attribute__((swift_name("doCopy(tagId:tagName:countResult:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t countResult __attribute__((swift_name("countResult")));
@property (readonly) NSString *tagId __attribute__((swift_name("tagId")));
@property (readonly) NSString *tagName __attribute__((swift_name("tagName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TagListResult.TagInfoTagsCompanion")))
@interface SharedTagListResultTagInfoTagsCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedTagListResultTagInfoTagsCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult")))
@interface SharedDashboardResult : SharedBase
- (instancetype)initWithResult:(SharedDashboardResultResult * _Nullable)result __attribute__((swift_name("init(result:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedDashboardResult *)doCopyResult:(SharedDashboardResultResult * _Nullable)result __attribute__((swift_name("doCopy(result:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedDashboardResultResult * _Nullable result __attribute__((swift_name("result")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult.Companion")))
@interface SharedDashboardResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult.Result")))
@interface SharedDashboardResultResult : SharedBase
- (instancetype)initWithTotalData:(SharedDashboardResultResultPerformanceData * _Nullable)totalData incomingData:(SharedDashboardResultResultPerformanceData * _Nullable)incomingData outgoingData:(SharedDashboardResultResultPerformanceData * _Nullable)outgoingData botData:(SharedDashboardResultResultPerformanceData * _Nullable)botData missedData:(SharedDashboardResultResultPerformanceData * _Nullable)missedData expiredData:(SharedDashboardResultResultPerformanceData * _Nullable)expiredData avgResponse:(NSString * _Nullable)avgResponse avgDuration:(NSString * _Nullable)avgDuration avgChatAgent:(SharedDashboardResultResultChat * _Nullable)avgChatAgent chatVolumeData:(SharedDashboardResultResultChatVolumeData * _Nullable)chatVolumeData contactChat:(SharedDashboardResultResultContactChatData * _Nullable)contactChat contactGraph:(SharedDashboardResultResultContactGraphData * _Nullable)contactGraph __attribute__((swift_name("init(totalData:incomingData:outgoingData:botData:missedData:expiredData:avgResponse:avgDuration:avgChatAgent:chatVolumeData:contactChat:contactGraph:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardResultResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedDashboardResultResult *)doCopyTotalData:(SharedDashboardResultResultPerformanceData * _Nullable)totalData incomingData:(SharedDashboardResultResultPerformanceData * _Nullable)incomingData outgoingData:(SharedDashboardResultResultPerformanceData * _Nullable)outgoingData botData:(SharedDashboardResultResultPerformanceData * _Nullable)botData missedData:(SharedDashboardResultResultPerformanceData * _Nullable)missedData expiredData:(SharedDashboardResultResultPerformanceData * _Nullable)expiredData avgResponse:(NSString * _Nullable)avgResponse avgDuration:(NSString * _Nullable)avgDuration avgChatAgent:(SharedDashboardResultResultChat * _Nullable)avgChatAgent chatVolumeData:(SharedDashboardResultResultChatVolumeData * _Nullable)chatVolumeData contactChat:(SharedDashboardResultResultContactChatData * _Nullable)contactChat contactGraph:(SharedDashboardResultResultContactGraphData * _Nullable)contactGraph __attribute__((swift_name("doCopy(totalData:incomingData:outgoingData:botData:missedData:expiredData:avgResponse:avgDuration:avgChatAgent:chatVolumeData:contactChat:contactGraph:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedDashboardResultResultChat * _Nullable avgChatAgent __attribute__((swift_name("avgChatAgent")));
@property (readonly) NSString * _Nullable avgDuration __attribute__((swift_name("avgDuration")));
@property (readonly) NSString * _Nullable avgResponse __attribute__((swift_name("avgResponse")));
@property (readonly) SharedDashboardResultResultPerformanceData * _Nullable botData __attribute__((swift_name("botData")));
@property (readonly) SharedDashboardResultResultChatVolumeData * _Nullable chatVolumeData __attribute__((swift_name("chatVolumeData")));
@property (readonly) SharedDashboardResultResultContactChatData * _Nullable contactChat __attribute__((swift_name("contactChat")));
@property (readonly) SharedDashboardResultResultContactGraphData * _Nullable contactGraph __attribute__((swift_name("contactGraph")));
@property (readonly) SharedDashboardResultResultPerformanceData * _Nullable expiredData __attribute__((swift_name("expiredData")));
@property (readonly) SharedDashboardResultResultPerformanceData * _Nullable incomingData __attribute__((swift_name("incomingData")));
@property (readonly) SharedDashboardResultResultPerformanceData * _Nullable missedData __attribute__((swift_name("missedData")));
@property (readonly) SharedDashboardResultResultPerformanceData * _Nullable outgoingData __attribute__((swift_name("outgoingData")));
@property (readonly) SharedDashboardResultResultPerformanceData * _Nullable totalData __attribute__((swift_name("totalData")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult.ResultChat")))
@interface SharedDashboardResultResultChat : SharedBase
- (instancetype)initWithAgent:(SharedInt * _Nullable)agent chat:(SharedInt * _Nullable)chat __attribute__((swift_name("init(agent:chat:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardResultResultChatCompanion *companion __attribute__((swift_name("companion")));
- (SharedDashboardResultResultChat *)doCopyAgent:(SharedInt * _Nullable)agent chat:(SharedInt * _Nullable)chat __attribute__((swift_name("doCopy(agent:chat:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedInt * _Nullable agent __attribute__((swift_name("agent")));
@property (readonly) SharedInt * _Nullable chat __attribute__((swift_name("chat")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult.ResultChatCompanion")))
@interface SharedDashboardResultResultChatCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardResultResultChatCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult.ResultChatVolumeData")))
@interface SharedDashboardResultResultChatVolumeData : SharedBase
- (instancetype)initWithIncomingLabel:(SharedDashboardResultResultChatVolumeDataLabelData * _Nullable)incomingLabel incoming:(NSArray<SharedDashboardResultResultChatVolumeDataDayValue *> * _Nullable)incoming outgoingLabel:(SharedDashboardResultResultChatVolumeDataLabelData * _Nullable)outgoingLabel outgoing:(NSArray<SharedDashboardResultResultChatVolumeDataDayValue *> * _Nullable)outgoing botReplyLabel:(SharedDashboardResultResultChatVolumeDataLabelData * _Nullable)botReplyLabel botReply:(NSArray<SharedDashboardResultResultChatVolumeDataDayValue *> * _Nullable)botReply __attribute__((swift_name("init(incomingLabel:incoming:outgoingLabel:outgoing:botReplyLabel:botReply:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardResultResultChatVolumeDataCompanion *companion __attribute__((swift_name("companion")));
- (SharedDashboardResultResultChatVolumeData *)doCopyIncomingLabel:(SharedDashboardResultResultChatVolumeDataLabelData * _Nullable)incomingLabel incoming:(NSArray<SharedDashboardResultResultChatVolumeDataDayValue *> * _Nullable)incoming outgoingLabel:(SharedDashboardResultResultChatVolumeDataLabelData * _Nullable)outgoingLabel outgoing:(NSArray<SharedDashboardResultResultChatVolumeDataDayValue *> * _Nullable)outgoing botReplyLabel:(SharedDashboardResultResultChatVolumeDataLabelData * _Nullable)botReplyLabel botReply:(NSArray<SharedDashboardResultResultChatVolumeDataDayValue *> * _Nullable)botReply __attribute__((swift_name("doCopy(incomingLabel:incoming:outgoingLabel:outgoing:botReplyLabel:botReply:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedDashboardResultResultChatVolumeDataDayValue *> * _Nullable botReply __attribute__((swift_name("botReply")));
@property (readonly) SharedDashboardResultResultChatVolumeDataLabelData * _Nullable botReplyLabel __attribute__((swift_name("botReplyLabel")));
@property (readonly) NSArray<SharedDashboardResultResultChatVolumeDataDayValue *> * _Nullable incoming __attribute__((swift_name("incoming")));
@property (readonly) SharedDashboardResultResultChatVolumeDataLabelData * _Nullable incomingLabel __attribute__((swift_name("incomingLabel")));
@property (readonly) NSArray<SharedDashboardResultResultChatVolumeDataDayValue *> * _Nullable outgoing __attribute__((swift_name("outgoing")));
@property (readonly) SharedDashboardResultResultChatVolumeDataLabelData * _Nullable outgoingLabel __attribute__((swift_name("outgoingLabel")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult.ResultChatVolumeDataCompanion")))
@interface SharedDashboardResultResultChatVolumeDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardResultResultChatVolumeDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult.ResultChatVolumeDataDayValue")))
@interface SharedDashboardResultResultChatVolumeDataDayValue : SharedBase
- (instancetype)initWithDayNameTH:(NSString * _Nullable)dayNameTH dayNameEN:(NSString * _Nullable)dayNameEN listValue:(NSArray<SharedDashboardResultResultChatVolumeDataDayValueVolume *> * _Nullable)listValue __attribute__((swift_name("init(dayNameTH:dayNameEN:listValue:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardResultResultChatVolumeDataDayValueCompanion *companion __attribute__((swift_name("companion")));
- (SharedDashboardResultResultChatVolumeDataDayValue *)doCopyDayNameTH:(NSString * _Nullable)dayNameTH dayNameEN:(NSString * _Nullable)dayNameEN listValue:(NSArray<SharedDashboardResultResultChatVolumeDataDayValueVolume *> * _Nullable)listValue __attribute__((swift_name("doCopy(dayNameTH:dayNameEN:listValue:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable dayNameEN __attribute__((swift_name("dayNameEN")));
@property (readonly) NSString * _Nullable dayNameTH __attribute__((swift_name("dayNameTH")));
@property (readonly) NSArray<SharedDashboardResultResultChatVolumeDataDayValueVolume *> * _Nullable listValue __attribute__((swift_name("listValue")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult.ResultChatVolumeDataDayValueCompanion")))
@interface SharedDashboardResultResultChatVolumeDataDayValueCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardResultResultChatVolumeDataDayValueCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult.ResultChatVolumeDataDayValueVolume")))
@interface SharedDashboardResultResultChatVolumeDataDayValueVolume : SharedBase
- (instancetype)initWithHour:(NSString * _Nullable)hour count:(SharedInt * _Nullable)count color:(NSString * _Nullable)color __attribute__((swift_name("init(hour:count:color:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardResultResultChatVolumeDataDayValueVolumeCompanion *companion __attribute__((swift_name("companion")));
- (SharedDashboardResultResultChatVolumeDataDayValueVolume *)doCopyHour:(NSString * _Nullable)hour count:(SharedInt * _Nullable)count color:(NSString * _Nullable)color __attribute__((swift_name("doCopy(hour:count:color:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable color __attribute__((swift_name("color")));
@property (readonly) SharedInt * _Nullable count __attribute__((swift_name("count")));
@property (readonly) NSString * _Nullable hour __attribute__((swift_name("hour")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult.ResultChatVolumeDataDayValueVolumeCompanion")))
@interface SharedDashboardResultResultChatVolumeDataDayValueVolumeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardResultResultChatVolumeDataDayValueVolumeCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult.ResultChatVolumeDataLabelData")))
@interface SharedDashboardResultResultChatVolumeDataLabelData : SharedBase
- (instancetype)initWithListLabel:(NSArray<SharedInt *> * _Nullable)listLabel startColor:(NSString * _Nullable)startColor endColor:(NSString * _Nullable)endColor __attribute__((swift_name("init(listLabel:startColor:endColor:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardResultResultChatVolumeDataLabelDataCompanion *companion __attribute__((swift_name("companion")));
- (SharedDashboardResultResultChatVolumeDataLabelData *)doCopyListLabel:(NSArray<SharedInt *> * _Nullable)listLabel startColor:(NSString * _Nullable)startColor endColor:(NSString * _Nullable)endColor __attribute__((swift_name("doCopy(listLabel:startColor:endColor:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable endColor __attribute__((swift_name("endColor")));
@property (readonly) NSArray<SharedInt *> * _Nullable listLabel __attribute__((swift_name("listLabel")));
@property (readonly) NSString * _Nullable startColor __attribute__((swift_name("startColor")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult.ResultChatVolumeDataLabelDataCompanion")))
@interface SharedDashboardResultResultChatVolumeDataLabelDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardResultResultChatVolumeDataLabelDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult.ResultCompanion")))
@interface SharedDashboardResultResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardResultResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult.ResultContactChatData")))
@interface SharedDashboardResultResultContactChatData : SharedBase
- (instancetype)initWithNewChatColor:(NSString * _Nullable)newChatColor oldChatColor:(NSString * _Nullable)oldChatColor agentNewChat:(SharedInt * _Nullable)agentNewChat agentOldChat:(SharedInt * _Nullable)agentOldChat botNewChat:(SharedInt * _Nullable)botNewChat botOldChat:(SharedInt * _Nullable)botOldChat __attribute__((swift_name("init(newChatColor:oldChatColor:agentNewChat:agentOldChat:botNewChat:botOldChat:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardResultResultContactChatDataCompanion *companion __attribute__((swift_name("companion")));
- (SharedDashboardResultResultContactChatData *)doCopyNewChatColor:(NSString * _Nullable)newChatColor oldChatColor:(NSString * _Nullable)oldChatColor agentNewChat:(SharedInt * _Nullable)agentNewChat agentOldChat:(SharedInt * _Nullable)agentOldChat botNewChat:(SharedInt * _Nullable)botNewChat botOldChat:(SharedInt * _Nullable)botOldChat __attribute__((swift_name("doCopy(newChatColor:oldChatColor:agentNewChat:agentOldChat:botNewChat:botOldChat:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedInt * _Nullable agentNewChat __attribute__((swift_name("agentNewChat")));
@property (readonly) SharedInt * _Nullable agentOldChat __attribute__((swift_name("agentOldChat")));
@property (readonly) SharedInt * _Nullable botNewChat __attribute__((swift_name("botNewChat")));
@property (readonly) SharedInt * _Nullable botOldChat __attribute__((swift_name("botOldChat")));
@property (readonly, getter=doNewChatColor) NSString * _Nullable newChatColor __attribute__((swift_name("newChatColor")));
@property (readonly) NSString * _Nullable oldChatColor __attribute__((swift_name("oldChatColor")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult.ResultContactChatDataCompanion")))
@interface SharedDashboardResultResultContactChatDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardResultResultContactChatDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult.ResultContactGraphData")))
@interface SharedDashboardResultResultContactGraphData : SharedBase
- (instancetype)initWithContactList:(NSMutableArray<SharedDashboardResultResultGraphData *> *)contactList totalContactSummary:(SharedDashboardResultResultContactSummary *)totalContactSummary newContactSummary:(SharedDashboardResultResultContactSummary *)newContactSummary blockedExpiredSummary:(SharedDashboardResultResultContactSummary *)blockedExpiredSummary __attribute__((swift_name("init(contactList:totalContactSummary:newContactSummary:blockedExpiredSummary:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardResultResultContactGraphDataCompanion *companion __attribute__((swift_name("companion")));
- (SharedDashboardResultResultContactGraphData *)doCopyContactList:(NSMutableArray<SharedDashboardResultResultGraphData *> *)contactList totalContactSummary:(SharedDashboardResultResultContactSummary *)totalContactSummary newContactSummary:(SharedDashboardResultResultContactSummary *)newContactSummary blockedExpiredSummary:(SharedDashboardResultResultContactSummary *)blockedExpiredSummary __attribute__((swift_name("doCopy(contactList:totalContactSummary:newContactSummary:blockedExpiredSummary:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedDashboardResultResultContactSummary *blockedExpiredSummary __attribute__((swift_name("blockedExpiredSummary")));
@property (readonly) NSMutableArray<SharedDashboardResultResultGraphData *> *contactList __attribute__((swift_name("contactList")));
@property (readonly, getter=doNewContactSummary) SharedDashboardResultResultContactSummary *newContactSummary __attribute__((swift_name("newContactSummary")));
@property (readonly) SharedDashboardResultResultContactSummary *totalContactSummary __attribute__((swift_name("totalContactSummary")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult.ResultContactGraphDataCompanion")))
@interface SharedDashboardResultResultContactGraphDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardResultResultContactGraphDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult.ResultContactSummary")))
@interface SharedDashboardResultResultContactSummary : SharedBase
- (instancetype)initWithValue:(SharedInt * _Nullable)value type:(NSString * _Nullable)type percent:(SharedDouble * _Nullable)percent percentIcon:(NSString * _Nullable)percentIcon color:(NSString * _Nullable)color __attribute__((swift_name("init(value:type:percent:percentIcon:color:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardResultResultContactSummaryCompanion *companion __attribute__((swift_name("companion")));
- (SharedDashboardResultResultContactSummary *)doCopyValue:(SharedInt * _Nullable)value type:(NSString * _Nullable)type percent:(SharedDouble * _Nullable)percent percentIcon:(NSString * _Nullable)percentIcon color:(NSString * _Nullable)color __attribute__((swift_name("doCopy(value:type:percent:percentIcon:color:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable color __attribute__((swift_name("color")));
@property (readonly) SharedDouble * _Nullable percent __attribute__((swift_name("percent")));
@property (readonly) NSString * _Nullable percentIcon __attribute__((swift_name("percentIcon")));
@property (readonly) NSString * _Nullable type __attribute__((swift_name("type")));
@property (readonly) SharedInt * _Nullable value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult.ResultContactSummaryCompanion")))
@interface SharedDashboardResultResultContactSummaryCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardResultResultContactSummaryCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult.ResultGraphData")))
@interface SharedDashboardResultResultGraphData : SharedBase
- (instancetype)initWithDate:(NSString * _Nullable)date totalContact:(SharedInt * _Nullable)totalContact newContact:(SharedInt * _Nullable)newContact blockedExpired:(SharedInt * _Nullable)blockedExpired __attribute__((swift_name("init(date:totalContact:newContact:blockedExpired:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardResultResultGraphDataCompanion *companion __attribute__((swift_name("companion")));
- (SharedDashboardResultResultGraphData *)doCopyDate:(NSString * _Nullable)date totalContact:(SharedInt * _Nullable)totalContact newContact:(SharedInt * _Nullable)newContact blockedExpired:(SharedInt * _Nullable)blockedExpired __attribute__((swift_name("doCopy(date:totalContact:newContact:blockedExpired:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedInt * _Nullable blockedExpired __attribute__((swift_name("blockedExpired")));
@property (readonly) NSString * _Nullable date __attribute__((swift_name("date")));
@property (readonly, getter=doNewContact) SharedInt * _Nullable newContact __attribute__((swift_name("newContact")));
@property (readonly) SharedInt * _Nullable totalContact __attribute__((swift_name("totalContact")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult.ResultGraphDataCompanion")))
@interface SharedDashboardResultResultGraphDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardResultResultGraphDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult.ResultPerformanceData")))
@interface SharedDashboardResultResultPerformanceData : SharedBase
- (instancetype)initWithValue:(SharedInt * _Nullable)value type:(SharedPercentType * _Nullable)type typeColor:(NSString * _Nullable)typeColor percent:(SharedDouble * _Nullable)percent percentIcon:(NSString * _Nullable)percentIcon __attribute__((swift_name("init(value:type:typeColor:percent:percentIcon:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardResultResultPerformanceDataCompanion *companion __attribute__((swift_name("companion")));
- (SharedDashboardResultResultPerformanceData *)doCopyValue:(SharedInt * _Nullable)value type:(SharedPercentType * _Nullable)type typeColor:(NSString * _Nullable)typeColor percent:(SharedDouble * _Nullable)percent percentIcon:(NSString * _Nullable)percentIcon __attribute__((swift_name("doCopy(value:type:typeColor:percent:percentIcon:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedDouble * _Nullable percent __attribute__((swift_name("percent")));
@property (readonly) NSString * _Nullable percentIcon __attribute__((swift_name("percentIcon")));
@property (readonly) SharedPercentType * _Nullable type __attribute__((swift_name("type")));
@property (readonly) NSString * _Nullable typeColor __attribute__((swift_name("typeColor")));
@property (readonly) SharedInt * _Nullable value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResult.ResultPerformanceDataCompanion")))
@interface SharedDashboardResultResultPerformanceDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardResultResultPerformanceDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckAppStatus")))
@interface SharedCheckAppStatus : SharedBase
- (instancetype)initWithResult:(id _Nullable)result __attribute__((swift_name("init(result:)"))) __attribute__((objc_designated_initializer));
- (SharedCheckAppStatus *)doCopyResult:(id _Nullable)result __attribute__((swift_name("doCopy(result:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id _Nullable result __attribute__((swift_name("result")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetOfficialAccountResult")))
@interface SharedGetOfficialAccountResult : SharedBase
- (instancetype)initWithCompany:(NSArray<SharedGetOfficialAccountResultCompanyList *> * _Nullable)company __attribute__((swift_name("init(company:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetOfficialAccountResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetOfficialAccountResult *)doCopyCompany:(NSArray<SharedGetOfficialAccountResultCompanyList *> * _Nullable)company __attribute__((swift_name("doCopy(company:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedGetOfficialAccountResultCompanyList *> * _Nullable company __attribute__((swift_name("company")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetOfficialAccountResult.BotInfo")))
@interface SharedGetOfficialAccountResultBotInfo : SharedBase
- (instancetype)initWithImage:(NSString * _Nullable)image name:(NSString * _Nullable)name __attribute__((swift_name("init(image:name:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetOfficialAccountResultBotInfoCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetOfficialAccountResultBotInfo *)doCopyImage:(NSString * _Nullable)image name:(NSString * _Nullable)name __attribute__((swift_name("doCopy(image:name:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable image __attribute__((swift_name("image")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetOfficialAccountResult.BotInfoCompanion")))
@interface SharedGetOfficialAccountResultBotInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetOfficialAccountResultBotInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetOfficialAccountResult.ChannelList")))
@interface SharedGetOfficialAccountResultChannelList : SharedBase
- (instancetype)initWithChannelId:(NSString * _Nullable)channelId channelType:(SharedChannelType *)channelType channelTypeID:(NSString * _Nullable)channelTypeID channelIcon:(NSString * _Nullable)channelIcon __attribute__((swift_name("init(channelId:channelType:channelTypeID:channelIcon:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetOfficialAccountResultChannelListCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetOfficialAccountResultChannelList *)doCopyChannelId:(NSString * _Nullable)channelId channelType:(SharedChannelType *)channelType channelTypeID:(NSString * _Nullable)channelTypeID channelIcon:(NSString * _Nullable)channelIcon __attribute__((swift_name("doCopy(channelId:channelType:channelTypeID:channelIcon:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable channelIcon __attribute__((swift_name("channelIcon")));
@property (readonly) NSString * _Nullable channelId __attribute__((swift_name("channelId")));
@property (readonly) SharedChannelType *channelType __attribute__((swift_name("channelType")));
@property (readonly) NSString * _Nullable channelTypeID __attribute__((swift_name("channelTypeID")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetOfficialAccountResult.ChannelListCompanion")))
@interface SharedGetOfficialAccountResultChannelListCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetOfficialAccountResultChannelListCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetOfficialAccountResult.Companion")))
@interface SharedGetOfficialAccountResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetOfficialAccountResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetOfficialAccountResult.CompanyList")))
@interface SharedGetOfficialAccountResultCompanyList : SharedBase
- (instancetype)initWithCompanyName:(NSString * _Nullable)companyName companyID:(NSString * _Nullable)companyID roleID:(NSString * _Nullable)roleID roleName:(NSString * _Nullable)roleName roleLevel:(SharedInt * _Nullable)roleLevel userCount:(SharedInt * _Nullable)userCount packageLimitUser:(SharedInt * _Nullable)packageLimitUser chatStatus:(SharedChatStatus * _Nullable)chatStatus channelList:(NSArray<SharedGetOfficialAccountResultChannelList *> * _Nullable)channelList botInfo:(SharedGetOfficialAccountResultBotInfo * _Nullable)botInfo __attribute__((swift_name("init(companyName:companyID:roleID:roleName:roleLevel:userCount:packageLimitUser:chatStatus:channelList:botInfo:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetOfficialAccountResultCompanyListCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetOfficialAccountResultCompanyList *)doCopyCompanyName:(NSString * _Nullable)companyName companyID:(NSString * _Nullable)companyID roleID:(NSString * _Nullable)roleID roleName:(NSString * _Nullable)roleName roleLevel:(SharedInt * _Nullable)roleLevel userCount:(SharedInt * _Nullable)userCount packageLimitUser:(SharedInt * _Nullable)packageLimitUser chatStatus:(SharedChatStatus * _Nullable)chatStatus channelList:(NSArray<SharedGetOfficialAccountResultChannelList *> * _Nullable)channelList botInfo:(SharedGetOfficialAccountResultBotInfo * _Nullable)botInfo __attribute__((swift_name("doCopy(companyName:companyID:roleID:roleName:roleLevel:userCount:packageLimitUser:chatStatus:channelList:botInfo:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedGetOfficialAccountResultBotInfo * _Nullable botInfo __attribute__((swift_name("botInfo")));
@property (readonly) NSArray<SharedGetOfficialAccountResultChannelList *> * _Nullable channelList __attribute__((swift_name("channelList")));
@property (readonly) SharedChatStatus * _Nullable chatStatus __attribute__((swift_name("chatStatus")));
@property (readonly) NSString * _Nullable companyID __attribute__((swift_name("companyID")));
@property (readonly) NSString * _Nullable companyName __attribute__((swift_name("companyName")));
@property (readonly) SharedInt * _Nullable packageLimitUser __attribute__((swift_name("packageLimitUser")));
@property (readonly) NSString * _Nullable roleID __attribute__((swift_name("roleID")));
@property (readonly) SharedInt * _Nullable roleLevel __attribute__((swift_name("roleLevel")));
@property (readonly) NSString * _Nullable roleName __attribute__((swift_name("roleName")));
@property (readonly) SharedInt * _Nullable userCount __attribute__((swift_name("userCount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetOfficialAccountResult.CompanyListCompanion")))
@interface SharedGetOfficialAccountResultCompanyListCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetOfficialAccountResultCompanyListCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoginResult")))
@interface SharedLoginResult : SharedBase
- (instancetype)initWithToken:(NSString * _Nullable)token company:(NSMutableArray<SharedGetOfficialAccountResultCompanyList *> * _Nullable)company __attribute__((swift_name("init(token:company:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedLoginResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedLoginResult *)doCopyToken:(NSString * _Nullable)token company:(NSMutableArray<SharedGetOfficialAccountResultCompanyList *> * _Nullable)company __attribute__((swift_name("doCopy(token:company:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSMutableArray<SharedGetOfficialAccountResultCompanyList *> * _Nullable company __attribute__((swift_name("company")));
@property (readonly) NSString * _Nullable token __attribute__((swift_name("token")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoginResult.Companion")))
@interface SharedLoginResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedLoginResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ResetPasswordResult")))
@interface SharedResetPasswordResult : SharedBase
- (instancetype)initWithLink:(NSString * _Nullable)link __attribute__((swift_name("init(link:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedResetPasswordResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedResetPasswordResult *)doCopyLink:(NSString * _Nullable)link __attribute__((swift_name("doCopy(link:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable link __attribute__((swift_name("link")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ResetPasswordResult.Companion")))
@interface SharedResetPasswordResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedResetPasswordResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SetNewPasswordResult")))
@interface SharedSetNewPasswordResult : SharedBase
- (instancetype)initWithEmail:(NSString * _Nullable)email expired:(NSString * _Nullable)expired ref:(NSString * _Nullable)ref uuid:(NSString * _Nullable)uuid __attribute__((swift_name("init(email:expired:ref:uuid:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSetNewPasswordResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedSetNewPasswordResult *)doCopyEmail:(NSString * _Nullable)email expired:(NSString * _Nullable)expired ref:(NSString * _Nullable)ref uuid:(NSString * _Nullable)uuid __attribute__((swift_name("doCopy(email:expired:ref:uuid:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable email __attribute__((swift_name("email")));
@property (readonly) NSString * _Nullable expired __attribute__((swift_name("expired")));
@property (readonly) NSString * _Nullable ref __attribute__((swift_name("ref")));
@property (readonly) NSString * _Nullable uuid __attribute__((swift_name("uuid")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SetNewPasswordResult.Companion")))
@interface SharedSetNewPasswordResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSetNewPasswordResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserRoleMenuResult")))
@interface SharedUserRoleMenuResult : SharedBase
- (instancetype)initWithIsDashboardMenuEnable:(SharedBoolean * _Nullable)isDashboardMenuEnable isLiveChatMenuEnable:(SharedBoolean * _Nullable)isLiveChatMenuEnable isContactMenuEnable:(SharedBoolean * _Nullable)isContactMenuEnable isSettingMenuEnable:(SharedBoolean * _Nullable)isSettingMenuEnable isGroupFilterEnable:(SharedBoolean * _Nullable)isGroupFilterEnable __attribute__((swift_name("init(isDashboardMenuEnable:isLiveChatMenuEnable:isContactMenuEnable:isSettingMenuEnable:isGroupFilterEnable:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedUserRoleMenuResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedUserRoleMenuResult *)doCopyIsDashboardMenuEnable:(SharedBoolean * _Nullable)isDashboardMenuEnable isLiveChatMenuEnable:(SharedBoolean * _Nullable)isLiveChatMenuEnable isContactMenuEnable:(SharedBoolean * _Nullable)isContactMenuEnable isSettingMenuEnable:(SharedBoolean * _Nullable)isSettingMenuEnable isGroupFilterEnable:(SharedBoolean * _Nullable)isGroupFilterEnable __attribute__((swift_name("doCopy(isDashboardMenuEnable:isLiveChatMenuEnable:isContactMenuEnable:isSettingMenuEnable:isGroupFilterEnable:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedBoolean * _Nullable isContactMenuEnable __attribute__((swift_name("isContactMenuEnable")));
@property (readonly) SharedBoolean * _Nullable isDashboardMenuEnable __attribute__((swift_name("isDashboardMenuEnable")));
@property (readonly) SharedBoolean * _Nullable isGroupFilterEnable __attribute__((swift_name("isGroupFilterEnable")));
@property (readonly) SharedBoolean * _Nullable isLiveChatMenuEnable __attribute__((swift_name("isLiveChatMenuEnable")));
@property (readonly) SharedBoolean * _Nullable isSettingMenuEnable __attribute__((swift_name("isSettingMenuEnable")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserRoleMenuResult.Companion")))
@interface SharedUserRoleMenuResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedUserRoleMenuResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChangePasswordResult")))
@interface SharedChangePasswordResult : SharedBase
- (instancetype)initWithResponse:(NSString *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedChangePasswordResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedChangePasswordResult *)doCopyResponse:(NSString *)response __attribute__((swift_name("doCopy(response:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChangePasswordResult.Companion")))
@interface SharedChangePasswordResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChangePasswordResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckAppVersionUpdateResult")))
@interface SharedCheckAppVersionUpdateResult : SharedBase
- (instancetype)initWithResponse:(SharedCheckAppVersionUpdateResultAppVersionData * _Nullable)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedCheckAppVersionUpdateResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedCheckAppVersionUpdateResult *)doCopyResponse:(SharedCheckAppVersionUpdateResultAppVersionData * _Nullable)response __attribute__((swift_name("doCopy(response:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedCheckAppVersionUpdateResultAppVersionData * _Nullable response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckAppVersionUpdateResult.AppVersionData")))
@interface SharedCheckAppVersionUpdateResultAppVersionData : SharedBase
- (instancetype)initWithIsUpdate:(BOOL)isUpdate isForce:(BOOL)isForce url:(NSString *)url currentVersion:(NSString *)currentVersion minVersion:(NSString *)minVersion __attribute__((swift_name("init(isUpdate:isForce:url:currentVersion:minVersion:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedCheckAppVersionUpdateResultAppVersionDataCompanion *companion __attribute__((swift_name("companion")));
- (SharedCheckAppVersionUpdateResultAppVersionData *)doCopyIsUpdate:(BOOL)isUpdate isForce:(BOOL)isForce url:(NSString *)url currentVersion:(NSString *)currentVersion minVersion:(NSString *)minVersion __attribute__((swift_name("doCopy(isUpdate:isForce:url:currentVersion:minVersion:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *currentVersion __attribute__((swift_name("currentVersion")));
@property (readonly) BOOL isForce __attribute__((swift_name("isForce")));
@property (readonly) BOOL isUpdate __attribute__((swift_name("isUpdate")));
@property (readonly) NSString *minVersion __attribute__((swift_name("minVersion")));
@property (readonly) NSString *url __attribute__((swift_name("url")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckAppVersionUpdateResult.AppVersionDataCompanion")))
@interface SharedCheckAppVersionUpdateResultAppVersionDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCheckAppVersionUpdateResultAppVersionDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckAppVersionUpdateResult.Companion")))
@interface SharedCheckAppVersionUpdateResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCheckAppVersionUpdateResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckUserTokenResult")))
@interface SharedCheckUserTokenResult : SharedBase
- (instancetype)initWithResponse:(SharedCheckUserTokenResultUserTokenData * _Nullable)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedCheckUserTokenResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedCheckUserTokenResult *)doCopyResponse:(SharedCheckUserTokenResultUserTokenData * _Nullable)response __attribute__((swift_name("doCopy(response:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedCheckUserTokenResultUserTokenData * _Nullable response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckUserTokenResult.Companion")))
@interface SharedCheckUserTokenResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCheckUserTokenResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckUserTokenResult.UserTokenData")))
@interface SharedCheckUserTokenResultUserTokenData : SharedBase
- (instancetype)initWithFirstname:(NSString *)firstname lastname:(NSString *)lastname phone:(NSString *)phone image:(NSString *)image __attribute__((swift_name("init(firstname:lastname:phone:image:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedCheckUserTokenResultUserTokenDataCompanion *companion __attribute__((swift_name("companion")));
- (SharedCheckUserTokenResultUserTokenData *)doCopyFirstname:(NSString *)firstname lastname:(NSString *)lastname phone:(NSString *)phone image:(NSString *)image __attribute__((swift_name("doCopy(firstname:lastname:phone:image:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *firstname __attribute__((swift_name("firstname")));
@property (readonly) NSString *image __attribute__((swift_name("image")));
@property (readonly) NSString *lastname __attribute__((swift_name("lastname")));
@property (readonly) NSString *phone __attribute__((swift_name("phone")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckUserTokenResult.UserTokenDataCompanion")))
@interface SharedCheckUserTokenResultUserTokenDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCheckUserTokenResultUserTokenDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LiveChatSettingResult")))
@interface SharedLiveChatSettingResult : SharedBase
- (instancetype)initWithResponse:(SharedLiveChatSettingResultLiveChatSettingResponse *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedLiveChatSettingResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedLiveChatSettingResult *)doCopyResponse:(SharedLiveChatSettingResultLiveChatSettingResponse *)response __attribute__((swift_name("doCopy(response:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedLiveChatSettingResultLiveChatSettingResponse *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LiveChatSettingResult.Companion")))
@interface SharedLiveChatSettingResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedLiveChatSettingResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LiveChatSettingResult.LiveChatSettingResponse")))
@interface SharedLiveChatSettingResultLiveChatSettingResponse : SharedBase
- (instancetype)initWithAddingTimeValue:(NSString * _Nullable)addingTimeValue __attribute__((swift_name("init(addingTimeValue:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedLiveChatSettingResultLiveChatSettingResponseCompanion *companion __attribute__((swift_name("companion")));
- (SharedLiveChatSettingResultLiveChatSettingResponse *)doCopyAddingTimeValue:(NSString * _Nullable)addingTimeValue __attribute__((swift_name("doCopy(addingTimeValue:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable addingTimeValue __attribute__((swift_name("addingTimeValue")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LiveChatSettingResult.LiveChatSettingResponseCompanion")))
@interface SharedLiveChatSettingResultLiveChatSettingResponseCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedLiveChatSettingResultLiveChatSettingResponseCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileResult")))
@interface SharedProfileResult : SharedBase
- (instancetype)initWithResponse:(SharedProfileResultProfileData *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedProfileResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedProfileResult *)doCopyResponse:(SharedProfileResultProfileData *)response __attribute__((swift_name("doCopy(response:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedProfileResultProfileData *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileResult.Companion")))
@interface SharedProfileResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedProfileResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileResult.ProfileData")))
@interface SharedProfileResultProfileData : SharedBase
- (instancetype)initWithFirstname:(NSString * _Nullable)firstname lastname:(NSString * _Nullable)lastname __attribute__((swift_name("init(firstname:lastname:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedProfileResultProfileDataCompanion *companion __attribute__((swift_name("companion")));
- (SharedProfileResultProfileData *)doCopyFirstname:(NSString * _Nullable)firstname lastname:(NSString * _Nullable)lastname __attribute__((swift_name("doCopy(firstname:lastname:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable firstname __attribute__((swift_name("firstname")));
@property (readonly) NSString * _Nullable lastname __attribute__((swift_name("lastname")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileResult.ProfileDataCompanion")))
@interface SharedProfileResultProfileDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedProfileResultProfileDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationAccountResult")))
@interface SharedSettingNotificationAccountResult : SharedBase
- (instancetype)initWithAccountList:(NSArray<SharedSettingNotificationAccountResultNotificationAccount *> *)accountList __attribute__((swift_name("init(accountList:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSettingNotificationAccountResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedSettingNotificationAccountResult *)doCopyAccountList:(NSArray<SharedSettingNotificationAccountResultNotificationAccount *> *)accountList __attribute__((swift_name("doCopy(accountList:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedSettingNotificationAccountResultNotificationAccount *> *accountList __attribute__((swift_name("accountList")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationAccountResult.Companion")))
@interface SharedSettingNotificationAccountResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSettingNotificationAccountResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationAccountResult.NotificationAccount")))
@interface SharedSettingNotificationAccountResultNotificationAccount : SharedBase
- (instancetype)initWithCompanyId:(NSString *)companyId companyName:(NSString *)companyName isEnable:(BOOL)isEnable __attribute__((swift_name("init(companyId:companyName:isEnable:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSettingNotificationAccountResultNotificationAccountCompanion *companion __attribute__((swift_name("companion")));
- (SharedSettingNotificationAccountResultNotificationAccount *)doCopyCompanyId:(NSString *)companyId companyName:(NSString *)companyName isEnable:(BOOL)isEnable __attribute__((swift_name("doCopy(companyId:companyName:isEnable:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *companyId __attribute__((swift_name("companyId")));
@property (readonly) NSString *companyName __attribute__((swift_name("companyName")));
@property (readonly) BOOL isEnable __attribute__((swift_name("isEnable")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationAccountResult.NotificationAccountCompanion")))
@interface SharedSettingNotificationAccountResultNotificationAccountCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSettingNotificationAccountResultNotificationAccountCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationResult")))
@interface SharedSettingNotificationResult : SharedBase
- (instancetype)initWithAllowNotification:(BOOL)allowNotification settingList:(NSArray<SharedSettingNotificationResultSetting *> *)settingList __attribute__((swift_name("init(allowNotification:settingList:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSettingNotificationResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedSettingNotificationResult *)doCopyAllowNotification:(BOOL)allowNotification settingList:(NSArray<SharedSettingNotificationResultSetting *> *)settingList __attribute__((swift_name("doCopy(allowNotification:settingList:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL allowNotification __attribute__((swift_name("allowNotification")));
@property (readonly) NSArray<SharedSettingNotificationResultSetting *> *settingList __attribute__((swift_name("settingList")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationResult.Companion")))
@interface SharedSettingNotificationResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSettingNotificationResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationResult.Setting")))
@interface SharedSettingNotificationResultSetting : SharedBase
- (instancetype)initWithSettingTopic:(NSString * _Nullable)settingTopic settingTopicKey:(NSString * _Nullable)settingTopicKey settingDesc:(NSString * _Nullable)settingDesc settingList:(NSArray<SharedSettingNotificationResultSettingSettingInfo *> * _Nullable)settingList __attribute__((swift_name("init(settingTopic:settingTopicKey:settingDesc:settingList:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSettingNotificationResultSettingCompanion *companion __attribute__((swift_name("companion")));
- (SharedSettingNotificationResultSetting *)doCopySettingTopic:(NSString * _Nullable)settingTopic settingTopicKey:(NSString * _Nullable)settingTopicKey settingDesc:(NSString * _Nullable)settingDesc settingList:(NSArray<SharedSettingNotificationResultSettingSettingInfo *> * _Nullable)settingList __attribute__((swift_name("doCopy(settingTopic:settingTopicKey:settingDesc:settingList:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable settingDesc __attribute__((swift_name("settingDesc")));
@property (readonly) NSArray<SharedSettingNotificationResultSettingSettingInfo *> * _Nullable settingList __attribute__((swift_name("settingList")));
@property (readonly) NSString * _Nullable settingTopic __attribute__((swift_name("settingTopic")));
@property (readonly) NSString * _Nullable settingTopicKey __attribute__((swift_name("settingTopicKey")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationResult.SettingCompanion")))
@interface SharedSettingNotificationResultSettingCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSettingNotificationResultSettingCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationResult.SettingSettingInfo")))
@interface SharedSettingNotificationResultSettingSettingInfo : SharedBase
- (instancetype)initWithSettingName:(NSString * _Nullable)settingName settingKey:(NSString * _Nullable)settingKey isEnable:(SharedBoolean * _Nullable)isEnable __attribute__((swift_name("init(settingName:settingKey:isEnable:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSettingNotificationResultSettingSettingInfoCompanion *companion __attribute__((swift_name("companion")));
- (SharedSettingNotificationResultSettingSettingInfo *)doCopySettingName:(NSString * _Nullable)settingName settingKey:(NSString * _Nullable)settingKey isEnable:(SharedBoolean * _Nullable)isEnable __attribute__((swift_name("doCopy(settingName:settingKey:isEnable:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedBoolean * _Nullable isEnable __attribute__((swift_name("isEnable")));
@property (readonly) NSString * _Nullable settingKey __attribute__((swift_name("settingKey")));
@property (readonly) NSString * _Nullable settingName __attribute__((swift_name("settingName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationResult.SettingSettingInfoCompanion")))
@interface SharedSettingNotificationResultSettingSettingInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSettingNotificationResultSettingSettingInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactResult")))
@interface SharedContactResult : SharedBase
- (instancetype)initWithContact:(NSArray<SharedContactResultContactList *> * _Nullable)contact __attribute__((swift_name("init(contact:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactResultCompanion *companion __attribute__((swift_name("companion")));
- (SharedContactResult *)doCopyContact:(NSArray<SharedContactResultContactList *> * _Nullable)contact __attribute__((swift_name("doCopy(contact:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedContactResultContactList *> * _Nullable contact __attribute__((swift_name("contact")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactResult.Companion")))
@interface SharedContactResultCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactResultCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactResult.ContactList")))
@interface SharedContactResultContactList : SharedBase
- (instancetype)initWithContactID:(NSString * _Nullable)contactID profileName:(NSString * _Nullable)profileName displayName:(NSString * _Nullable)displayName image:(NSString * _Nullable)image channelType:(NSString * _Nullable)channelType channelIcon:(NSString * _Nullable)channelIcon __attribute__((swift_name("init(contactID:profileName:displayName:image:channelType:channelIcon:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactResultContactListCompanion *companion __attribute__((swift_name("companion")));
- (SharedContactResultContactList *)doCopyContactID:(NSString * _Nullable)contactID profileName:(NSString * _Nullable)profileName displayName:(NSString * _Nullable)displayName image:(NSString * _Nullable)image channelType:(NSString * _Nullable)channelType channelIcon:(NSString * _Nullable)channelIcon __attribute__((swift_name("doCopy(contactID:profileName:displayName:image:channelType:channelIcon:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable channelIcon __attribute__((swift_name("channelIcon")));
@property (readonly) NSString * _Nullable channelType __attribute__((swift_name("channelType")));
@property (readonly) NSString * _Nullable contactID __attribute__((swift_name("contactID")));
@property (readonly) NSString * _Nullable displayName __attribute__((swift_name("displayName")));
@property (readonly) NSString * _Nullable image __attribute__((swift_name("image")));
@property (readonly) NSString * _Nullable profileName __attribute__((swift_name("profileName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactResult.ContactListCompanion")))
@interface SharedContactResultContactListCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactResultContactListCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChangePasswordBody")))
@interface SharedChangePasswordBody : SharedBase
- (instancetype)initWithOld_password:(NSString * _Nullable)old_password new_password:(NSString * _Nullable)new_password __attribute__((swift_name("init(old_password:new_password:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedChangePasswordBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedChangePasswordBody *)doCopyOld_password:(NSString * _Nullable)old_password new_password:(NSString * _Nullable)new_password __attribute__((swift_name("doCopy(old_password:new_password:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly, getter=doNew_password) NSString * _Nullable new_password __attribute__((swift_name("new_password")));
@property (readonly) NSString * _Nullable old_password __attribute__((swift_name("old_password")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChangePasswordBody.Companion")))
@interface SharedChangePasswordBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChangePasswordBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FirebaseTokenBody")))
@interface SharedFirebaseTokenBody : SharedBase
- (instancetype)initWithFirebaseToken:(NSString *)firebaseToken __attribute__((swift_name("init(firebaseToken:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedFirebaseTokenBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedFirebaseTokenBody *)doCopyFirebaseToken:(NSString *)firebaseToken __attribute__((swift_name("doCopy(firebaseToken:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *firebaseToken __attribute__((swift_name("firebaseToken")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FirebaseTokenBody.Companion")))
@interface SharedFirebaseTokenBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFirebaseTokenBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileBody")))
@interface SharedProfileBody : SharedBase
- (instancetype)initWithData:(SharedProfileBodyProfileData *)data __attribute__((swift_name("init(data:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedProfileBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedProfileBody *)doCopyData:(SharedProfileBodyProfileData *)data __attribute__((swift_name("doCopy(data:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedProfileBodyProfileData *data __attribute__((swift_name("data")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileBody.Companion")))
@interface SharedProfileBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedProfileBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileBody.ImageData")))
@interface SharedProfileBodyImageData : SharedBase
- (instancetype)initWithBuffer:(NSString *)buffer originalname:(NSString *)originalname __attribute__((swift_name("init(buffer:originalname:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedProfileBodyImageDataCompanion *companion __attribute__((swift_name("companion")));
- (SharedProfileBodyImageData *)doCopyBuffer:(NSString *)buffer originalname:(NSString *)originalname __attribute__((swift_name("doCopy(buffer:originalname:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *buffer __attribute__((swift_name("buffer")));
@property (readonly) NSString *originalname __attribute__((swift_name("originalname")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileBody.ImageDataCompanion")))
@interface SharedProfileBodyImageDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedProfileBodyImageDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileBody.ProfileData")))
@interface SharedProfileBodyProfileData : SharedBase
- (instancetype)initWithFirstname:(NSString * _Nullable)firstname lastname:(NSString * _Nullable)lastname image:(SharedProfileBodyImageData * _Nullable)image __attribute__((swift_name("init(firstname:lastname:image:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedProfileBodyProfileDataCompanion *companion __attribute__((swift_name("companion")));
- (SharedProfileBodyProfileData *)doCopyFirstname:(NSString * _Nullable)firstname lastname:(NSString * _Nullable)lastname image:(SharedProfileBodyImageData * _Nullable)image __attribute__((swift_name("doCopy(firstname:lastname:image:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable firstname __attribute__((swift_name("firstname")));
@property (readonly) SharedProfileBodyImageData * _Nullable image __attribute__((swift_name("image")));
@property (readonly) NSString * _Nullable lastname __attribute__((swift_name("lastname")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileBody.ProfileDataCompanion")))
@interface SharedProfileBodyProfileDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedProfileBodyProfileDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationBody")))
@interface SharedSettingNotificationBody : SharedBase
- (instancetype)initWithCompanyId:(NSString *)companyId allowNotification:(BOOL)allowNotification channel:(NSArray<SharedSettingNotificationBodyChannelSetting *> *)channel chat:(SharedSettingNotificationBodyChatSetting *)chat chatAvailabilityStatus:(SharedSettingNotificationBodyChatAvailabilityStatus *)chatAvailabilityStatus __attribute__((swift_name("init(companyId:allowNotification:channel:chat:chatAvailabilityStatus:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSettingNotificationBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedSettingNotificationBody *)doCopyCompanyId:(NSString *)companyId allowNotification:(BOOL)allowNotification channel:(NSArray<SharedSettingNotificationBodyChannelSetting *> *)channel chat:(SharedSettingNotificationBodyChatSetting *)chat chatAvailabilityStatus:(SharedSettingNotificationBodyChatAvailabilityStatus *)chatAvailabilityStatus __attribute__((swift_name("doCopy(companyId:allowNotification:channel:chat:chatAvailabilityStatus:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL allowNotification __attribute__((swift_name("allowNotification")));
@property (readonly) NSArray<SharedSettingNotificationBodyChannelSetting *> *channel __attribute__((swift_name("channel")));
@property (readonly) SharedSettingNotificationBodyChatSetting *chat __attribute__((swift_name("chat")));
@property (readonly) SharedSettingNotificationBodyChatAvailabilityStatus *chatAvailabilityStatus __attribute__((swift_name("chatAvailabilityStatus")));
@property (readonly) NSString *companyId __attribute__((swift_name("companyId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationBody.ChannelSetting")))
@interface SharedSettingNotificationBodyChannelSetting : SharedBase
- (instancetype)initWithId:(NSString *)id enable:(BOOL)enable __attribute__((swift_name("init(id:enable:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSettingNotificationBodyChannelSettingCompanion *companion __attribute__((swift_name("companion")));
- (SharedSettingNotificationBodyChannelSetting *)doCopyId:(NSString *)id enable:(BOOL)enable __attribute__((swift_name("doCopy(id:enable:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL enable __attribute__((swift_name("enable")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationBody.ChannelSettingCompanion")))
@interface SharedSettingNotificationBodyChannelSettingCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSettingNotificationBodyChannelSettingCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationBody.ChatAvailabilityStatus")))
@interface SharedSettingNotificationBodyChatAvailabilityStatus : SharedBase
- (instancetype)initWithAvailable:(BOOL)available away:(BOOL)away __attribute__((swift_name("init(available:away:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSettingNotificationBodyChatAvailabilityStatusCompanion *companion __attribute__((swift_name("companion")));
- (SharedSettingNotificationBodyChatAvailabilityStatus *)doCopyAvailable:(BOOL)available away:(BOOL)away __attribute__((swift_name("doCopy(available:away:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL available __attribute__((swift_name("available")));
@property (readonly) BOOL away __attribute__((swift_name("away")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationBody.ChatAvailabilityStatusCompanion")))
@interface SharedSettingNotificationBodyChatAvailabilityStatusCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSettingNotificationBodyChatAvailabilityStatusCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationBody.ChatSetting")))
@interface SharedSettingNotificationBodyChatSetting : SharedBase
- (instancetype)initWithNewMessage:(BOOL)newMessage assignedChat:(BOOL)assignedChat __attribute__((swift_name("init(newMessage:assignedChat:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSettingNotificationBodyChatSettingCompanion *companion __attribute__((swift_name("companion")));
- (SharedSettingNotificationBodyChatSetting *)doCopyNewMessage:(BOOL)newMessage assignedChat:(BOOL)assignedChat __attribute__((swift_name("doCopy(newMessage:assignedChat:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL assignedChat __attribute__((swift_name("assignedChat")));
@property (readonly, getter=doNewMessage) BOOL newMessage __attribute__((swift_name("newMessage")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationBody.ChatSettingCompanion")))
@interface SharedSettingNotificationBodyChatSettingCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSettingNotificationBodyChatSettingCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationBody.Companion")))
@interface SharedSettingNotificationBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSettingNotificationBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserProfileInfo")))
@interface SharedUserProfileInfo : SharedBase
- (instancetype)initWithUserID:(NSString * _Nullable)userID userEmail:(NSString * _Nullable)userEmail __attribute__((swift_name("init(userID:userEmail:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedUserProfileInfoCompanion *companion __attribute__((swift_name("companion")));
- (SharedUserProfileInfo *)doCopyUserID:(NSString * _Nullable)userID userEmail:(NSString * _Nullable)userEmail __attribute__((swift_name("doCopy(userID:userEmail:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable userEmail __attribute__((swift_name("userEmail")));
@property (readonly) NSString * _Nullable userID __attribute__((swift_name("userID")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserProfileInfo.Companion")))
@interface SharedUserProfileInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedUserProfileInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckAppStatusBody")))
@interface SharedCheckAppStatusBody : SharedBase
- (instancetype)initWithEmpty:(NSString *)empty __attribute__((swift_name("init(empty:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedCheckAppStatusBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedCheckAppStatusBody *)doCopyEmpty:(NSString *)empty __attribute__((swift_name("doCopy(empty:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *empty __attribute__((swift_name("empty")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckAppStatusBody.Companion")))
@interface SharedCheckAppStatusBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCheckAppStatusBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ConfirmNewPasswordBody")))
@interface SharedConfirmNewPasswordBody : SharedBase
- (instancetype)initWithEmail:(NSString *)email password:(NSString *)password uuid:(NSString *)uuid __attribute__((swift_name("init(email:password:uuid:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedConfirmNewPasswordBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedConfirmNewPasswordBody *)doCopyEmail:(NSString *)email password:(NSString *)password uuid:(NSString *)uuid __attribute__((swift_name("doCopy(email:password:uuid:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *email __attribute__((swift_name("email")));
@property (readonly) NSString *password __attribute__((swift_name("password")));
@property (readonly) NSString *uuid __attribute__((swift_name("uuid")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ConfirmNewPasswordBody.Companion")))
@interface SharedConfirmNewPasswordBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedConfirmNewPasswordBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactBody")))
@interface SharedContactBody : SharedBase
- (instancetype)initWithChannel_type_id:(NSArray<NSString *> *)channel_type_id contact_type:(NSArray<NSString *> *)contact_type customer_status:(NSArray<NSString *> *)customer_status customer_type:(NSArray<NSString *> *)customer_type page_index:(int32_t)page_index page_size:(int32_t)page_size search:(NSString *)search sortAsc:(int32_t)sortAsc sortField:(NSString *)sortField tag:(NSArray<NSString *> *)tag __attribute__((swift_name("init(channel_type_id:contact_type:customer_status:customer_type:page_index:page_size:search:sortAsc:sortField:tag:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedContactBody *)doCopyChannel_type_id:(NSArray<NSString *> *)channel_type_id contact_type:(NSArray<NSString *> *)contact_type customer_status:(NSArray<NSString *> *)customer_status customer_type:(NSArray<NSString *> *)customer_type page_index:(int32_t)page_index page_size:(int32_t)page_size search:(NSString *)search sortAsc:(int32_t)sortAsc sortField:(NSString *)sortField tag:(NSArray<NSString *> *)tag __attribute__((swift_name("doCopy(channel_type_id:contact_type:customer_status:customer_type:page_index:page_size:search:sortAsc:sortField:tag:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<NSString *> *channel_type_id __attribute__((swift_name("channel_type_id")));
@property (readonly) NSArray<NSString *> *contact_type __attribute__((swift_name("contact_type")));
@property (readonly) NSArray<NSString *> *customer_status __attribute__((swift_name("customer_status")));
@property (readonly) NSArray<NSString *> *customer_type __attribute__((swift_name("customer_type")));
@property (readonly) int32_t page_index __attribute__((swift_name("page_index")));
@property (readonly) int32_t page_size __attribute__((swift_name("page_size")));
@property (readonly) NSString *search __attribute__((swift_name("search")));
@property (readonly) int32_t sortAsc __attribute__((swift_name("sortAsc")));
@property (readonly) NSString *sortField __attribute__((swift_name("sortField")));
@property (readonly) NSArray<NSString *> *tag __attribute__((swift_name("tag")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactBody.Companion")))
@interface SharedContactBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardBody")))
@interface SharedDashboardBody : SharedBase
- (instancetype)initWithChannel_id:(NSString * _Nullable)channel_id channel_lists:(NSArray<NSString *> * _Nullable)channel_lists company_id:(NSString *)company_id role_id:(NSString *)role_id channelType:(NSArray<NSString *> *)channelType startDate:(NSString *)startDate endDate:(NSString *)endDate __attribute__((swift_name("init(channel_id:channel_lists:company_id:role_id:channelType:startDate:endDate:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedDashboardBody *)doCopyChannel_id:(NSString * _Nullable)channel_id channel_lists:(NSArray<NSString *> * _Nullable)channel_lists company_id:(NSString *)company_id role_id:(NSString *)role_id channelType:(NSArray<NSString *> *)channelType startDate:(NSString *)startDate endDate:(NSString *)endDate __attribute__((swift_name("doCopy(channel_id:channel_lists:company_id:role_id:channelType:startDate:endDate:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<NSString *> *channelType __attribute__((swift_name("channelType")));
@property (readonly) NSString * _Nullable channel_id __attribute__((swift_name("channel_id")));
@property (readonly) NSArray<NSString *> * _Nullable channel_lists __attribute__((swift_name("channel_lists")));
@property (readonly) NSString *company_id __attribute__((swift_name("company_id")));
@property (readonly) NSString *endDate __attribute__((swift_name("endDate")));
@property (readonly) NSString *role_id __attribute__((swift_name("role_id")));
@property (readonly) NSString *startDate __attribute__((swift_name("startDate")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardBody.Companion")))
@interface SharedDashboardBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EmptyBody")))
@interface SharedEmptyBody : SharedBase
- (instancetype)initWithEmpty:(NSString *)empty __attribute__((swift_name("init(empty:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedEmptyBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedEmptyBody *)doCopyEmpty:(NSString *)empty __attribute__((swift_name("doCopy(empty:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *empty __attribute__((swift_name("empty")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EmptyBody.Companion")))
@interface SharedEmptyBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedEmptyBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoginBody")))
@interface SharedLoginBody : SharedBase
- (instancetype)initWithEmail:(NSString *)email password:(NSString *)password __attribute__((swift_name("init(email:password:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedLoginBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedLoginBody *)doCopyEmail:(NSString *)email password:(NSString *)password __attribute__((swift_name("doCopy(email:password:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *email __attribute__((swift_name("email")));
@property (readonly) NSString *password __attribute__((swift_name("password")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoginBody.Companion")))
@interface SharedLoginBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedLoginBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ResetPasswordBody")))
@interface SharedResetPasswordBody : SharedBase
- (instancetype)initWithEmail:(NSString *)email __attribute__((swift_name("init(email:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedResetPasswordBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedResetPasswordBody *)doCopyEmail:(NSString *)email __attribute__((swift_name("doCopy(email:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *email __attribute__((swift_name("email")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ResetPasswordBody.Companion")))
@interface SharedResetPasswordBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedResetPasswordBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("VerifyOTPBody")))
@interface SharedVerifyOTPBody : SharedBase
- (instancetype)initWithEmail:(NSString *)email ref:(NSString *)ref otp:(NSString *)otp __attribute__((swift_name("init(email:ref:otp:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedVerifyOTPBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedVerifyOTPBody *)doCopyEmail:(NSString *)email ref:(NSString *)ref otp:(NSString *)otp __attribute__((swift_name("doCopy(email:ref:otp:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *email __attribute__((swift_name("email")));
@property (readonly) NSString *otp __attribute__((swift_name("otp")));
@property (readonly) NSString *ref __attribute__((swift_name("ref")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("VerifyOTPBody.Companion")))
@interface SharedVerifyOTPBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedVerifyOTPBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AcceptChatBody")))
@interface SharedAcceptChatBody : SharedBase
- (instancetype)initWithFollowerId:(NSString *)followerId __attribute__((swift_name("init(followerId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedAcceptChatBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedAcceptChatBody *)doCopyFollowerId:(NSString *)followerId __attribute__((swift_name("doCopy(followerId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AcceptChatBody.Companion")))
@interface SharedAcceptChatBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedAcceptChatBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AgentStatusBody")))
@interface SharedAgentStatusBody : SharedBase
- (instancetype)initWithChat_status:(int32_t)chat_status __attribute__((swift_name("init(chat_status:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedAgentStatusBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedAgentStatusBody *)doCopyChat_status:(int32_t)chat_status __attribute__((swift_name("doCopy(chat_status:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t chat_status __attribute__((swift_name("chat_status")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AgentStatusBody.Companion")))
@interface SharedAgentStatusBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedAgentStatusBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AssignAgentBody")))
@interface SharedAssignAgentBody : SharedBase
- (instancetype)initWithFollowerId:(NSString *)followerId liveChatId:(NSString *)liveChatId userId:(NSString *)userId __attribute__((swift_name("init(followerId:liveChatId:userId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedAssignAgentBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedAssignAgentBody *)doCopyFollowerId:(NSString *)followerId liveChatId:(NSString *)liveChatId userId:(NSString *)userId __attribute__((swift_name("doCopy(followerId:liveChatId:userId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@property (readonly) NSString *liveChatId __attribute__((swift_name("liveChatId")));
@property (readonly) NSString *userId __attribute__((swift_name("userId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AssignAgentBody.Companion")))
@interface SharedAssignAgentBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedAssignAgentBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AssignGroupBody")))
@interface SharedAssignGroupBody : SharedBase
- (instancetype)initWithFollowerId:(NSString *)followerId liveChatId:(NSString *)liveChatId groupId:(NSString *)groupId __attribute__((swift_name("init(followerId:liveChatId:groupId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedAssignGroupBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedAssignGroupBody *)doCopyFollowerId:(NSString *)followerId liveChatId:(NSString *)liveChatId groupId:(NSString *)groupId __attribute__((swift_name("doCopy(followerId:liveChatId:groupId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@property (readonly) NSString *groupId __attribute__((swift_name("groupId")));
@property (readonly) NSString *liveChatId __attribute__((swift_name("liveChatId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AssignGroupBody.Companion")))
@interface SharedAssignGroupBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedAssignGroupBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CloseChatBody")))
@interface SharedCloseChatBody : SharedBase
- (instancetype)initWithFollowerId:(NSString *)followerId liveChatId:(NSString *)liveChatId __attribute__((swift_name("init(followerId:liveChatId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedCloseChatBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedCloseChatBody *)doCopyFollowerId:(NSString *)followerId liveChatId:(NSString *)liveChatId __attribute__((swift_name("doCopy(followerId:liveChatId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@property (readonly) NSString *liveChatId __attribute__((swift_name("liveChatId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CloseChatBody.Companion")))
@interface SharedCloseChatBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCloseChatBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactCreateLiveChatBody")))
@interface SharedContactCreateLiveChatBody : SharedBase
- (instancetype)initWithFollowerId:(NSString *)followerId __attribute__((swift_name("init(followerId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactCreateLiveChatBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedContactCreateLiveChatBody *)doCopyFollowerId:(NSString *)followerId __attribute__((swift_name("doCopy(followerId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactCreateLiveChatBody.Companion")))
@interface SharedContactCreateLiveChatBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactCreateLiveChatBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentFileDataBody")))
@interface SharedContentFileDataBody : SharedBase
- (instancetype)initWithBody:(SharedContentFileDataBodyBody *)body direction:(NSString *)direction footer:(SharedContentFileDataBodyFooter *)footer size:(NSString *)size type:(NSString *)type __attribute__((swift_name("init(body:direction:footer:size:type:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContentFileDataBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedContentFileDataBody *)doCopyBody:(SharedContentFileDataBodyBody *)body direction:(NSString *)direction footer:(SharedContentFileDataBodyFooter *)footer size:(NSString *)size type:(NSString *)type __attribute__((swift_name("doCopy(body:direction:footer:size:type:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedContentFileDataBodyBody *body __attribute__((swift_name("body")));
@property (readonly) NSString *direction __attribute__((swift_name("direction")));
@property (readonly) SharedContentFileDataBodyFooter *footer __attribute__((swift_name("footer")));
@property (readonly) NSString *size __attribute__((swift_name("size")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentFileDataBody.Body")))
@interface SharedContentFileDataBodyBody : SharedBase
- (instancetype)initWithContents:(NSArray<SharedContentFileDataBodyBodyContent *> *)contents layout:(NSString *)layout margin:(NSString *)margin paddingBottom:(NSString *)paddingBottom paddingEnd:(NSString *)paddingEnd paddingStart:(NSString *)paddingStart paddingTop:(NSString *)paddingTop spacing:(NSString *)spacing type:(NSString *)type __attribute__((swift_name("init(contents:layout:margin:paddingBottom:paddingEnd:paddingStart:paddingTop:spacing:type:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContentFileDataBodyBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedContentFileDataBodyBody *)doCopyContents:(NSArray<SharedContentFileDataBodyBodyContent *> *)contents layout:(NSString *)layout margin:(NSString *)margin paddingBottom:(NSString *)paddingBottom paddingEnd:(NSString *)paddingEnd paddingStart:(NSString *)paddingStart paddingTop:(NSString *)paddingTop spacing:(NSString *)spacing type:(NSString *)type __attribute__((swift_name("doCopy(contents:layout:margin:paddingBottom:paddingEnd:paddingStart:paddingTop:spacing:type:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedContentFileDataBodyBodyContent *> *contents __attribute__((swift_name("contents")));
@property (readonly) NSString *layout __attribute__((swift_name("layout")));
@property (readonly) NSString *margin __attribute__((swift_name("margin")));
@property (readonly) NSString *paddingBottom __attribute__((swift_name("paddingBottom")));
@property (readonly) NSString *paddingEnd __attribute__((swift_name("paddingEnd")));
@property (readonly) NSString *paddingStart __attribute__((swift_name("paddingStart")));
@property (readonly) NSString *paddingTop __attribute__((swift_name("paddingTop")));
@property (readonly) NSString *spacing __attribute__((swift_name("spacing")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentFileDataBody.BodyCompanion")))
@interface SharedContentFileDataBodyBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContentFileDataBodyBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentFileDataBody.BodyContent")))
@interface SharedContentFileDataBodyBodyContent : SharedBase
- (instancetype)initWithContents:(NSArray<SharedContentFileDataBodyBodyContentContent *> *)contents layout:(NSString *)layout paddingStart:(NSString *)paddingStart type:(NSString *)type __attribute__((swift_name("init(contents:layout:paddingStart:type:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContentFileDataBodyBodyContentCompanion *companion __attribute__((swift_name("companion")));
- (SharedContentFileDataBodyBodyContent *)doCopyContents:(NSArray<SharedContentFileDataBodyBodyContentContent *> *)contents layout:(NSString *)layout paddingStart:(NSString *)paddingStart type:(NSString *)type __attribute__((swift_name("doCopy(contents:layout:paddingStart:type:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedContentFileDataBodyBodyContentContent *> *contents __attribute__((swift_name("contents")));
@property (readonly) NSString *layout __attribute__((swift_name("layout")));
@property (readonly) NSString *paddingStart __attribute__((swift_name("paddingStart")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentFileDataBody.BodyContentCompanion")))
@interface SharedContentFileDataBodyBodyContentCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContentFileDataBodyBodyContentCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentFileDataBody.BodyContentContent")))
@interface SharedContentFileDataBodyBodyContentContent : SharedBase
- (instancetype)initWithAlign:(NSString * _Nullable)align contents:(NSArray<SharedContentFileDataBodyBodyContentContentContent *> * _Nullable)contents flex:(SharedInt * _Nullable)flex gravity:(NSString * _Nullable)gravity layout:(NSString * _Nullable)layout paddingStart:(NSString * _Nullable)paddingStart size:(NSString * _Nullable)size type:(NSString *)type url:(NSString * _Nullable)url __attribute__((swift_name("init(align:contents:flex:gravity:layout:paddingStart:size:type:url:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContentFileDataBodyBodyContentContentCompanion *companion __attribute__((swift_name("companion")));
- (SharedContentFileDataBodyBodyContentContent *)doCopyAlign:(NSString * _Nullable)align contents:(NSArray<SharedContentFileDataBodyBodyContentContentContent *> * _Nullable)contents flex:(SharedInt * _Nullable)flex gravity:(NSString * _Nullable)gravity layout:(NSString * _Nullable)layout paddingStart:(NSString * _Nullable)paddingStart size:(NSString * _Nullable)size type:(NSString *)type url:(NSString * _Nullable)url __attribute__((swift_name("doCopy(align:contents:flex:gravity:layout:paddingStart:size:type:url:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable align __attribute__((swift_name("align")));
@property (readonly) NSArray<SharedContentFileDataBodyBodyContentContentContent *> * _Nullable contents __attribute__((swift_name("contents")));
@property (readonly) SharedInt * _Nullable flex __attribute__((swift_name("flex")));
@property (readonly) NSString * _Nullable gravity __attribute__((swift_name("gravity")));
@property (readonly) NSString * _Nullable layout __attribute__((swift_name("layout")));
@property (readonly) NSString * _Nullable paddingStart __attribute__((swift_name("paddingStart")));
@property (readonly) NSString * _Nullable size __attribute__((swift_name("size")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@property (readonly) NSString * _Nullable url __attribute__((swift_name("url")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentFileDataBody.BodyContentContentCompanion")))
@interface SharedContentFileDataBodyBodyContentContentCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContentFileDataBodyBodyContentContentCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentFileDataBody.BodyContentContentContent")))
@interface SharedContentFileDataBodyBodyContentContentContent : SharedBase
- (instancetype)initWithContents:(NSArray<SharedContentFileDataBodyBodyContentContentContentContent *> *)contents layout:(NSString *)layout margin:(NSString * _Nullable)margin type:(NSString *)type __attribute__((swift_name("init(contents:layout:margin:type:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContentFileDataBodyBodyContentContentContentCompanion *companion __attribute__((swift_name("companion")));
- (SharedContentFileDataBodyBodyContentContentContent *)doCopyContents:(NSArray<SharedContentFileDataBodyBodyContentContentContentContent *> *)contents layout:(NSString *)layout margin:(NSString * _Nullable)margin type:(NSString *)type __attribute__((swift_name("doCopy(contents:layout:margin:type:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedContentFileDataBodyBodyContentContentContentContent *> *contents __attribute__((swift_name("contents")));
@property (readonly) NSString *layout __attribute__((swift_name("layout")));
@property (readonly) NSString * _Nullable margin __attribute__((swift_name("margin")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentFileDataBody.BodyContentContentContentCompanion")))
@interface SharedContentFileDataBodyBodyContentContentContentCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContentFileDataBodyBodyContentContentContentCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentFileDataBody.BodyContentContentContentContent")))
@interface SharedContentFileDataBodyBodyContentContentContentContent : SharedBase
- (instancetype)initWithAlign:(NSString * _Nullable)align color:(NSString * _Nullable)color contents:(NSArray<SharedContentFileDataBodyBodyContentContentContentContentContent *> *)contents layout:(NSString * _Nullable)layout size:(NSString * _Nullable)size text:(NSString * _Nullable)text type:(NSString *)type weight:(NSString * _Nullable)weight wrap:(SharedBoolean * _Nullable)wrap __attribute__((swift_name("init(align:color:contents:layout:size:text:type:weight:wrap:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContentFileDataBodyBodyContentContentContentContentCompanion *companion __attribute__((swift_name("companion")));
- (SharedContentFileDataBodyBodyContentContentContentContent *)doCopyAlign:(NSString * _Nullable)align color:(NSString * _Nullable)color contents:(NSArray<SharedContentFileDataBodyBodyContentContentContentContentContent *> *)contents layout:(NSString * _Nullable)layout size:(NSString * _Nullable)size text:(NSString * _Nullable)text type:(NSString *)type weight:(NSString * _Nullable)weight wrap:(SharedBoolean * _Nullable)wrap __attribute__((swift_name("doCopy(align:color:contents:layout:size:text:type:weight:wrap:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable align __attribute__((swift_name("align")));
@property (readonly) NSString * _Nullable color __attribute__((swift_name("color")));
@property (readonly) NSArray<SharedContentFileDataBodyBodyContentContentContentContentContent *> *contents __attribute__((swift_name("contents")));
@property (readonly) NSString * _Nullable layout __attribute__((swift_name("layout")));
@property (readonly) NSString * _Nullable size __attribute__((swift_name("size")));
@property (readonly) NSString * _Nullable text __attribute__((swift_name("text")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@property (readonly) NSString * _Nullable weight __attribute__((swift_name("weight")));
@property (readonly) SharedBoolean * _Nullable wrap __attribute__((swift_name("wrap")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentFileDataBody.BodyContentContentContentContentCompanion")))
@interface SharedContentFileDataBodyBodyContentContentContentContentCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContentFileDataBodyBodyContentContentContentContentCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentFileDataBody.BodyContentContentContentContentContent")))
@interface SharedContentFileDataBodyBodyContentContentContentContentContent : SharedBase
- (instancetype)initWithContents:(NSArray<NSString *> *)contents flex:(SharedInt * _Nullable)flex size:(NSString *)size text:(NSString *)text type:(NSString *)type wrap:(SharedBoolean * _Nullable)wrap __attribute__((swift_name("init(contents:flex:size:text:type:wrap:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContentFileDataBodyBodyContentContentContentContentContentCompanion *companion __attribute__((swift_name("companion")));
- (SharedContentFileDataBodyBodyContentContentContentContentContent *)doCopyContents:(NSArray<NSString *> *)contents flex:(SharedInt * _Nullable)flex size:(NSString *)size text:(NSString *)text type:(NSString *)type wrap:(SharedBoolean * _Nullable)wrap __attribute__((swift_name("doCopy(contents:flex:size:text:type:wrap:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<NSString *> *contents __attribute__((swift_name("contents")));
@property (readonly) SharedInt * _Nullable flex __attribute__((swift_name("flex")));
@property (readonly) NSString *size __attribute__((swift_name("size")));
@property (readonly) NSString *text __attribute__((swift_name("text")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@property (readonly) SharedBoolean * _Nullable wrap __attribute__((swift_name("wrap")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentFileDataBody.BodyContentContentContentContentContentCompanion")))
@interface SharedContentFileDataBodyBodyContentContentContentContentContentCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContentFileDataBodyBodyContentContentContentContentContentCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentFileDataBody.Companion")))
@interface SharedContentFileDataBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContentFileDataBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentFileDataBody.Footer")))
@interface SharedContentFileDataBodyFooter : SharedBase
- (instancetype)initWithContents:(NSArray<SharedContentFileDataBodyFooterContent *> *)contents layout:(NSString *)layout paddingTop:(NSString *)paddingTop type:(NSString *)type __attribute__((swift_name("init(contents:layout:paddingTop:type:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContentFileDataBodyFooterCompanion *companion __attribute__((swift_name("companion")));
- (SharedContentFileDataBodyFooter *)doCopyContents:(NSArray<SharedContentFileDataBodyFooterContent *> *)contents layout:(NSString *)layout paddingTop:(NSString *)paddingTop type:(NSString *)type __attribute__((swift_name("doCopy(contents:layout:paddingTop:type:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedContentFileDataBodyFooterContent *> *contents __attribute__((swift_name("contents")));
@property (readonly) NSString *layout __attribute__((swift_name("layout")));
@property (readonly) NSString *paddingTop __attribute__((swift_name("paddingTop")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentFileDataBody.FooterCompanion")))
@interface SharedContentFileDataBodyFooterCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContentFileDataBodyFooterCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentFileDataBody.FooterContent")))
@interface SharedContentFileDataBodyFooterContent : SharedBase
- (instancetype)initWithAction:(SharedContentFileDataBodyFooterContentAction *)action backgroundColor:(NSString *)backgroundColor contents:(NSArray<SharedContentFileDataBodyFooterContentContent *> *)contents cornerRadius:(NSString *)cornerRadius layout:(NSString *)layout paddingAll:(NSString *)paddingAll type:(NSString *)type __attribute__((swift_name("init(action:backgroundColor:contents:cornerRadius:layout:paddingAll:type:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContentFileDataBodyFooterContentCompanion *companion __attribute__((swift_name("companion")));
- (SharedContentFileDataBodyFooterContent *)doCopyAction:(SharedContentFileDataBodyFooterContentAction *)action backgroundColor:(NSString *)backgroundColor contents:(NSArray<SharedContentFileDataBodyFooterContentContent *> *)contents cornerRadius:(NSString *)cornerRadius layout:(NSString *)layout paddingAll:(NSString *)paddingAll type:(NSString *)type __attribute__((swift_name("doCopy(action:backgroundColor:contents:cornerRadius:layout:paddingAll:type:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedContentFileDataBodyFooterContentAction *action __attribute__((swift_name("action")));
@property (readonly) NSString *backgroundColor __attribute__((swift_name("backgroundColor")));
@property (readonly) NSArray<SharedContentFileDataBodyFooterContentContent *> *contents __attribute__((swift_name("contents")));
@property (readonly) NSString *cornerRadius __attribute__((swift_name("cornerRadius")));
@property (readonly) NSString *layout __attribute__((swift_name("layout")));
@property (readonly) NSString *paddingAll __attribute__((swift_name("paddingAll")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentFileDataBody.FooterContentAction")))
@interface SharedContentFileDataBodyFooterContentAction : SharedBase
- (instancetype)initWithLabel:(NSString *)label type:(NSString *)type uri:(NSString *)uri __attribute__((swift_name("init(label:type:uri:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContentFileDataBodyFooterContentActionCompanion *companion __attribute__((swift_name("companion")));
- (SharedContentFileDataBodyFooterContentAction *)doCopyLabel:(NSString *)label type:(NSString *)type uri:(NSString *)uri __attribute__((swift_name("doCopy(label:type:uri:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *label __attribute__((swift_name("label")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@property (readonly) NSString *uri __attribute__((swift_name("uri")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentFileDataBody.FooterContentActionCompanion")))
@interface SharedContentFileDataBodyFooterContentActionCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContentFileDataBodyFooterContentActionCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentFileDataBody.FooterContentCompanion")))
@interface SharedContentFileDataBodyFooterContentCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContentFileDataBodyFooterContentCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentFileDataBody.FooterContentContent")))
@interface SharedContentFileDataBodyFooterContentContent : SharedBase
- (instancetype)initWithAlign:(NSString *)align color:(NSString *)color contents:(NSArray<NSString *> *)contents gravity:(NSString *)gravity size:(NSString *)size text:(NSString *)text type:(NSString *)type weight:(NSString *)weight __attribute__((swift_name("init(align:color:contents:gravity:size:text:type:weight:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContentFileDataBodyFooterContentContentCompanion *companion __attribute__((swift_name("companion")));
- (SharedContentFileDataBodyFooterContentContent *)doCopyAlign:(NSString *)align color:(NSString *)color contents:(NSArray<NSString *> *)contents gravity:(NSString *)gravity size:(NSString *)size text:(NSString *)text type:(NSString *)type weight:(NSString *)weight __attribute__((swift_name("doCopy(align:color:contents:gravity:size:text:type:weight:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *align __attribute__((swift_name("align")));
@property (readonly) NSString *color __attribute__((swift_name("color")));
@property (readonly) NSArray<NSString *> *contents __attribute__((swift_name("contents")));
@property (readonly) NSString *gravity __attribute__((swift_name("gravity")));
@property (readonly) NSString *size __attribute__((swift_name("size")));
@property (readonly) NSString *text __attribute__((swift_name("text")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@property (readonly) NSString *weight __attribute__((swift_name("weight")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentFileDataBody.FooterContentContentCompanion")))
@interface SharedContentFileDataBodyFooterContentContentCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContentFileDataBodyFooterContentContentCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CreateTextBody")))
@interface SharedCreateTextBody : SharedBase
- (instancetype)initWithFollowerId:(NSString *)followerId text:(NSString *)text __attribute__((swift_name("init(followerId:text:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedCreateTextBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedCreateTextBody *)doCopyFollowerId:(NSString *)followerId text:(NSString *)text __attribute__((swift_name("doCopy(followerId:text:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@property (readonly) NSString *text __attribute__((swift_name("text")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CreateTextBody.Companion")))
@interface SharedCreateTextBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCreateTextBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DeleteNoteBody")))
@interface SharedDeleteNoteBody : SharedBase
- (instancetype)initWithFollowerId:(NSString *)followerId no:(int32_t)no __attribute__((swift_name("init(followerId:no:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDeleteNoteBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedDeleteNoteBody *)doCopyFollowerId:(NSString *)followerId no:(int32_t)no __attribute__((swift_name("doCopy(followerId:no:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@property (readonly) int32_t no __attribute__((swift_name("no")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DeleteNoteBody.Companion")))
@interface SharedDeleteNoteBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDeleteNoteBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ExtendChatBody")))
@interface SharedExtendChatBody : SharedBase
- (instancetype)initWithLiveChatId:(NSString *)liveChatId __attribute__((swift_name("init(liveChatId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedExtendChatBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedExtendChatBody *)doCopyLiveChatId:(NSString *)liveChatId __attribute__((swift_name("doCopy(liveChatId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *liveChatId __attribute__((swift_name("liveChatId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ExtendChatBody.Companion")))
@interface SharedExtendChatBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedExtendChatBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileUploadBody")))
@interface SharedFileUploadBody : SharedBase
- (instancetype)initWithFile:(SharedFileUploadBodyFile *)file followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId tempId:(NSString *)tempId userId:(NSString *)userId isTTL:(BOOL)isTTL __attribute__((swift_name("init(file:followerId:liveChatId:tempId:userId:isTTL:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedFileUploadBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedFileUploadBody *)doCopyFile:(SharedFileUploadBodyFile *)file followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId tempId:(NSString *)tempId userId:(NSString *)userId isTTL:(BOOL)isTTL __attribute__((swift_name("doCopy(file:followerId:liveChatId:tempId:userId:isTTL:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedFileUploadBodyFile *file __attribute__((swift_name("file")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@property (readonly) BOOL isTTL __attribute__((swift_name("isTTL")));
@property (readonly) NSString *liveChatId __attribute__((swift_name("liveChatId")));
@property (readonly) NSString *tempId __attribute__((swift_name("tempId")));
@property (readonly) NSString *userId __attribute__((swift_name("userId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileUploadBody.Companion")))
@interface SharedFileUploadBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFileUploadBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileUploadBody.File")))
@interface SharedFileUploadBodyFile : SharedBase
- (instancetype)initWithBuffer:(NSString *)buffer category:(NSString *)category extension:(NSString *)extension originalname:(NSString *)originalname resolution:(SharedFileUploadBodyResolution *)resolution size:(int64_t)size type:(NSString *)type __attribute__((swift_name("init(buffer:category:extension:originalname:resolution:size:type:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedFileUploadBodyFileCompanion *companion __attribute__((swift_name("companion")));
- (SharedFileUploadBodyFile *)doCopyBuffer:(NSString *)buffer category:(NSString *)category extension:(NSString *)extension originalname:(NSString *)originalname resolution:(SharedFileUploadBodyResolution *)resolution size:(int64_t)size type:(NSString *)type __attribute__((swift_name("doCopy(buffer:category:extension:originalname:resolution:size:type:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *buffer __attribute__((swift_name("buffer")));
@property (readonly) NSString *category __attribute__((swift_name("category")));
@property (readonly) NSString *extension __attribute__((swift_name("extension")));
@property (readonly) NSString *originalname __attribute__((swift_name("originalname")));
@property (readonly) SharedFileUploadBodyResolution *resolution __attribute__((swift_name("resolution")));
@property (readonly) int64_t size __attribute__((swift_name("size")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileUploadBody.FileCompanion")))
@interface SharedFileUploadBodyFileCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFileUploadBodyFileCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileUploadBody.Resolution")))
@interface SharedFileUploadBodyResolution : SharedBase
- (instancetype)initWithHeight:(int32_t)height width:(int32_t)width __attribute__((swift_name("init(height:width:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedFileUploadBodyResolutionCompanion *companion __attribute__((swift_name("companion")));
- (SharedFileUploadBodyResolution *)doCopyHeight:(int32_t)height width:(int32_t)width __attribute__((swift_name("doCopy(height:width:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t height __attribute__((swift_name("height")));
@property (readonly) int32_t width __attribute__((swift_name("width")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileUploadBody.ResolutionCompanion")))
@interface SharedFileUploadBodyResolutionCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFileUploadBodyResolutionCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FollowChatBody")))
@interface SharedFollowChatBody : SharedBase
- (instancetype)initWithFollowerId:(NSString *)followerId liveChatId:(NSString *)liveChatId userId:(NSString *)userId __attribute__((swift_name("init(followerId:liveChatId:userId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedFollowChatBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedFollowChatBody *)doCopyFollowerId:(NSString *)followerId liveChatId:(NSString *)liveChatId userId:(NSString *)userId __attribute__((swift_name("doCopy(followerId:liveChatId:userId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@property (readonly) NSString *liveChatId __attribute__((swift_name("liveChatId")));
@property (readonly) NSString *userId __attribute__((swift_name("userId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FollowChatBody.Companion")))
@interface SharedFollowChatBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFollowChatBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetSearchFollowerBody")))
@interface SharedGetSearchFollowerBody : SharedBase
- (instancetype)initWithFollowerIds:(NSArray<NSString *> *)followerIds __attribute__((swift_name("init(followerIds:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetSearchFollowerBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetSearchFollowerBody *)doCopyFollowerIds:(NSArray<NSString *> *)followerIds __attribute__((swift_name("doCopy(followerIds:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<NSString *> *followerIds __attribute__((swift_name("followerIds")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetSearchFollowerBody.Companion")))
@interface SharedGetSearchFollowerBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetSearchFollowerBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetTagBody")))
@interface SharedGetTagBody : SharedBase
- (instancetype)initWithChannel:(NSArray<NSString *> *)channel tag_id_list:(NSArray<NSString *> *)tag_id_list skip:(int32_t)skip limit:(int32_t)limit __attribute__((swift_name("init(channel:tag_id_list:skip:limit:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetTagBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedGetTagBody *)doCopyChannel:(NSArray<NSString *> *)channel tag_id_list:(NSArray<NSString *> *)tag_id_list skip:(int32_t)skip limit:(int32_t)limit __attribute__((swift_name("doCopy(channel:tag_id_list:skip:limit:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<NSString *> *channel __attribute__((swift_name("channel")));
@property (readonly) int32_t limit __attribute__((swift_name("limit")));
@property (readonly) int32_t skip __attribute__((swift_name("skip")));
@property (readonly) NSArray<NSString *> *tag_id_list __attribute__((swift_name("tag_id_list")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetTagBody.Companion")))
@interface SharedGetTagBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetTagBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchNameBody")))
@interface SharedSearchNameBody : SharedBase
- (instancetype)initWithText:(NSString *)text skip:(NSString *)skip limit:(NSString *)limit __attribute__((swift_name("init(text:skip:limit:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSearchNameBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedSearchNameBody *)doCopyText:(NSString *)text skip:(NSString *)skip limit:(NSString *)limit __attribute__((swift_name("doCopy(text:skip:limit:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *limit __attribute__((swift_name("limit")));
@property (readonly) NSString *skip __attribute__((swift_name("skip")));
@property (readonly) NSString *text __attribute__((swift_name("text")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchNameBody.Companion")))
@interface SharedSearchNameBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchNameBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SendMessageToChatBody")))
@interface SharedSendMessageToChatBody : SharedBase
- (instancetype)initWithLiveChatId:(NSString *)liveChatId followerId:(NSString *)followerId message:(NSString *)message tempId:(NSString *)tempId userId:(NSString *)userId __attribute__((swift_name("init(liveChatId:followerId:message:tempId:userId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSendMessageToChatBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedSendMessageToChatBody *)doCopyLiveChatId:(NSString *)liveChatId followerId:(NSString *)followerId message:(NSString *)message tempId:(NSString *)tempId userId:(NSString *)userId __attribute__((swift_name("doCopy(liveChatId:followerId:message:tempId:userId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@property (readonly) NSString *liveChatId __attribute__((swift_name("liveChatId")));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@property (readonly) NSString *tempId __attribute__((swift_name("tempId")));
@property (readonly) NSString *userId __attribute__((swift_name("userId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SendMessageToChatBody.Companion")))
@interface SharedSendMessageToChatBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSendMessageToChatBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SendReplyFile2MessageBody")))
@interface SharedSendReplyFile2MessageBody : SharedBase
- (instancetype)initWithLiveChatId:(NSString *)liveChatId userId:(NSString *)userId followerId:(NSString *)followerId files:(NSMutableArray<SharedSendReplyFile2MessageBodyFileMessageBody *> *)files tempId:(NSString *)tempId __attribute__((swift_name("init(liveChatId:userId:followerId:files:tempId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSendReplyFile2MessageBodyCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSMutableArray<SharedSendReplyFile2MessageBodyFileMessageBody *> *files __attribute__((swift_name("files")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@property (readonly) NSString *liveChatId __attribute__((swift_name("liveChatId")));
@property (readonly) NSString *tempId __attribute__((swift_name("tempId")));
@property (readonly) NSString *userId __attribute__((swift_name("userId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SendReplyFile2MessageBody.Companion")))
@interface SharedSendReplyFile2MessageBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSendReplyFile2MessageBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SendReplyFile2MessageBody.FileMessageBody")))
@interface SharedSendReplyFile2MessageBodyFileMessageBody : SharedBase
- (instancetype)initWithTitle:(NSString *)title type:(NSString *)type messagesSent:(SharedSendReplyFile2MessageBodyMessageSentBody *)messagesSent __attribute__((swift_name("init(title:type:messagesSent:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSendReplyFile2MessageBodyFileMessageBodyCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedSendReplyFile2MessageBodyMessageSentBody *messagesSent __attribute__((swift_name("messagesSent")));
@property (readonly) NSString *title __attribute__((swift_name("title")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SendReplyFile2MessageBody.FileMessageBodyCompanion")))
@interface SharedSendReplyFile2MessageBodyFileMessageBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSendReplyFile2MessageBodyFileMessageBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SendReplyFile2MessageBody.MessageSentBody")))
@interface SharedSendReplyFile2MessageBodyMessageSentBody : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (class, readonly, getter=companion) SharedSendReplyFile2MessageBodyMessageSentBodyCompanion *companion __attribute__((swift_name("companion")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SendReplyFile2MessageBody.MessageSentBodyCompanion")))
@interface SharedSendReplyFile2MessageBodyMessageSentBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSendReplyFile2MessageBodyMessageSentBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SendReplyFileMessageBody")))
@interface SharedSendReplyFileMessageBody : SharedBase
- (instancetype)initWithLiveChatId:(NSString *)liveChatId userId:(NSString *)userId followerId:(NSString *)followerId files:(NSMutableArray<SharedSendReplyFileMessageBodyFileMessageBody *> *)files tempId:(NSString *)tempId __attribute__((swift_name("init(liveChatId:userId:followerId:files:tempId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSendReplyFileMessageBodyCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSMutableArray<SharedSendReplyFileMessageBodyFileMessageBody *> *files __attribute__((swift_name("files")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@property (readonly) NSString *liveChatId __attribute__((swift_name("liveChatId")));
@property (readonly) NSString *tempId __attribute__((swift_name("tempId")));
@property (readonly) NSString *userId __attribute__((swift_name("userId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SendReplyFileMessageBody.Companion")))
@interface SharedSendReplyFileMessageBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSendReplyFileMessageBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SendReplyFileMessageBody.FileMessageBody")))
@interface SharedSendReplyFileMessageBodyFileMessageBody : SharedBase
- (instancetype)initWithTitle:(NSString *)title type:(NSString *)type messagesSent:(SharedSendReplyFileMessageBodyMessageSentBody *)messagesSent __attribute__((swift_name("init(title:type:messagesSent:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSendReplyFileMessageBodyFileMessageBodyCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedSendReplyFileMessageBodyMessageSentBody *messagesSent __attribute__((swift_name("messagesSent")));
@property (readonly) NSString *title __attribute__((swift_name("title")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SendReplyFileMessageBody.FileMessageBodyCompanion")))
@interface SharedSendReplyFileMessageBodyFileMessageBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSendReplyFileMessageBodyFileMessageBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SendReplyFileMessageBody.MessageSentBody")))
@interface SharedSendReplyFileMessageBodyMessageSentBody : SharedBase
- (instancetype)initWithType:(NSString *)type previewImageUrl:(NSString * _Nullable)previewImageUrl originalContentUrl:(NSString * _Nullable)originalContentUrl trackingId:(NSString * _Nullable)trackingId altText:(NSString *)altText contents:(SharedContentFileDataBody * _Nullable)contents __attribute__((swift_name("init(type:previewImageUrl:originalContentUrl:trackingId:altText:contents:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSendReplyFileMessageBodyMessageSentBodyCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString *altText __attribute__((swift_name("altText")));
@property (readonly) SharedContentFileDataBody * _Nullable contents __attribute__((swift_name("contents")));
@property (readonly) NSString * _Nullable originalContentUrl __attribute__((swift_name("originalContentUrl")));
@property (readonly) NSString * _Nullable previewImageUrl __attribute__((swift_name("previewImageUrl")));
@property (readonly) NSString * _Nullable trackingId __attribute__((swift_name("trackingId")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SendReplyFileMessageBody.MessageSentBodyCompanion")))
@interface SharedSendReplyFileMessageBodyMessageSentBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSendReplyFileMessageBodyMessageSentBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SendStickerBody")))
@interface SharedSendStickerBody : SharedBase
- (instancetype)initWithFollowerId:(NSString *)followerId liveChatId:(NSString *)liveChatId package_id:(int32_t)package_id sticker_id:(int32_t)sticker_id tempId:(NSString *)tempId userId:(NSString *)userId __attribute__((swift_name("init(followerId:liveChatId:package_id:sticker_id:tempId:userId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSendStickerBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedSendStickerBody *)doCopyFollowerId:(NSString *)followerId liveChatId:(NSString *)liveChatId package_id:(int32_t)package_id sticker_id:(int32_t)sticker_id tempId:(NSString *)tempId userId:(NSString *)userId __attribute__((swift_name("doCopy(followerId:liveChatId:package_id:sticker_id:tempId:userId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@property (readonly) NSString *liveChatId __attribute__((swift_name("liveChatId")));
@property (readonly) int32_t package_id __attribute__((swift_name("package_id")));
@property (readonly) int32_t sticker_id __attribute__((swift_name("sticker_id")));
@property (readonly) NSString *tempId __attribute__((swift_name("tempId")));
@property (readonly) NSString *userId __attribute__((swift_name("userId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SendStickerBody.Companion")))
@interface SharedSendStickerBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSendStickerBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SendTemplateMessageToChatBody")))
@interface SharedSendTemplateMessageToChatBody : SharedBase
- (instancetype)initWithLiveChatId:(NSString *)liveChatId followerId:(NSString *)followerId replyMessageId:(NSString *)replyMessageId userId:(NSString *)userId __attribute__((swift_name("init(liveChatId:followerId:replyMessageId:userId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSendTemplateMessageToChatBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedSendTemplateMessageToChatBody *)doCopyLiveChatId:(NSString *)liveChatId followerId:(NSString *)followerId replyMessageId:(NSString *)replyMessageId userId:(NSString *)userId __attribute__((swift_name("doCopy(liveChatId:followerId:replyMessageId:userId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@property (readonly) NSString *liveChatId __attribute__((swift_name("liveChatId")));
@property (readonly) NSString *replyMessageId __attribute__((swift_name("replyMessageId")));
@property (readonly) NSString *userId __attribute__((swift_name("userId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SendTemplateMessageToChatBody.Companion")))
@interface SharedSendTemplateMessageToChatBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSendTemplateMessageToChatBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SpamChatBody")))
@interface SharedSpamChatBody : SharedBase
- (instancetype)initWithFollower_id:(NSString *)follower_id __attribute__((swift_name("init(follower_id:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSpamChatBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedSpamChatBody *)doCopyFollower_id:(NSString *)follower_id __attribute__((swift_name("doCopy(follower_id:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *follower_id __attribute__((swift_name("follower_id")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SpamChatBody.Companion")))
@interface SharedSpamChatBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSpamChatBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TakeChatBody")))
@interface SharedTakeChatBody : SharedBase
- (instancetype)initWithFollowerId:(NSString *)followerId liveChatId:(NSString *)liveChatId __attribute__((swift_name("init(followerId:liveChatId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedTakeChatBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedTakeChatBody *)doCopyFollowerId:(NSString *)followerId liveChatId:(NSString *)liveChatId __attribute__((swift_name("doCopy(followerId:liveChatId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@property (readonly) NSString *liveChatId __attribute__((swift_name("liveChatId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TakeChatBody.Companion")))
@interface SharedTakeChatBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedTakeChatBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UpdateInformationListBody")))
@interface SharedUpdateInformationListBody : SharedBase
- (instancetype)initWithFollowerId:(NSString *)followerId id:(NSString *)id value:(NSArray<NSString *> *)value __attribute__((swift_name("init(followerId:id:value:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedUpdateInformationListBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedUpdateInformationListBody *)doCopyFollowerId:(NSString *)followerId id:(NSString *)id value:(NSArray<NSString *> *)value __attribute__((swift_name("doCopy(followerId:id:value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSArray<NSString *> *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UpdateInformationListBody.Companion")))
@interface SharedUpdateInformationListBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedUpdateInformationListBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UpdateNicknameBody")))
@interface SharedUpdateNicknameBody : SharedBase
- (instancetype)initWithFollowerId:(NSString *)followerId nickname:(NSString *)nickname __attribute__((swift_name("init(followerId:nickname:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedUpdateNicknameBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedUpdateNicknameBody *)doCopyFollowerId:(NSString *)followerId nickname:(NSString *)nickname __attribute__((swift_name("doCopy(followerId:nickname:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@property (readonly) NSString *nickname __attribute__((swift_name("nickname")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UpdateNicknameBody.Companion")))
@interface SharedUpdateNicknameBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedUpdateNicknameBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UpdateNoteBody")))
@interface SharedUpdateNoteBody : SharedBase
- (instancetype)initWithFollowerId:(NSString *)followerId text:(NSString *)text no:(int32_t)no __attribute__((swift_name("init(followerId:text:no:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedUpdateNoteBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedUpdateNoteBody *)doCopyFollowerId:(NSString *)followerId text:(NSString *)text no:(int32_t)no __attribute__((swift_name("doCopy(followerId:text:no:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@property (readonly) int32_t no __attribute__((swift_name("no")));
@property (readonly) NSString *text __attribute__((swift_name("text")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UpdateNoteBody.Companion")))
@interface SharedUpdateNoteBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedUpdateNoteBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UpdateTagBody")))
@interface SharedUpdateTagBody : SharedBase
- (instancetype)initWithFollowerId:(NSString *)followerId id:(NSString *)id __attribute__((swift_name("init(followerId:id:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedUpdateTagBodyCompanion *companion __attribute__((swift_name("companion")));
- (SharedUpdateTagBody *)doCopyFollowerId:(NSString *)followerId id:(NSString *)id __attribute__((swift_name("doCopy(followerId:id:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UpdateTagBody.Companion")))
@interface SharedUpdateTagBodyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedUpdateTagBodyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BaseMessage")))
@interface SharedBaseMessage : SharedBase
- (instancetype)initWithEn:(NSString *)en th:(NSString *)th __attribute__((swift_name("init(en:th:)"))) __attribute__((objc_designated_initializer));
- (SharedBaseMessage *)doCopyEn:(NSString *)en th:(NSString *)th __attribute__((swift_name("doCopy(en:th:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *en __attribute__((swift_name("en")));
@property (readonly) NSString *th __attribute__((swift_name("th")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BaseMessageDisplay")))
@interface SharedBaseMessageDisplay : SharedBase
- (instancetype)initWithMsgEn:(NSString * _Nullable)msgEn msgTh:(NSString * _Nullable)msgTh msgType:(NSString * _Nullable)msgType __attribute__((swift_name("init(msgEn:msgTh:msgType:)"))) __attribute__((objc_designated_initializer));
- (SharedBaseMessageDisplay *)doCopyMsgEn:(NSString * _Nullable)msgEn msgTh:(NSString * _Nullable)msgTh msgType:(NSString * _Nullable)msgType __attribute__((swift_name("doCopy(msgEn:msgTh:msgType:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable msgEn __attribute__((swift_name("msgEn")));
@property (readonly) NSString * _Nullable msgTh __attribute__((swift_name("msgTh")));
@property (readonly) NSString * _Nullable msgType __attribute__((swift_name("msgType")));
@end

__attribute__((swift_name("BaseResponseStatus")))
@interface SharedBaseResponseStatus : SharedBase
- (instancetype)initWithResponseStatus:(SharedResponseStatus * _Nullable)responseStatus appStatus:(NSString * _Nullable)appStatus message:(SharedMessageEntity * _Nullable)message messageDisplay:(SharedMessageDisplayEntity * _Nullable)messageDisplay __attribute__((swift_name("init(responseStatus:appStatus:message:messageDisplay:)"))) __attribute__((objc_designated_initializer));
@property (readonly) NSString * _Nullable appStatus __attribute__((swift_name("appStatus")));
@property (readonly) SharedMessageEntity * _Nullable message __attribute__((swift_name("message")));
@property (readonly) SharedMessageDisplayEntity * _Nullable messageDisplay __attribute__((swift_name("messageDisplay")));
@property (readonly) SharedResponseStatus * _Nullable responseStatus __attribute__((swift_name("responseStatus")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Header")))
@interface SharedHeader : SharedBase
- (instancetype)initWithPlatform:(SharedPlatformType *)platform token:(NSString * _Nullable)token __attribute__((swift_name("init(platform:token:)"))) __attribute__((objc_designated_initializer));
@property (readonly) SharedPlatformType *platform __attribute__((swift_name("platform")));
@property (readonly) NSString * _Nullable token __attribute__((swift_name("token")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AgentSocket")))
@interface SharedAgentSocket : SharedBase
- (instancetype)initWithChat_status:(SharedInt * _Nullable)chat_status company_id:(NSString *)company_id email:(NSString *)email firstname:(NSString *)firstname lastname:(NSString *)lastname name:(NSString *)name image:(NSString *)image phone:(NSString *)phone user_id:(NSString *)user_id platform:(NSString *)platform __attribute__((swift_name("init(chat_status:company_id:email:firstname:lastname:name:image:phone:user_id:platform:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedAgentSocketCompanion *companion __attribute__((swift_name("companion")));
- (SharedAgentSocket *)doCopyChat_status:(SharedInt * _Nullable)chat_status company_id:(NSString *)company_id email:(NSString *)email firstname:(NSString *)firstname lastname:(NSString *)lastname name:(NSString *)name image:(NSString *)image phone:(NSString *)phone user_id:(NSString *)user_id platform:(NSString *)platform __attribute__((swift_name("doCopy(chat_status:company_id:email:firstname:lastname:name:image:phone:user_id:platform:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedInt * _Nullable chat_status __attribute__((swift_name("chat_status")));
@property (readonly) NSString *company_id __attribute__((swift_name("company_id")));
@property (readonly) NSString *email __attribute__((swift_name("email")));
@property (readonly) NSString *firstname __attribute__((swift_name("firstname")));
@property (readonly) NSString *image __attribute__((swift_name("image")));
@property (readonly) NSString *lastname __attribute__((swift_name("lastname")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString *phone __attribute__((swift_name("phone")));
@property (readonly) NSString *platform __attribute__((swift_name("platform")));
@property (readonly) NSString *user_id __attribute__((swift_name("user_id")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AgentSocket.Companion")))
@interface SharedAgentSocketCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedAgentSocketCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SocketOption")))
@interface SharedSocketOption : SharedBase
- (instancetype)initWithBaseURL:(NSString *)baseURL nameSpace:(NSString *)nameSpace __attribute__((swift_name("init(baseURL:nameSpace:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSocketOptionCompanion *companion __attribute__((swift_name("companion")));
- (SharedSocketOption *)doCopyBaseURL:(NSString *)baseURL nameSpace:(NSString *)nameSpace __attribute__((swift_name("doCopy(baseURL:nameSpace:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *baseURL __attribute__((swift_name("baseURL")));
@property (readonly) NSString *nameSpace __attribute__((swift_name("nameSpace")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SocketOption.Companion")))
@interface SharedSocketOptionCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSocketOptionCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StartChatSocket")))
@interface SharedStartChatSocket : SharedBase
- (instancetype)initWithSwitchModeAt:(NSString *)switchModeAt countDownSecond:(NSString *)countDownSecond livechatId:(NSString *)livechatId followerId:(NSString *)followerId __attribute__((swift_name("init(switchModeAt:countDownSecond:livechatId:followerId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedStartChatSocketCompanion *companion __attribute__((swift_name("companion")));
- (SharedStartChatSocket *)doCopySwitchModeAt:(NSString *)switchModeAt countDownSecond:(NSString *)countDownSecond livechatId:(NSString *)livechatId followerId:(NSString *)followerId __attribute__((swift_name("doCopy(switchModeAt:countDownSecond:livechatId:followerId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *countDownSecond __attribute__((swift_name("countDownSecond")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@property (readonly) NSString *livechatId __attribute__((swift_name("livechatId")));
@property (readonly) NSString *switchModeAt __attribute__((swift_name("switchModeAt")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StartChatSocket.Companion")))
@interface SharedStartChatSocketCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedStartChatSocketCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TriggerExtendChatTimeSocket")))
@interface SharedTriggerExtendChatTimeSocket : SharedBase
- (instancetype)initWithSwitchModeAt:(NSString *)switchModeAt countDownSecond:(NSString *)countDownSecond followerId:(NSString *)followerId __attribute__((swift_name("init(switchModeAt:countDownSecond:followerId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedTriggerExtendChatTimeSocketCompanion *companion __attribute__((swift_name("companion")));
- (SharedTriggerExtendChatTimeSocket *)doCopySwitchModeAt:(NSString *)switchModeAt countDownSecond:(NSString *)countDownSecond followerId:(NSString *)followerId __attribute__((swift_name("doCopy(switchModeAt:countDownSecond:followerId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *countDownSecond __attribute__((swift_name("countDownSecond")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@property (readonly) NSString *switchModeAt __attribute__((swift_name("switchModeAt")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TriggerExtendChatTimeSocket.Companion")))
@interface SharedTriggerExtendChatTimeSocketCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedTriggerExtendChatTimeSocketCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PlatformType")))
@interface SharedPlatformType : SharedKotlinEnum<SharedPlatformType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPlatformType *ios __attribute__((swift_name("ios")));
@property (class, readonly) SharedPlatformType *android __attribute__((swift_name("android")));
+ (SharedKotlinArray<SharedPlatformType *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *code __attribute__((swift_name("code")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StatusCode")))
@interface SharedStatusCode : SharedKotlinEnum<SharedStatusCode *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedStatusCode *success __attribute__((swift_name("success")));
@property (class, readonly) SharedStatusCode *forceLogout __attribute__((swift_name("forceLogout")));
@property (class, readonly) SharedStatusCode *tokenForceExpired1 __attribute__((swift_name("tokenForceExpired1")));
@property (class, readonly) SharedStatusCode *tokenForceExpired2 __attribute__((swift_name("tokenForceExpired2")));
@property (class, readonly) SharedStatusCode *tokenForceExpired3 __attribute__((swift_name("tokenForceExpired3")));
@property (class, readonly) SharedStatusCode *tokenForceExpired4 __attribute__((swift_name("tokenForceExpired4")));
@property (class, readonly) SharedStatusCode *tokenForceExpired5 __attribute__((swift_name("tokenForceExpired5")));
@property (class, readonly) SharedStatusCode *navigateToRegisterLogin __attribute__((swift_name("navigateToRegisterLogin")));
@property (class, readonly) SharedStatusCode *navigateToResetPin __attribute__((swift_name("navigateToResetPin")));
+ (SharedKotlinArray<SharedStatusCode *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *code __attribute__((swift_name("code")));
@end

__attribute__((swift_name("Koin_coreKoinComponent")))
@protocol SharedKoin_coreKoinComponent
@required
- (SharedKoin_coreKoin *)getKoin __attribute__((swift_name("getKoin()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuthSharedViewModel")))
@interface SharedAuthSharedViewModel : SharedBase <SharedKoin_coreKoinComponent>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)confirmNewPasswordBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine email:(NSString *)email password:(NSString *)password uuid:(NSString *)uuid link:(NSString *)link completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("confirmNewPassword(baseUrl:headers:engine:email:password:uuid:link:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getOfficialAccountListBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine searchName:(NSString * _Nullable)searchName completionHandler:(void (^)(SharedNetworkResponse<SharedGetOfficialAccountResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getOfficialAccountList(baseUrl:headers:engine:searchName:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getUserMenuBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedUserRoleMenuResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getUserMenu(baseUrl:headers:engine:roleId:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)loginWithUserBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine body:(SharedLoginBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedLoginResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("loginWithUser(baseUrl:headers:engine:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)resendOTPBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine link:(NSString *)link completionHandler:(void (^)(SharedNetworkResponse<SharedSetNewPasswordResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("resendOTP(baseUrl:headers:engine:link:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)resetPasswordBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine email:(NSString *)email completionHandler:(void (^)(SharedNetworkResponse<SharedResetPasswordResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("resetPassword(baseUrl:headers:engine:email:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setNewPasswordBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine link:(NSString *)link completionHandler:(void (^)(SharedNetworkResponse<SharedSetNewPasswordResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setNewPassword(baseUrl:headers:engine:link:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)verifyOTPBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine email:(NSString *)email ref:(NSString *)ref otp:(NSString *)otp completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("verifyOTP(baseUrl:headers:engine:email:ref:otp:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactSharedViewModel")))
@interface SharedContactSharedViewModel : SharedBase <SharedKoin_coreKoinComponent>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getContactListBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId channel_type_id:(NSArray<NSString *> *)channel_type_id contact_type:(NSArray<NSString *> * _Nullable)contact_type customer_status:(NSArray<NSString *> * _Nullable)customer_status customer_type:(NSArray<NSString *> * _Nullable)customer_type page_index:(int32_t)page_index page_size:(int32_t)page_size search:(NSString *)search sortAsc:(SharedInt * _Nullable)sortAsc sortField:(NSString * _Nullable)sortField tag:(NSArray<NSString *> * _Nullable)tag completionHandler:(void (^)(SharedNetworkResponse<SharedContactResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getContactList(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:channel_type_id:contact_type:customer_status:customer_type:page_index:page_size:search:sortAsc:sortField:tag:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardSharedViewModel")))
@interface SharedDashboardSharedViewModel : SharedBase <SharedKoin_coreKoinComponent>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getDashboardBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channel_id:(NSString * _Nullable)channel_id channel_lists:(NSArray<NSString *> * _Nullable)channel_lists company_id:(NSString *)company_id role_id:(NSString *)role_id channelType:(NSArray<NSString *> *)channelType startDate:(NSString *)startDate endData:(NSString *)endData completionHandler:(void (^)(SharedNetworkResponse<SharedDashboardResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getDashboard(baseUrl:headers:engine:channel_id:channel_lists:company_id:role_id:channelType:startDate:endData:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LiveChatSharedViewModel")))
@interface SharedLiveChatSharedViewModel : SharedBase <SharedKoin_coreKoinComponent>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)acceptChatBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId completionHandler:(void (^)(SharedNetworkResponse<SharedAcceptChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("acceptChat(baseUrl:headers:engine:channelId:companyId:channelLists:followerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)addTagBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId tagId:(NSString *)tagId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("addTag(baseUrl:headers:engine:roleId:channelId:companyId:channelLists:followerId:tagId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)assignToAgentBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId userId:(NSString *)userId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("assignToAgent(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:followerId:liveChatId:userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)assignToGroupBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId groupId:(NSString *)groupId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("assignToGroup(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:followerId:liveChatId:groupId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)chatSearchMessageBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId text:(NSString *)text skip:(int32_t)skip limit:(int32_t)limit channelSelected:(NSArray<NSString *> *)channelSelected completionHandler:(void (^)(SharedNetworkResponse<SharedSearchMessageResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("chatSearchMessage(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:text:skip:limit:channelSelected:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)chatSearchNameBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId text:(NSString *)text skip:(int32_t)skip limit:(int32_t)limit channelSelected:(NSArray<NSString *> *)channelSelected completionHandler:(void (^)(SharedNetworkResponse<SharedSearchNameResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("chatSearchName(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:text:skip:limit:channelSelected:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)closeChatBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId completionHandler:(void (^)(SharedNetworkResponse<SharedGetFollowerChatResultChatRoomList *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("closeChat(baseUrl:headers:engine:channelId:companyId:channelLists:followerId:liveChatId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createNoteBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId text:(NSString *)text completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createNote(baseUrl:headers:engine:roleId:channelId:companyId:channelLists:followerId:text:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createTagBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId text:(NSString *)text completionHandler:(void (^)(SharedNetworkResponse<NSString *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createTag(baseUrl:headers:engine:roleId:channelId:companyId:channelLists:followerId:text:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteNoteBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId no:(int32_t)no completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteNote(baseUrl:headers:engine:roleId:channelId:companyId:channelLists:followerId:no:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteTagBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId tagId:(NSString *)tagId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteTag(baseUrl:headers:engine:roleId:channelId:companyId:channelLists:followerId:tagId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)extendLiveChatBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId liveChatId:(NSString *)liveChatId completionHandler:(void (^)(SharedNetworkResponse<SharedAcceptChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("extendLiveChat(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:liveChatId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAgentAssignListBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedAgentAssignResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAgentAssignList(baseUrl:headers:engine:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAgentChatStatusBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedGetAgentChatStatusResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAgentChatStatus(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAgentFilterListBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists searchName:(NSString * _Nullable)searchName completionHandler:(void (^)(SharedNetworkResponse<SharedAgentFilterResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAgentFilterList(baseUrl:headers:engine:channelId:companyId:channelLists:searchName:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getChatMessageBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId startID:(NSString * _Nullable)startID endID:(NSString * _Nullable)endID fromID:(NSString * _Nullable)fromID toID:(NSString * _Nullable)toID limit:(SharedInt * _Nullable)limit botHide:(BOOL)botHide oldResult:(SharedGetChatMessageResult * _Nullable)oldResult completionHandler:(void (^)(SharedNetworkResponse<SharedGetChatMessageResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getChatMessage(baseUrl:headers:engine:roleId:channelId:companyId:channelLists:followerId:startID:endID:fromID:toID:limit:botHide:oldResult:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFileFolderListBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedFileFolderListResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFileFolderList(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFileListByFolderIdBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId folderId:(NSString *)folderId sortType:(SharedSortType *)sortType sortField:(SharedSortField *)sortField completionHandler:(void (^)(SharedNetworkResponse<SharedFileListResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFileListByFolderId(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:folderId:sortType:sortField:completionHandler:)")));
- (SharedKotlinArray<SharedFilterFile *> *)getFilterListFile __attribute__((swift_name("getFilterListFile()")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFollowerChatBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId skip:(SharedInt * _Nullable)skip limit:(SharedInt * _Nullable)limit sortType:(SharedSortType * _Nullable)sortType chatType:(SharedChatRoomType * _Nullable)chatType assigneeId:(NSString *)assigneeId channelType:(NSString * _Nullable)channelType groupId:(NSString * _Nullable)groupId completionHandler:(void (^)(SharedNetworkResponse<SharedGetFollowerChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFollowerChat(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:skip:limit:sortType:chatType:assigneeId:channelType:groupId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getGroupAssignListBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedGroupAssignResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getGroupAssignList(baseUrl:headers:engine:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getGroupFilterListBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists searchName:(NSString * _Nullable)searchName completionHandler:(void (^)(SharedNetworkResponse<SharedGroupFilterResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getGroupFilterList(baseUrl:headers:engine:channelId:companyId:channelLists:searchName:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getInformationBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId completionHandler:(void (^)(SharedNetworkResponse<SharedContactInformationResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getInformation(baseUrl:headers:engine:roleId:channelId:companyId:channelLists:followerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getMasterDataChatBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedMasterDataChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getMasterDataChat(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getNotesBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId roleLevel:(int32_t)roleLevel completionHandler:(void (^)(SharedNetworkResponse<NSArray<SharedContactInformationResultNote *> *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getNotes(baseUrl:headers:engine:roleId:channelId:companyId:channelLists:followerId:roleLevel:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getNotificationCountBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedNotificationCountResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getNotificationCount(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getReplyMessageByIdBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId replyMessageId:(NSString *)replyMessageId chatChannelTypeId:(NSString *)chatChannelTypeId completionHandler:(void (^)(SharedNetworkResponse<NSMutableArray<SharedGetChatMessageResultMessageSent *> *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getReplyMessageById(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:replyMessageId:chatChannelTypeId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getReplyTemplateBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedGetReplyTemplateResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getReplyTemplate(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getSearchFollowerInfoBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId listFollowerId:(NSArray<NSString *> *)listFollowerId completionHandler:(void (^)(SharedNetworkResponse<SharedGetSearchFollowerResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getSearchFollowerInfo(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:listFollowerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getStickerListBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedStickerResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getStickerList(baseUrl:headers:engine:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getSwitchModeBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId liveChatId:(NSString *)liveChatId completionHandler:(void (^)(SharedNetworkResponse<SharedSwitchModeResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getSwitchMode(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:liveChatId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTagInfoBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId limit:(int32_t)limit skip:(int32_t)skip tagId:(NSString *)tagId completionHandler:(void (^)(SharedNetworkResponse<SharedSearchTagResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTagInfo(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:limit:skip:tagId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTagListBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId sortField:(SharedSortField *)sortField sortType:(SharedSortType *)sortType completionHandler:(void (^)(SharedNetworkResponse<SharedTagListResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTagList(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:sortField:sortType:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)searchMessageInChatBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId skip:(int32_t)skip limit:(int32_t)limit search:(NSString *)search followerInfo:(SharedGetChatMessageResultSearchFollowerInfo *)followerInfo completionHandler:(void (^)(SharedNetworkResponse<SharedSearchMessageInChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("searchMessageInChat(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:skip:limit:search:followerInfo:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendFileFromLocalBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId tempId:(NSString *)tempId fileBase64:(NSString *)fileBase64 fileName:(NSString *)fileName resolutionWidth:(int32_t)resolutionWidth reslutionHeight:(int32_t)reslutionHeight fileSize:(int64_t)fileSize completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendFileFromLocal(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:followerId:liveChatId:tempId:fileBase64:fileName:resolutionWidth:reslutionHeight:fileSize:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendFileMessageBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId tempId:(NSString *)tempId file:(SharedFileListResultFileResult *)file completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendFileMessage(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:followerId:liveChatId:tempId:file:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendMessageBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId liveChatId:(NSString *)liveChatId followerId:(NSString *)followerId message:(NSString *)message tempId:(NSString *)tempId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendMessage(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:liveChatId:followerId:message:tempId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendReplyMessageBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId replyMessageId:(NSString *)replyMessageId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendReplyMessage(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:followerId:liveChatId:replyMessageId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendStickerBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId packageId:(int32_t)packageId stickerId:(int32_t)stickerId tempId:(NSString *)tempId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendSticker(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:followerId:liveChatId:packageId:stickerId:tempId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setAgentChatStatusBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId chatStatus:(int32_t)chatStatus completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setAgentChatStatus(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:chatStatus:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setChatFollowBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setChatFollow(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:followerId:liveChatId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setChatSpamBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setChatSpam(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:followerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setDefaultAgentStatusBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setDefaultAgentStatus(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)takeChatBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId completionHandler:(void (^)(SharedNetworkResponse<SharedAcceptChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("takeChat(baseUrl:headers:engine:roleId:channelId:companyId:channelLists:followerId:liveChatId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateInformationBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists information:(SharedMutableDictionary<NSString *, NSMutableArray<NSString *> *> *)information followerId:(NSString *)followerId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateInformation(baseUrl:headers:engine:roleId:channelId:companyId:channelLists:information:followerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateNickNameBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId nickname:(NSString *)nickname completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateNickName(baseUrl:headers:engine:roleId:channelId:companyId:channelLists:followerId:nickname:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateNoteBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId text:(NSString *)text no:(int32_t)no completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateNote(baseUrl:headers:engine:roleId:channelId:companyId:channelLists:followerId:text:no:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingSharedViewModel")))
@interface SharedSettingSharedViewModel : SharedBase <SharedKoin_coreKoinComponent>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)changePasswordBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine new_password:(NSString *)new_password old_password:(NSString *)old_password completionHandler:(void (^)(SharedNetworkResponse<SharedChangePasswordResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("changePassword(baseUrl:headers:engine:new_password:old_password:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)checkAppVersionUpdateBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine appVersion:(NSString *)appVersion completionHandler:(void (^)(SharedNetworkResponse<SharedCheckAppVersionUpdateResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAppVersionUpdate(baseUrl:headers:engine:appVersion:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)checkUserTokenBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine completionHandler:(void (^)(SharedNetworkResponse<SharedCheckUserTokenResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkUserToken(baseUrl:headers:engine:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getSettingNotificationBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedSettingNotificationResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getSettingNotification(baseUrl:headers:engine:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getSettingNotificationAccountBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedSettingNotificationAccountResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getSettingNotificationAccount(baseUrl:headers:engine:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)livechatSettingsBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedLiveChatSettingResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("livechatSettings(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)logoutBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("logout(baseUrl:headers:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)saveProfileBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine firstname:(NSString * _Nullable)firstname lastname:(NSString * _Nullable)lastname completionHandler:(void (^)(SharedNetworkResponse<SharedProfileResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("saveProfile(baseUrl:headers:engine:firstname:lastname:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)saveProfileImageBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine imageBase64:(NSString *)imageBase64 imageName:(NSString *)imageName completionHandler:(void (^)(SharedNetworkResponse<SharedProfileResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("saveProfileImage(baseUrl:headers:engine:imageBase64:imageName:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setFirebaseTokenBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists firebaseToken:(NSString *)firebaseToken completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setFirebaseToken(baseUrl:headers:engine:channelId:companyId:channelLists:firebaseToken:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setNotificationSettingBaseUrl:(NSString *)baseUrl headers:(SharedHeader *)headers engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists allowNotification:(BOOL)allowNotification channelSettingList:(NSArray<SharedSettingNotificationBodyChannelSetting *> *)channelSettingList chatAvailability:(SharedSettingNotificationBodyChatAvailabilityStatus *)chatAvailability chatSetting:(SharedSettingNotificationBodyChatSetting *)chatSetting completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setNotificationSetting(baseUrl:headers:engine:channelId:companyId:channelLists:allowNotification:channelSettingList:chatAvailability:chatSetting:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SocketSharedViewModel")))
@interface SharedSocketSharedViewModel : SharedBase <SharedKoin_coreKoinComponent>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)addAgentModel:(SharedAgentSocket *)model __attribute__((swift_name("addAgent(model:)")));
- (void)connect __attribute__((swift_name("connect()")));
- (void)disconnect __attribute__((swift_name("disconnect()")));
- (void)doInitOption:(SharedSocketOption *)option __attribute__((swift_name("doInit(option:)")));
- (BOOL)isConnected __attribute__((swift_name("isConnected()")));
- (void)joinChannelsChannelIds:(NSArray<NSString *> *)channelIds __attribute__((swift_name("joinChannels(channelIds:)")));
- (void)joinChatFollowerId:(NSString *)followerId __attribute__((swift_name("joinChat(followerId:)")));
- (void)joinOACompanyId:(NSString *)companyId __attribute__((swift_name("joinOA(companyId:)")));
- (void)leaveChannelsChannelIds:(NSArray<NSString *> *)channelIds __attribute__((swift_name("leaveChannels(channelIds:)")));
- (void)leaveChatFollowerId:(NSString *)followerId __attribute__((swift_name("leaveChat(followerId:)")));
- (void)leaveRoomCompanyId:(NSString *)companyId __attribute__((swift_name("leaveRoom(companyId:)")));
- (void)offConnectErrorEvent __attribute__((swift_name("offConnectErrorEvent()")));
- (void)offConnectEvent __attribute__((swift_name("offConnectEvent()")));
- (void)offDisconnectEvent __attribute__((swift_name("offDisconnectEvent()")));
- (void)onAddChatCallback:(void (^)(SharedGetChatMessageResultChatMessageList *, NSString *))callback __attribute__((swift_name("onAddChat(callback:)")));
- (void)onConnectErrorEventCallback:(void (^)(void))callback __attribute__((swift_name("onConnectErrorEvent(callback:)")));
- (void)onConnectEventCallback:(void (^)(void))callback __attribute__((swift_name("onConnectEvent(callback:)")));
- (void)onDisconnectEventCallback:(void (^)(void))callback __attribute__((swift_name("onDisconnectEvent(callback:)")));
- (void)onFetchChatsCallback:(void (^)(SharedInt *))callback __attribute__((swift_name("onFetchChats(callback:)")));
- (void)onFetchFollowersUserId:(NSString *)userId callback:(void (^)(SharedGetFollowerChatResultChatRoomList *))callback __attribute__((swift_name("onFetchFollowers(userId:callback:)")));
- (void)onFetchFollowersCloseChatCallback:(void (^)(SharedGetFollowerChatResultChatRoomList *))callback __attribute__((swift_name("onFetchFollowersCloseChat(callback:)")));
- (void)onFetchLogoutCallback:(void (^)(void))callback __attribute__((swift_name("onFetchLogout(callback:)")));
- (void)onFetchStartChatCallback:(void (^)(SharedStartChatSocket *))callback __attribute__((swift_name("onFetchStartChat(callback:)")));
- (void)onTriggerExtendChatTimeCallback:(void (^)(SharedTriggerExtendChatTimeSocket *))callback __attribute__((swift_name("onTriggerExtendChatTime(callback:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Constants")))
@interface SharedConstants : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)constants __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedConstants *shared __attribute__((swift_name("shared")));
@property (readonly) NSString * _Nullable MAP_PATH __attribute__((swift_name("MAP_PATH")));
@property (readonly) NSString *PATTERN_USERNAME __attribute__((swift_name("PATTERN_USERNAME")));
@property (readonly) NSString * _Nullable STICKER_ANIM_PATH __attribute__((swift_name("STICKER_ANIM_PATH")));
@property (readonly) NSString * _Nullable STICKER_PATH __attribute__((swift_name("STICKER_PATH")));
@property (readonly) NSString *errorMsgEn __attribute__((swift_name("errorMsgEn")));
@property (readonly) NSString *errorMsgTh __attribute__((swift_name("errorMsgTh")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SocketEvent")))
@interface SharedSocketEvent : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)socketEvent __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSocketEvent *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *ADD_AGENT __attribute__((swift_name("ADD_AGENT")));
@property (readonly) NSString *ADD_CHAT __attribute__((swift_name("ADD_CHAT")));
@property (readonly) NSString *FETCH_CHATS __attribute__((swift_name("FETCH_CHATS")));
@property (readonly) NSString *FETCH_FOLLOWERS __attribute__((swift_name("FETCH_FOLLOWERS")));
@property (readonly) NSString *FETCH_FOLLOWER_CLOSE_CHAT __attribute__((swift_name("FETCH_FOLLOWER_CLOSE_CHAT")));
@property (readonly) NSString *FETCH_LOGOUT __attribute__((swift_name("FETCH_LOGOUT")));
@property (readonly) NSString *FETCH_START_CHAT __attribute__((swift_name("FETCH_START_CHAT")));
@property (readonly) NSString *JOIN_CHANNEL __attribute__((swift_name("JOIN_CHANNEL")));
@property (readonly) NSString *JOIN_CHAT __attribute__((swift_name("JOIN_CHAT")));
@property (readonly) NSString *JOIN_OA __attribute__((swift_name("JOIN_OA")));
@property (readonly) NSString *LEAVE_CHANNEL __attribute__((swift_name("LEAVE_CHANNEL")));
@property (readonly) NSString *LEAVE_CHAT __attribute__((swift_name("LEAVE_CHAT")));
@property (readonly) NSString *LEAVE_ROOM __attribute__((swift_name("LEAVE_ROOM")));
@property (readonly) NSString *TRIGGER_EXTEND_CHAT_TIME __attribute__((swift_name("TRIGGER_EXTEND_CHAT_TIME")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChannelType")))
@interface SharedChannelType : SharedKotlinEnum<SharedChannelType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedChannelTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedChannelType *line __attribute__((swift_name("line")));
@property (class, readonly) SharedChannelType *facebook __attribute__((swift_name("facebook")));
@property (class, readonly) SharedChannelType *widget __attribute__((swift_name("widget")));
@property (class, readonly) SharedChannelType *instagram __attribute__((swift_name("instagram")));
@property (class, readonly) SharedChannelType *wechat __attribute__((swift_name("wechat")));
+ (SharedKotlinArray<SharedChannelType *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *channelCodeID __attribute__((swift_name("channelCodeID")));
@property (readonly) NSString *iconBase64 __attribute__((swift_name("iconBase64")));
@property (readonly) NSString *nameEN __attribute__((swift_name("nameEN")));
@property (readonly) NSString *nameTH __attribute__((swift_name("nameTH")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChannelType.Companion")))
@interface SharedChannelTypeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChannelTypeCompanion *shared __attribute__((swift_name("shared")));
- (SharedChannelType *)fromNameChannelName:(NSString * _Nullable)channelName __attribute__((swift_name("fromName(channelName:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatCategory")))
@interface SharedChatCategory : SharedKotlinEnum<SharedChatCategory *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedChatCategoryCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedChatCategory *group __attribute__((swift_name("group")));
@property (class, readonly) SharedChatCategory *normal __attribute__((swift_name("normal")));
+ (SharedKotlinArray<SharedChatCategory *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatCategory.Companion")))
@interface SharedChatCategoryCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatCategoryCompanion *shared __attribute__((swift_name("shared")));
- (SharedChatCategory *)fromType:(NSString * _Nullable)type __attribute__((swift_name("from(type:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageType")))
@interface SharedChatMessageType : SharedKotlinEnum<SharedChatMessageType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedChatMessageTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedChatMessageType *question __attribute__((swift_name("question")));
@property (class, readonly) SharedChatMessageType *reply __attribute__((swift_name("reply")));
@property (class, readonly) SharedChatMessageType *activity __attribute__((swift_name("activity")));
@property (class, readonly) SharedChatMessageType *status __attribute__((swift_name("status")));
+ (SharedKotlinArray<SharedChatMessageType *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageType.Companion")))
@interface SharedChatMessageTypeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatMessageTypeCompanion *shared __attribute__((swift_name("shared")));
- (SharedChatMessageType *)fromType:(NSString * _Nullable)type subType:(NSString * _Nullable)subType __attribute__((swift_name("from(type:subType:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMode")))
@interface SharedChatMode : SharedKotlinEnum<SharedChatMode *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedChatModeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedChatMode *liveBot __attribute__((swift_name("liveBot")));
@property (class, readonly) SharedChatMode *bot __attribute__((swift_name("bot")));
@property (class, readonly) SharedChatMode *live __attribute__((swift_name("live")));
+ (SharedKotlinArray<SharedChatMode *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMode.Companion")))
@interface SharedChatModeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatModeCompanion *shared __attribute__((swift_name("shared")));
- (SharedChatMode *)fromType:(NSString * _Nullable)type __attribute__((swift_name("from(type:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatRoomStatus")))
@interface SharedChatRoomStatus : SharedKotlinEnum<SharedChatRoomStatus *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedChatRoomStatusCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedChatRoomStatus *waitForAccept __attribute__((swift_name("waitForAccept")));
@property (class, readonly) SharedChatRoomStatus *waitForReply __attribute__((swift_name("waitForReply")));
@property (class, readonly) SharedChatRoomStatus *otherAgentChat __attribute__((swift_name("otherAgentChat")));
@property (class, readonly) SharedChatRoomStatus *missed __attribute__((swift_name("missed")));
@property (class, readonly) SharedChatRoomStatus *expired __attribute__((swift_name("expired")));
@property (class, readonly) SharedChatRoomStatus *afterBusinessHour __attribute__((swift_name("afterBusinessHour")));
@property (class, readonly) SharedChatRoomStatus *assigned __attribute__((swift_name("assigned")));
@property (class, readonly) SharedChatRoomStatus *block __attribute__((swift_name("block")));
@property (class, readonly) SharedChatRoomStatus *spam __attribute__((swift_name("spam")));
@property (class, readonly) SharedChatRoomStatus *done __attribute__((swift_name("done")));
@property (class, readonly) SharedChatRoomStatus *leave __attribute__((swift_name("leave")));
+ (SharedKotlinArray<SharedChatRoomStatus *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *colorBG __attribute__((swift_name("colorBG")));
@property (readonly) NSString *colorText __attribute__((swift_name("colorText")));
@property (readonly) NSString *nameEN __attribute__((swift_name("nameEN")));
@property (readonly) NSString *nameTH __attribute__((swift_name("nameTH")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatRoomStatus.Companion")))
@interface SharedChatRoomStatusCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatRoomStatusCompanion *shared __attribute__((swift_name("shared")));
- (SharedChatRoomStatus * _Nullable)fromChat:(SharedChatMessageEntityGetChatListDataEntity * _Nullable)chat __attribute__((swift_name("from(chat:)")));
- (SharedChatRoomStatus * _Nullable)fromChat_:(SharedGetFollowerChatEntityChatEntity * _Nullable)chat __attribute__((swift_name("from(chat_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatRoomType")))
@interface SharedChatRoomType : SharedKotlinEnum<SharedChatRoomType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedChatRoomTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedChatRoomType *inbox __attribute__((swift_name("inbox")));
@property (class, readonly) SharedChatRoomType *all __attribute__((swift_name("all")));
@property (class, readonly) SharedChatRoomType *missed __attribute__((swift_name("missed")));
@property (class, readonly) SharedChatRoomType *businessHour __attribute__((swift_name("businessHour")));
@property (class, readonly) SharedChatRoomType *expired __attribute__((swift_name("expired")));
@property (class, readonly) SharedChatRoomType *done __attribute__((swift_name("done")));
@property (class, readonly) SharedChatRoomType *following __attribute__((swift_name("following")));
@property (class, readonly) SharedChatRoomType *block __attribute__((swift_name("block")));
@property (class, readonly) SharedChatRoomType *group __attribute__((swift_name("group")));
@property (class, readonly) SharedChatRoomType *spam __attribute__((swift_name("spam")));
+ (SharedKotlinArray<SharedChatRoomType *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *nameEN __attribute__((swift_name("nameEN")));
@property (readonly) NSString *nameTH __attribute__((swift_name("nameTH")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatRoomType.Companion")))
@interface SharedChatRoomTypeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatRoomTypeCompanion *shared __attribute__((swift_name("shared")));
- (SharedChatRoomType * _Nullable)fromChat:(SharedGetFollowerChatEntityChatEntity * _Nullable)chat __attribute__((swift_name("from(chat:)")));
- (SharedChatRoomType *)fromType:(NSString * _Nullable)type __attribute__((swift_name("from(type:)")));
- (NSArray<SharedChatRoomType *> *)toList __attribute__((swift_name("toList()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatStatus")))
@interface SharedChatStatus : SharedKotlinEnum<SharedChatStatus *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedChatStatusCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedChatStatus *available __attribute__((swift_name("available")));
@property (class, readonly) SharedChatStatus *away __attribute__((swift_name("away")));
+ (SharedKotlinArray<SharedChatStatus *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t statusType __attribute__((swift_name("statusType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatStatus.Companion")))
@interface SharedChatStatusCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatStatusCompanion *shared __attribute__((swift_name("shared")));
- (SharedChatStatus *)fromStatus:(SharedInt * _Nullable)status __attribute__((swift_name("from(status:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactFieldType")))
@interface SharedContactFieldType : SharedKotlinEnum<SharedContactFieldType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedContactFieldTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedContactFieldType *text __attribute__((swift_name("text")));
@property (class, readonly) SharedContactFieldType *number __attribute__((swift_name("number")));
@property (class, readonly) SharedContactFieldType *date __attribute__((swift_name("date")));
@property (class, readonly) SharedContactFieldType *dateTime __attribute__((swift_name("dateTime")));
@property (class, readonly) SharedContactFieldType *phoneNumber __attribute__((swift_name("phoneNumber")));
@property (class, readonly) SharedContactFieldType *email __attribute__((swift_name("email")));
@property (class, readonly) SharedContactFieldType *url __attribute__((swift_name("url")));
+ (SharedKotlinArray<SharedContactFieldType *> *)values __attribute__((swift_name("values()")));
@property (readonly) BOOL isList __attribute__((swift_name("isList")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactFieldType.Companion")))
@interface SharedContactFieldTypeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactFieldTypeCompanion *shared __attribute__((swift_name("shared")));
- (SharedContactFieldType *)fromType:(NSString * _Nullable)type __attribute__((swift_name("from(type:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactsSummaryType")))
@interface SharedContactsSummaryType : SharedKotlinEnum<SharedContactsSummaryType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedContactsSummaryTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedContactsSummaryType *totalContact __attribute__((swift_name("totalContact")));
@property (class, readonly) SharedContactsSummaryType *theNewContact __attribute__((swift_name("theNewContact")));
@property (class, readonly) SharedContactsSummaryType *blockExpiredContact __attribute__((swift_name("blockExpiredContact")));
+ (SharedKotlinArray<SharedContactsSummaryType *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *color __attribute__((swift_name("color")));
@property (readonly) int32_t type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactsSummaryType.Companion")))
@interface SharedContactsSummaryTypeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactsSummaryTypeCompanion *shared __attribute__((swift_name("shared")));
- (SharedContactsSummaryType *)fromType:(SharedInt * _Nullable)type __attribute__((swift_name("from(type:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CustomerStatus")))
@interface SharedCustomerStatus : SharedKotlinEnum<SharedCustomerStatus *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedCustomerStatusCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedCustomerStatus *unverified __attribute__((swift_name("unverified")));
@property (class, readonly) SharedCustomerStatus *verified __attribute__((swift_name("verified")));
@property (class, readonly) SharedCustomerStatus *logout __attribute__((swift_name("logout")));
+ (SharedKotlinArray<SharedCustomerStatus *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *displayText __attribute__((swift_name("displayText")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CustomerStatus.Companion")))
@interface SharedCustomerStatusCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCustomerStatusCompanion *shared __attribute__((swift_name("shared")));
- (SharedCustomerStatus *)fromId:(NSString * _Nullable)id __attribute__((swift_name("from(id:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CustomerType")))
@interface SharedCustomerType : SharedKotlinEnum<SharedCustomerType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedCustomerTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedCustomerType *none __attribute__((swift_name("none")));
@property (class, readonly) SharedCustomerType *vip __attribute__((swift_name("vip")));
+ (SharedKotlinArray<SharedCustomerType *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *displayText __attribute__((swift_name("displayText")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CustomerType.Companion")))
@interface SharedCustomerTypeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCustomerTypeCompanion *shared __attribute__((swift_name("shared")));
- (SharedCustomerType *)fromId:(NSString * _Nullable)id __attribute__((swift_name("from(id:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DayName")))
@interface SharedDayName : SharedKotlinEnum<SharedDayName *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedDayNameCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedDayName *sunday __attribute__((swift_name("sunday")));
@property (class, readonly) SharedDayName *monday __attribute__((swift_name("monday")));
@property (class, readonly) SharedDayName *tuesday __attribute__((swift_name("tuesday")));
@property (class, readonly) SharedDayName *wednesday __attribute__((swift_name("wednesday")));
@property (class, readonly) SharedDayName *thursday __attribute__((swift_name("thursday")));
@property (class, readonly) SharedDayName *friday __attribute__((swift_name("friday")));
@property (class, readonly) SharedDayName *saturday __attribute__((swift_name("saturday")));
+ (SharedKotlinArray<SharedDayName *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *dayNameEN __attribute__((swift_name("dayNameEN")));
@property (readonly) NSString *dayNameTH __attribute__((swift_name("dayNameTH")));
@property (readonly) NSString *dayNumber __attribute__((swift_name("dayNumber")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DayName.Companion")))
@interface SharedDayNameCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDayNameCompanion *shared __attribute__((swift_name("shared")));
- (SharedDayName *)fromDayNumber:(NSString * _Nullable)dayNumber __attribute__((swift_name("from(dayNumber:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FieldPermissionType")))
@interface SharedFieldPermissionType : SharedKotlinEnum<SharedFieldPermissionType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedFieldPermissionTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedFieldPermissionType *readWrite __attribute__((swift_name("readWrite")));
@property (class, readonly) SharedFieldPermissionType *read __attribute__((swift_name("read")));
@property (class, readonly) SharedFieldPermissionType *hide __attribute__((swift_name("hide")));
+ (SharedKotlinArray<SharedFieldPermissionType *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t actionType __attribute__((swift_name("actionType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FieldPermissionType.Companion")))
@interface SharedFieldPermissionTypeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFieldPermissionTypeCompanion *shared __attribute__((swift_name("shared")));
- (SharedFieldPermissionType *)fromActionType:(SharedInt * _Nullable)actionType __attribute__((swift_name("from(actionType:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileExtension")))
@interface SharedFileExtension : SharedKotlinEnum<SharedFileExtension *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedFileExtensionCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedFileExtension *jpg __attribute__((swift_name("jpg")));
@property (class, readonly) SharedFileExtension *jpeg __attribute__((swift_name("jpeg")));
@property (class, readonly) SharedFileExtension *gif __attribute__((swift_name("gif")));
@property (class, readonly) SharedFileExtension *png __attribute__((swift_name("png")));
@property (class, readonly) SharedFileExtension *svg __attribute__((swift_name("svg")));
@property (class, readonly) SharedFileExtension *avi __attribute__((swift_name("avi")));
@property (class, readonly) SharedFileExtension *mov __attribute__((swift_name("mov")));
@property (class, readonly) SharedFileExtension *mp4 __attribute__((swift_name("mp4")));
@property (class, readonly) SharedFileExtension *mp3 __attribute__((swift_name("mp3")));
@property (class, readonly) SharedFileExtension *mid __attribute__((swift_name("mid")));
@property (class, readonly) SharedFileExtension *pdf __attribute__((swift_name("pdf")));
@property (class, readonly) SharedFileExtension *doc __attribute__((swift_name("doc")));
@property (class, readonly) SharedFileExtension *docx __attribute__((swift_name("docx")));
@property (class, readonly) SharedFileExtension *xls __attribute__((swift_name("xls")));
@property (class, readonly) SharedFileExtension *xlsx __attribute__((swift_name("xlsx")));
@property (class, readonly) SharedFileExtension *ppt __attribute__((swift_name("ppt")));
@property (class, readonly) SharedFileExtension *pptx __attribute__((swift_name("pptx")));
@property (class, readonly) SharedFileExtension *csv __attribute__((swift_name("csv")));
@property (class, readonly) SharedFileExtension *ai __attribute__((swift_name("ai")));
+ (SharedKotlinArray<SharedFileExtension *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *extension __attribute__((swift_name("extension")));
@property (readonly) NSString *mimeType __attribute__((swift_name("mimeType")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileExtension.Companion")))
@interface SharedFileExtensionCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFileExtensionCompanion *shared __attribute__((swift_name("shared")));
- (SharedFileExtension * _Nullable)fromExtension:(NSString *)extension __attribute__((swift_name("from(extension:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileType")))
@interface SharedFileType : SharedKotlinEnum<SharedFileType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedFileTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedFileType *image __attribute__((swift_name("image")));
@property (class, readonly) SharedFileType *video __attribute__((swift_name("video")));
@property (class, readonly) SharedFileType *file __attribute__((swift_name("file")));
+ (SharedKotlinArray<SharedFileType *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileType.Companion")))
@interface SharedFileTypeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFileTypeCompanion *shared __attribute__((swift_name("shared")));
- (SharedFileType *)fromContentType:(NSString * _Nullable)contentType __attribute__((swift_name("from(contentType:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FilterFile")))
@interface SharedFilterFile : SharedKotlinEnum<SharedFilterFile *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedFilterFileCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedFilterFile *newest __attribute__((swift_name("newest")));
@property (class, readonly) SharedFilterFile *oldest __attribute__((swift_name("oldest")));
@property (class, readonly) SharedFilterFile *atoz __attribute__((swift_name("atoz")));
@property (class, readonly) SharedFilterFile *ztoa __attribute__((swift_name("ztoa")));
+ (SharedKotlinArray<SharedFilterFile *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *nameEN __attribute__((swift_name("nameEN")));
@property (readonly) NSString *nameTH __attribute__((swift_name("nameTH")));
@property (readonly) SharedSortType *sortType __attribute__((swift_name("sortType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FilterFile.Companion")))
@interface SharedFilterFileCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFilterFileCompanion *shared __attribute__((swift_name("shared")));
- (SharedKotlinArray<SharedFilterFile *> *)getList __attribute__((swift_name("getList()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LiveChatType")))
@interface SharedLiveChatType : SharedKotlinEnum<SharedLiveChatType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedLiveChatTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedLiveChatType *inbox __attribute__((swift_name("inbox")));
@property (class, readonly) SharedLiveChatType *all __attribute__((swift_name("all")));
@property (class, readonly) SharedLiveChatType *missed __attribute__((swift_name("missed")));
@property (class, readonly) SharedLiveChatType *businessHour __attribute__((swift_name("businessHour")));
@property (class, readonly) SharedLiveChatType *expired __attribute__((swift_name("expired")));
@property (class, readonly) SharedLiveChatType *done __attribute__((swift_name("done")));
@property (class, readonly) SharedLiveChatType *following __attribute__((swift_name("following")));
@property (class, readonly) SharedLiveChatType *block __attribute__((swift_name("block")));
@property (class, readonly) SharedLiveChatType *group __attribute__((swift_name("group")));
@property (class, readonly) SharedLiveChatType *spam __attribute__((swift_name("spam")));
+ (SharedKotlinArray<SharedLiveChatType *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *nameEN __attribute__((swift_name("nameEN")));
@property (readonly) NSString *nameTH __attribute__((swift_name("nameTH")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LiveChatType.Companion")))
@interface SharedLiveChatTypeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedLiveChatTypeCompanion *shared __attribute__((swift_name("shared")));
- (SharedLiveChatType *)fromType:(NSString * _Nullable)type __attribute__((swift_name("from(type:)")));
- (NSArray<SharedLiveChatType *> *)toList __attribute__((swift_name("toList()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MenuKey")))
@interface SharedMenuKey : SharedKotlinEnum<SharedMenuKey *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedMenuKeyCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedMenuKey *dashboard __attribute__((swift_name("dashboard")));
@property (class, readonly) SharedMenuKey *livechat __attribute__((swift_name("livechat")));
@property (class, readonly) SharedMenuKey *contact __attribute__((swift_name("contact")));
@property (class, readonly) SharedMenuKey *setting __attribute__((swift_name("setting")));
+ (SharedKotlinArray<SharedMenuKey *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *menuKey __attribute__((swift_name("menuKey")));
@property (readonly) NSString *menuNameEN __attribute__((swift_name("menuNameEN")));
@property (readonly) NSString *menuNameTH __attribute__((swift_name("menuNameTH")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MenuKey.Companion")))
@interface SharedMenuKeyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMenuKeyCompanion *shared __attribute__((swift_name("shared")));
- (SharedMenuKey *)fromMenuKey:(NSString * _Nullable)menuKey __attribute__((swift_name("from(menuKey:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MessageType")))
@interface SharedMessageType : SharedKotlinEnum<SharedMessageType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedMessageTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedMessageType *text __attribute__((swift_name("text")));
@property (class, readonly) SharedMessageType *sticker __attribute__((swift_name("sticker")));
@property (class, readonly) SharedMessageType *image __attribute__((swift_name("image")));
@property (class, readonly) SharedMessageType *flex __attribute__((swift_name("flex")));
@property (class, readonly) SharedMessageType *video __attribute__((swift_name("video")));
@property (class, readonly) SharedMessageType *audio __attribute__((swift_name("audio")));
@property (class, readonly) SharedMessageType *file __attribute__((swift_name("file")));
@property (class, readonly) SharedMessageType *location __attribute__((swift_name("location")));
@property (class, readonly) SharedMessageType *imageMap __attribute__((swift_name("imageMap")));
+ (SharedKotlinArray<SharedMessageType *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MessageType.Companion")))
@interface SharedMessageTypeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMessageTypeCompanion *shared __attribute__((swift_name("shared")));
- (SharedMessageType *)fromType:(NSString * _Nullable)type __attribute__((swift_name("from(type:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OwnerChatStatus")))
@interface SharedOwnerChatStatus : SharedKotlinEnum<SharedOwnerChatStatus *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedOwnerChatStatusCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedOwnerChatStatus *ownChat __attribute__((swift_name("ownChat")));
@property (class, readonly) SharedOwnerChatStatus *otherUserChat __attribute__((swift_name("otherUserChat")));
+ (SharedKotlinArray<SharedOwnerChatStatus *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *status __attribute__((swift_name("status")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OwnerChatStatus.Companion")))
@interface SharedOwnerChatStatusCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedOwnerChatStatusCompanion *shared __attribute__((swift_name("shared")));
- (SharedOwnerChatStatus * _Nullable)fromMyUserId:(NSString *)myUserId userId:(NSString * _Nullable)userId __attribute__((swift_name("from(myUserId:userId:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PercentExpiredMissedType")))
@interface SharedPercentExpiredMissedType : SharedKotlinEnum<SharedPercentExpiredMissedType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedPercentExpiredMissedTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedPercentExpiredMissedType *equals __attribute__((swift_name("equals")));
@property (class, readonly) SharedPercentExpiredMissedType *positive __attribute__((swift_name("positive")));
@property (class, readonly) SharedPercentExpiredMissedType *negative __attribute__((swift_name("negative")));
+ (SharedKotlinArray<SharedPercentExpiredMissedType *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *iconBase64 __attribute__((swift_name("iconBase64")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PercentExpiredMissedType.Companion")))
@interface SharedPercentExpiredMissedTypeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPercentExpiredMissedTypeCompanion *shared __attribute__((swift_name("shared")));
- (SharedPercentExpiredMissedType *)fromType:(NSString * _Nullable)type __attribute__((swift_name("from(type:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PercentType")))
@interface SharedPercentType : SharedKotlinEnum<SharedPercentType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedPercentTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedPercentType *equals __attribute__((swift_name("equals")));
@property (class, readonly) SharedPercentType *positive __attribute__((swift_name("positive")));
@property (class, readonly) SharedPercentType *negative __attribute__((swift_name("negative")));
+ (SharedKotlinArray<SharedPercentType *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *iconBase64 __attribute__((swift_name("iconBase64")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PercentType.Companion")))
@interface SharedPercentTypeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPercentTypeCompanion *shared __attribute__((swift_name("shared")));
- (SharedPercentType *)fromType:(NSString * _Nullable)type __attribute__((swift_name("from(type:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PerformanceType")))
@interface SharedPerformanceType : SharedKotlinEnum<SharedPerformanceType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedPerformanceTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedPerformanceType *totalchat __attribute__((swift_name("totalchat")));
@property (class, readonly) SharedPerformanceType *incomingchat __attribute__((swift_name("incomingchat")));
@property (class, readonly) SharedPerformanceType *outgoingchat __attribute__((swift_name("outgoingchat")));
@property (class, readonly) SharedPerformanceType *missedchat __attribute__((swift_name("missedchat")));
@property (class, readonly) SharedPerformanceType *expiredchat __attribute__((swift_name("expiredchat")));
@property (class, readonly) SharedPerformanceType *botchat __attribute__((swift_name("botchat")));
+ (SharedKotlinArray<SharedPerformanceType *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@property (readonly) NSString *typeColor __attribute__((swift_name("typeColor")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PerformanceType.Companion")))
@interface SharedPerformanceTypeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPerformanceTypeCompanion *shared __attribute__((swift_name("shared")));
- (SharedPerformanceType *)fromType:(NSString * _Nullable)type __attribute__((swift_name("from(type:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ResponseStatusType")))
@interface SharedResponseStatusType : SharedKotlinEnum<SharedResponseStatusType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedResponseStatusTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedResponseStatusType *success __attribute__((swift_name("success")));
@property (class, readonly) SharedResponseStatusType *apiError __attribute__((swift_name("apiError")));
@property (class, readonly) SharedResponseStatusType *internalError __attribute__((swift_name("internalError")));
@property (class, readonly) SharedResponseStatusType *timeOut __attribute__((swift_name("timeOut")));
@property (class, readonly) SharedResponseStatusType *forceLogout __attribute__((swift_name("forceLogout")));
@property (class, readonly) SharedResponseStatusType *forceUpdate __attribute__((swift_name("forceUpdate")));
+ (SharedKotlinArray<SharedResponseStatusType *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *statusCode __attribute__((swift_name("statusCode")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ResponseStatusType.Companion")))
@interface SharedResponseStatusTypeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedResponseStatusTypeCompanion *shared __attribute__((swift_name("shared")));
- (SharedResponseStatusType *)fromStatus:(NSString * _Nullable)status __attribute__((swift_name("from(status:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SortField")))
@interface SharedSortField : SharedKotlinEnum<SharedSortField *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedSortFieldCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedSortField *date __attribute__((swift_name("date")));
@property (class, readonly) SharedSortField *name __attribute__((swift_name("name")));
@property (class, readonly) SharedSortField *text __attribute__((swift_name("text")));
+ (SharedKotlinArray<SharedSortField *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *key __attribute__((swift_name("key")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SortField.Companion")))
@interface SharedSortFieldCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSortFieldCompanion *shared __attribute__((swift_name("shared")));
- (SharedSortField *)fromSortType:(NSString * _Nullable)sortType __attribute__((swift_name("from(sortType:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SortType")))
@interface SharedSortType : SharedKotlinEnum<SharedSortType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedSortTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedSortType *desc __attribute__((swift_name("desc")));
@property (class, readonly) SharedSortType *asc __attribute__((swift_name("asc")));
+ (SharedKotlinArray<SharedSortType *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *sortType __attribute__((swift_name("sortType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SortType.Companion")))
@interface SharedSortTypeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSortTypeCompanion *shared __attribute__((swift_name("shared")));
- (SharedSortType *)fromSorttype:(NSString * _Nullable)sorttype __attribute__((swift_name("from(sorttype:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StickerType")))
@interface SharedStickerType : SharedKotlinEnum<SharedStickerType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedStickerTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedStickerType *static_ __attribute__((swift_name("static_")));
@property (class, readonly) SharedStickerType *animation __attribute__((swift_name("animation")));
+ (SharedKotlinArray<SharedStickerType *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *stickerType __attribute__((swift_name("stickerType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StickerType.Companion")))
@interface SharedStickerTypeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedStickerTypeCompanion *shared __attribute__((swift_name("shared")));
- (SharedStickerType *)fromStickerType:(NSString * _Nullable)stickerType __attribute__((swift_name("from(stickerType:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SocketChatEventImpl")))
@interface SharedSocketChatEventImpl : SharedBase <SharedISocketChatEvent>
- (instancetype)initWithSocket:(SharedSocketClientPlatform *)socket startChatSocketMapper:(SharedStartChatSocketMapper *)startChatSocketMapper triggerExtendChatTimeSocketMapper:(SharedTriggerExtendChatTimeSocketMapper *)triggerExtendChatTimeSocketMapper getChatMessageResultMapper:(SharedGetChatMessageResultMapper *)getChatMessageResultMapper getFollowerChatResultMapper:(SharedGetFollowerChatResultMapper *)getFollowerChatResultMapper __attribute__((swift_name("init(socket:startChatSocketMapper:triggerExtendChatTimeSocketMapper:getChatMessageResultMapper:getFollowerChatResultMapper:)"))) __attribute__((objc_designated_initializer));
- (void)addAgentModel:(SharedAgentSocket *)model __attribute__((swift_name("addAgent(model:)")));
- (void)joinChannelsChannelIds:(NSArray<NSString *> *)channelIds __attribute__((swift_name("joinChannels(channelIds:)")));
- (void)joinChatFollowerId:(NSString *)followerId __attribute__((swift_name("joinChat(followerId:)")));
- (void)joinOACompanyId:(NSString *)companyId __attribute__((swift_name("joinOA(companyId:)")));
- (void)leaveChannelsChannelIds:(NSArray<NSString *> *)channelIds __attribute__((swift_name("leaveChannels(channelIds:)")));
- (void)leaveChatFollowerId:(NSString *)followerId __attribute__((swift_name("leaveChat(followerId:)")));
- (void)leaveRoomCompanyId:(NSString *)companyId __attribute__((swift_name("leaveRoom(companyId:)")));
- (void)onAddChatCallback:(void (^)(SharedGetChatMessageResultChatMessageList *, NSString *))callback __attribute__((swift_name("onAddChat(callback:)")));
- (void)onFetchChatsCallback:(void (^)(SharedInt *))callback __attribute__((swift_name("onFetchChats(callback:)")));
- (void)onFetchFollowersUserId:(NSString *)userId callback:(void (^)(SharedGetFollowerChatResultChatRoomList *))callback __attribute__((swift_name("onFetchFollowers(userId:callback:)")));
- (void)onFetchFollowersCloseChatCallback:(void (^)(SharedGetFollowerChatResultChatRoomList *))callback __attribute__((swift_name("onFetchFollowersCloseChat(callback:)")));
- (void)onFetchLogoutCallback:(void (^)(void))callback __attribute__((swift_name("onFetchLogout(callback:)")));
- (void)onFetchStartChatCallback:(void (^)(SharedStartChatSocket *))callback __attribute__((swift_name("onFetchStartChat(callback:)")));
- (void)onTriggerExtendChatTimeCallback:(void (^)(SharedTriggerExtendChatTimeSocket *))callback __attribute__((swift_name("onTriggerExtendChatTime(callback:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SocketClientEventImpl")))
@interface SharedSocketClientEventImpl : SharedBase <SharedISocketClientEvent>
- (instancetype)initWithSocket:(SharedSocketClientPlatform *)socket __attribute__((swift_name("init(socket:)"))) __attribute__((objc_designated_initializer));
- (void)connect __attribute__((swift_name("connect()")));
- (void)disconnect __attribute__((swift_name("disconnect()")));
- (void)doInitOption:(SharedSocketOption *)option __attribute__((swift_name("doInit(option:)")));
- (BOOL)isConnected __attribute__((swift_name("isConnected()")));
- (void)offConnectErrorEvent __attribute__((swift_name("offConnectErrorEvent()")));
- (void)offConnectEvent __attribute__((swift_name("offConnectEvent()")));
- (void)offDisconnectEvent __attribute__((swift_name("offDisconnectEvent()")));
- (void)onConnectErrorEventCallback:(void (^)(void))callback __attribute__((swift_name("onConnectErrorEvent(callback:)")));
- (void)onConnectEventCallback:(void (^)(void))callback __attribute__((swift_name("onConnectEvent(callback:)")));
- (void)onDisconnectEventCallback:(void (^)(void))callback __attribute__((swift_name("onDisconnectEvent(callback:)")));
@end

__attribute__((swift_name("KtorClient")))
@interface SharedKtorClient : SharedBase
- (instancetype)initWithEngine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine __attribute__((swift_name("init(engine:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)checkResponseStatusResponse:(SharedKtor_client_coreHttpResponse *)response completionHandler:(void (^)(SharedNetworkResponse<id, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkResponseStatus(response:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)checkResponseStatusBodyResponse:(SharedKtor_client_coreHttpResponse *)response completionHandler:(void (^)(SharedNetworkResponse<id, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkResponseStatusBody(response:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteEndpoint:(NSString *)endpoint config:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(id _Nullable)body completionHandler:(void (^)(SharedNetworkResponse<id, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("delete(endpoint:config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getEndpoint:(NSString *)endpoint config:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config completionHandler:(void (^)(SharedNetworkResponse<id, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("get(endpoint:config:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)patchEndpoint:(NSString *)endpoint config:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(id _Nullable)body completionHandler:(void (^)(SharedNetworkResponse<id, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("patch(endpoint:config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)postEndpoint:(NSString *)endpoint config:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(id _Nullable)body completionHandler:(void (^)(SharedNetworkResponse<id, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("post(endpoint:config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)postNoBodyEndpoint:(NSString *)endpoint config:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config completionHandler:(void (^)(SharedNetworkResponse<id, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("postNoBody(endpoint:config:completionHandler:)")));
@property (readonly) SharedKtor_client_coreHttpClient *client __attribute__((swift_name("client")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KtorEngine")))
@interface SharedKtorEngine : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (readonly) id<SharedKtor_client_coreHttpClientEngine> _Nullable engine __attribute__((swift_name("engine")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactService")))
@interface SharedContactService : SharedKtorClient
- (instancetype)initWithEngine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine __attribute__((swift_name("init(engine:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getContactListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedContactBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedContactEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getContactList(config:body:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardService")))
@interface SharedDashboardService : SharedKtorClient
- (instancetype)initWithEngine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine __attribute__((swift_name("init(engine:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getDashboardConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedDashboardBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedDashboardEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getDashboard(config:body:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LiveChatService")))
@interface SharedLiveChatService : SharedKtorClient
- (instancetype)initWithEngine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine __attribute__((swift_name("init(engine:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)acceptChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config acceptChatBody:(SharedAcceptChatBody *)acceptChatBody completionHandler:(void (^)(SharedNetworkResponse<SharedAcceptChatEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("acceptChat(config:acceptChatBody:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)addTagConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedUpdateTagBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBaseResponseStatusEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("addTag(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)assignToAgentConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedAssignAgentBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBaseResponseStatusEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("assignToAgent(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)assignToGroupConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedAssignGroupBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBaseResponseStatusEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("assignToGroup(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)chatSearchMessageConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config text:(NSString *)text skip:(int32_t)skip limit:(int32_t)limit channel:(NSArray<NSString *> *)channel completionHandler:(void (^)(SharedNetworkResponse<SharedSearchMessageEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("chatSearchMessage(config:text:skip:limit:channel:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)chatSearchNameConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config text:(NSString *)text skip:(int32_t)skip limit:(int32_t)limit channel:(NSArray<NSString *> *)channel completionHandler:(void (^)(SharedNetworkResponse<SharedSearchNameEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("chatSearchName(config:text:skip:limit:channel:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)closeChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config acceptChatBody:(SharedCloseChatBody *)acceptChatBody completionHandler:(void (^)(SharedNetworkResponse<SharedCloseChatEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("closeChat(config:acceptChatBody:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)contactCreateLiveChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedContactCreateLiveChatBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedContractCreateLiveChatEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("contactCreateLiveChat(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createNoteConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedCreateTextBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBaseResponseStatusEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createNote(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createTagConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedCreateTextBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedStringEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createTag(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteNoteConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedDeleteNoteBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBaseResponseStatusEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteNote(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteTagConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedUpdateTagBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBaseResponseStatusEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteTag(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)extendLiveChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedExtendChatBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedAcceptChatEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("extendLiveChat(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAgentFilterListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config completionHandler:(void (^)(SharedNetworkResponse<SharedAgentFilterEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAgentFilterList(config:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getChatMessageConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config followerId:(NSString *)followerId startID:(NSString *)startID endID:(NSString *)endID fromID:(NSString *)fromID toID:(NSString *)toID limit:(int32_t)limit hide:(NSString *)hide completionHandler:(void (^)(SharedNetworkResponse<SharedChatMessageEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getChatMessage(config:followerId:startID:endID:fromID:toID:limit:hide:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFileFolderListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config completionHandler:(void (^)(SharedNetworkResponse<SharedFileFolderListEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFileFolderList(config:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFileListByFolderIdConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config folderId:(NSString *)folderId sortType:(SharedSortType *)sortType sortField:(SharedSortField *)sortField completionHandler:(void (^)(SharedNetworkResponse<SharedFileListEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFileListByFolderId(config:folderId:sortType:sortField:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFollowerChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config skip:(int32_t)skip limit:(int32_t)limit sortType:(SharedSortType *)sortType chatType:(SharedChatRoomType *)chatType assigneeId:(NSString *)assigneeId channelType:(NSString * _Nullable)channelType groupId:(NSString * _Nullable)groupId completionHandler:(void (^)(SharedNetworkResponse<SharedGetFollowerChatEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFollowerChat(config:skip:limit:sortType:chatType:assigneeId:channelType:groupId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getGroupAssignListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config completionHandler:(void (^)(SharedNetworkResponse<SharedGroupAssignEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getGroupAssignList(config:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getGroupFilterListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config completionHandler:(void (^)(SharedNetworkResponse<SharedGroupFilterEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getGroupFilterList(config:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getInformationConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config followerId:(NSString *)followerId completionHandler:(void (^)(SharedNetworkResponse<SharedContactInformationEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getInformation(config:followerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getMasterDataChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config completionHandler:(void (^)(SharedNetworkResponse<SharedMasterDataChatEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getMasterDataChat(config:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getNotesConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config followerId:(NSString *)followerId completionHandler:(void (^)(SharedNetworkResponse<SharedContactInformationEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getNotes(config:followerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getNotificationCountConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config completionHandler:(void (^)(SharedNetworkResponse<SharedNotificationCountEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getNotificationCount(config:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getReplayTemplateListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config completionHandler:(void (^)(SharedNetworkResponse<SharedReplyTemplateEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getReplayTemplateList(config:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getReplyMessageConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config replyMessageId:(NSString *)replyMessageId completionHandler:(void (^)(SharedNetworkResponse<SharedReplyMessageEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getReplyMessage(config:replyMessageId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getSearchFollowerInfoConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedGetSearchFollowerBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedChatLiveChatEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getSearchFollowerInfo(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getStickerListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config completionHandler:(void (^)(SharedNetworkResponse<SharedStickerEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getStickerList(config:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getSwitchModeConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config liveChatId:(NSString *)liveChatId completionHandler:(void (^)(SharedNetworkResponse<SharedSwitchModeEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getSwitchMode(config:liveChatId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTagInfoConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedGetTagBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedSearchTagEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTagInfo(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTagListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config completionHandler:(void (^)(SharedNetworkResponse<SharedTagListEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTagList(config:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTagListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config sortType:(SharedSortType *)sortType sortField:(SharedSortField *)sortField completionHandler:(void (^)(SharedNetworkResponse<SharedTagListEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTagList(config:sortType:sortField:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)searchMessageInChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config skip:(int32_t)skip limit:(int32_t)limit search:(NSString *)search followerId:(NSString *)followerId completionHandler:(void (^)(SharedNetworkResponse<SharedSearchMessageInChatEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("searchMessageInChat(config:skip:limit:search:followerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendFileFromLocalConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedFileUploadBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBaseResponseStatusEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendFileFromLocal(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendFileMessageConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedSendReplyFileMessageBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBaseResponseStatusEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendFileMessage(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendMessageConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedSendMessageToChatBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBaseResponseStatusEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendMessage(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendStickerConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedSendStickerBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBaseResponseStatusEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendSticker(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendTemplateReplyMessageConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedSendTemplateMessageToChatBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBaseResponseStatusEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendTemplateReplyMessage(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setAgentStatusConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedAgentStatusBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBaseResponseStatusEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setAgentStatus(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setChatFollowConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedFollowChatBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBaseResponseStatusEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setChatFollow(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setChatSpamConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedSpamChatBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBaseResponseStatusEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setChatSpam(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setDefaultAgentStatusConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedAgentStatusBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBaseResponseStatusEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setDefaultAgentStatus(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)takeChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config acceptChatBody:(SharedTakeChatBody *)acceptChatBody completionHandler:(void (^)(SharedNetworkResponse<SharedAcceptChatEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("takeChat(config:acceptChatBody:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateInformationListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedUpdateInformationListBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedContactInformationEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateInformationList(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateNickNameConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedUpdateNicknameBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBaseResponseStatusEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateNickName(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateNoteConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedUpdateNoteBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBaseResponseStatusEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateNote(config:body:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RegisterService")))
@interface SharedRegisterService : SharedKtorClient
- (instancetype)initWithEngine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine __attribute__((swift_name("init(engine:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)confirmNewPasswordConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedConfirmNewPasswordBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBaseResponseStatusEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("confirmNewPassword(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getOfficialAccountListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config completionHandler:(void (^)(SharedNetworkResponse<SharedOfficialAccountListEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getOfficialAccountList(config:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getUserMenuConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config completionHandler:(void (^)(SharedNetworkResponse<SharedUserRoleMenuEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getUserMenu(config:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)loginWithUserConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedLoginBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedLoginEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("loginWithUser(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)resendOTPConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config link:(NSString *)link completionHandler:(void (^)(SharedNetworkResponse<SharedSetNewPasswordEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("resendOTP(config:link:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)resetPasswordConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedResetPasswordBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedResetPasswordEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("resetPassword(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setNewPasswordConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config link:(NSString *)link completionHandler:(void (^)(SharedNetworkResponse<SharedSetNewPasswordEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setNewPassword(config:link:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)verifyOTPConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedVerifyOTPBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedVerifyOTPEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("verifyOTP(config:body:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingService")))
@interface SharedSettingService : SharedKtorClient
- (instancetype)initWithEngine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine __attribute__((swift_name("init(engine:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)changePasswordConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedChangePasswordBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedChangePasswordEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("changePassword(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)checkAppVersionUpdateConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config completionHandler:(void (^)(SharedNetworkResponse<SharedCheckAppVersionUpdateEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAppVersionUpdate(config:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)checkUserTokenConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config completionHandler:(void (^)(SharedNetworkResponse<SharedCheckUserTokenEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkUserToken(config:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getNotificationSettingConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config completionHandler:(void (^)(SharedNetworkResponse<SharedSettingNotificationEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getNotificationSetting(config:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getNotificationSettingAccountConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config completionHandler:(void (^)(SharedNetworkResponse<SharedSettingNotificationAccountEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getNotificationSettingAccount(config:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)livechatSettingsConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config completionHandler:(void (^)(SharedNetworkResponse<SharedLiveChatSettingEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("livechatSettings(config:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)logoutConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config completionHandler:(void (^)(SharedNetworkResponse<SharedBaseResponseStatusEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("logout(config:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)saveProfileConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config data:(SharedProfileBody *)data completionHandler:(void (^)(SharedNetworkResponse<SharedProfileEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("saveProfile(config:data:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setFirebaseTokenConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedFirebaseTokenBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBaseResponseStatusEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setFirebaseToken(config:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setNotificationSettingConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config body:(SharedSettingNotificationBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBaseResponseStatusEntity *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setNotificationSetting(config:body:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Routes")))
@interface SharedRoutes : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)routes __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedRoutes *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *ACCEPT_CHAT __attribute__((swift_name("ACCEPT_CHAT")));
@property (readonly) NSString *ADD_TAG __attribute__((swift_name("ADD_TAG")));
@property (readonly) NSString *AGENT_FILTER __attribute__((swift_name("AGENT_FILTER")));
@property (readonly) NSString *AGENT_SET_ALLSTATUS __attribute__((swift_name("AGENT_SET_ALLSTATUS")));
@property (readonly) NSString *AGENT_STATUS __attribute__((swift_name("AGENT_STATUS")));
@property (readonly) NSString *ASSIGN_AGENT __attribute__((swift_name("ASSIGN_AGENT")));
@property (readonly) NSString *CHANGE_PASSWORD __attribute__((swift_name("CHANGE_PASSWORD")));
@property (readonly) NSString *CHAT_FOLLOW __attribute__((swift_name("CHAT_FOLLOW")));
@property (readonly) NSString *CHAT_LIVECHAT __attribute__((swift_name("CHAT_LIVECHAT")));
@property (readonly) NSString *CHAT_SEARCH_MESSAGE __attribute__((swift_name("CHAT_SEARCH_MESSAGE")));
@property (readonly) NSString *CHAT_SEARCH_MESSAGE_IN_CHAT __attribute__((swift_name("CHAT_SEARCH_MESSAGE_IN_CHAT")));
@property (readonly) NSString *CHAT_SEARCH_NAME __attribute__((swift_name("CHAT_SEARCH_NAME")));
@property (readonly) NSString *CHAT_SPAM __attribute__((swift_name("CHAT_SPAM")));
@property (readonly) NSString *CHAT_SWITCHMODE __attribute__((swift_name("CHAT_SWITCHMODE")));
@property (readonly) NSString *CHECK_APP_VERSION __attribute__((swift_name("CHECK_APP_VERSION")));
@property (readonly) NSString *CHECK_USER_TOKEN __attribute__((swift_name("CHECK_USER_TOKEN")));
@property (readonly) NSString *CLOSE_CHAT __attribute__((swift_name("CLOSE_CHAT")));
@property (readonly) NSString *CONTACT __attribute__((swift_name("CONTACT")));
@property (readonly) NSString *CONTACT_FIELD __attribute__((swift_name("CONTACT_FIELD")));
@property (readonly) NSString *CONTACT_INFO __attribute__((swift_name("CONTACT_INFO")));
@property (readonly) NSString *CONTRACT_CREATE_LIVECHAT __attribute__((swift_name("CONTRACT_CREATE_LIVECHAT")));
@property (readonly) NSString *CREATE_NOTE __attribute__((swift_name("CREATE_NOTE")));
@property (readonly) NSString *CREATE_TAG __attribute__((swift_name("CREATE_TAG")));
@property (readonly) NSString *DASHBOARD __attribute__((swift_name("DASHBOARD")));
@property (readonly) NSString *DELETE_NOTE __attribute__((swift_name("DELETE_NOTE")));
@property (readonly) NSString *DELETE_TAG __attribute__((swift_name("DELETE_TAG")));
@property (readonly) NSString *EXTEND_TIME_CHAT __attribute__((swift_name("EXTEND_TIME_CHAT")));
@property (readonly) NSString *GET_CHAT_MESSAGE __attribute__((swift_name("GET_CHAT_MESSAGE")));
@property (readonly) NSString *GET_FILE_BY_FOLDER_ID __attribute__((swift_name("GET_FILE_BY_FOLDER_ID")));
@property (readonly) NSString *GET_FILE_FOLDER_LIST __attribute__((swift_name("GET_FILE_FOLDER_LIST")));
@property (readonly) NSString *GET_FOLLOWER_CHAT_LIST __attribute__((swift_name("GET_FOLLOWER_CHAT_LIST")));
@property (readonly) NSString *GET_NOTIFICATION_COUNT __attribute__((swift_name("GET_NOTIFICATION_COUNT")));
@property (readonly) NSString *GET_OFFICIAL_ACCOUNT_LIST __attribute__((swift_name("GET_OFFICIAL_ACCOUNT_LIST")));
@property (readonly) NSString *GET_REPLY_MESSAGE __attribute__((swift_name("GET_REPLY_MESSAGE")));
@property (readonly) NSString *GET_SETTING_LIVECHAT __attribute__((swift_name("GET_SETTING_LIVECHAT")));
@property (readonly) NSString *GET_SETTING_NOTIFICATION __attribute__((swift_name("GET_SETTING_NOTIFICATION")));
@property (readonly) NSString *GET_SETTING_NOTIFICATION_ACCOUNT __attribute__((swift_name("GET_SETTING_NOTIFICATION_ACCOUNT")));
@property (readonly) NSString *GET_USER_ROLE_MENU __attribute__((swift_name("GET_USER_ROLE_MENU")));
@property (readonly) NSString *GROUP_FILTER __attribute__((swift_name("GROUP_FILTER")));
@property (readonly) NSString *LOGIN __attribute__((swift_name("LOGIN")));
@property (readonly) NSString *LOGOUT __attribute__((swift_name("LOGOUT")));
@property (readonly) NSString *MASTERDATA_CHAT __attribute__((swift_name("MASTERDATA_CHAT")));
@property (readonly) NSString *NICKNAME __attribute__((swift_name("NICKNAME")));
@property (readonly) NSString *PROFILE __attribute__((swift_name("PROFILE")));
@property (readonly) NSString *REPLY_GROUP_TEMPLATE __attribute__((swift_name("REPLY_GROUP_TEMPLATE")));
@property (readonly) NSString *RESEND_OTP __attribute__((swift_name("RESEND_OTP")));
@property (readonly) NSString *RESET_PASSWORD __attribute__((swift_name("RESET_PASSWORD")));
@property (readonly) NSString *SEARCH_TAG __attribute__((swift_name("SEARCH_TAG")));
@property (readonly) NSString *SEND_MESSAGE __attribute__((swift_name("SEND_MESSAGE")));
@property (readonly) NSString *SEND_REPLY_FILE __attribute__((swift_name("SEND_REPLY_FILE")));
@property (readonly) NSString *SEND_REPLY_MESSAGE __attribute__((swift_name("SEND_REPLY_MESSAGE")));
@property (readonly) NSString *SEND_STICKER __attribute__((swift_name("SEND_STICKER")));
@property (readonly) NSString *SET_FIREBASE_TOKEN __attribute__((swift_name("SET_FIREBASE_TOKEN")));
@property (readonly) NSString *SET_NEW_PASSWORD __attribute__((swift_name("SET_NEW_PASSWORD")));
@property (readonly) NSString *SET_SETTING_NOTIFICATION __attribute__((swift_name("SET_SETTING_NOTIFICATION")));
@property (readonly) NSString *STICKER_LIST __attribute__((swift_name("STICKER_LIST")));
@property (readonly) NSString *STORAGE_INFO __attribute__((swift_name("STORAGE_INFO")));
@property (readonly) NSString *TAG_LIST __attribute__((swift_name("TAG_LIST")));
@property (readonly) NSString *TAKE_CHAT __attribute__((swift_name("TAKE_CHAT")));
@property (readonly) NSString *UPDATE_NOTE __attribute__((swift_name("UPDATE_NOTE")));
@property (readonly) NSString *UPLOAD_FILE_CHAT __attribute__((swift_name("UPLOAD_FILE_CHAT")));
@property (readonly) NSString *VERIFY_OTP __attribute__((swift_name("VERIFY_OTP")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageRealm")))
@interface SharedChatMessageRealm : SharedBase
- (instancetype)initWith_id:(NSString *)_id chat_type:(NSString *)chat_type channel_id:(NSString *)channel_id created_at:(int64_t)created_at created_by:(NSString *)created_by file_name:(NSString * _Nullable)file_name file_id:(NSString * _Nullable)file_id file_path:(NSString * _Nullable)file_path follower_id:(NSString * _Nullable)follower_id follower_name:(NSString * _Nullable)follower_name is_read:(BOOL)is_read is_replied:(SharedBoolean * _Nullable)is_replied livechat_id:(NSString *)livechat_id message_title:(NSString *)message_title messages_sent:(NSString *)messages_sent read_at:(int64_t)read_at response_time:(int64_t)response_time __attribute__((swift_name("init(_id:chat_type:channel_id:created_at:created_by:file_name:file_id:file_path:follower_id:follower_name:is_read:is_replied:livechat_id:message_title:messages_sent:read_at:response_time:)"))) __attribute__((objc_designated_initializer));
- (SharedChatMessageRealm *)doCopy_id:(NSString *)_id chat_type:(NSString *)chat_type channel_id:(NSString *)channel_id created_at:(int64_t)created_at created_by:(NSString *)created_by file_name:(NSString * _Nullable)file_name file_id:(NSString * _Nullable)file_id file_path:(NSString * _Nullable)file_path follower_id:(NSString * _Nullable)follower_id follower_name:(NSString * _Nullable)follower_name is_read:(BOOL)is_read is_replied:(SharedBoolean * _Nullable)is_replied livechat_id:(NSString *)livechat_id message_title:(NSString *)message_title messages_sent:(NSString *)messages_sent read_at:(int64_t)read_at response_time:(int64_t)response_time __attribute__((swift_name("doCopy(_id:chat_type:channel_id:created_at:created_by:file_name:file_id:file_path:follower_id:follower_name:is_read:is_replied:livechat_id:message_title:messages_sent:read_at:response_time:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *_id __attribute__((swift_name("_id")));
@property (readonly) NSString *channel_id __attribute__((swift_name("channel_id")));
@property (readonly) NSString *chat_type __attribute__((swift_name("chat_type")));
@property (readonly) int64_t created_at __attribute__((swift_name("created_at")));
@property (readonly) NSString *created_by __attribute__((swift_name("created_by")));
@property (readonly) NSString * _Nullable file_id __attribute__((swift_name("file_id")));
@property (readonly) NSString * _Nullable file_name __attribute__((swift_name("file_name")));
@property (readonly) NSString * _Nullable file_path __attribute__((swift_name("file_path")));
@property (readonly) NSString * _Nullable follower_id __attribute__((swift_name("follower_id")));
@property (readonly) NSString * _Nullable follower_name __attribute__((swift_name("follower_name")));
@property (readonly) BOOL is_read __attribute__((swift_name("is_read")));
@property (readonly) SharedBoolean * _Nullable is_replied __attribute__((swift_name("is_replied")));
@property (readonly) NSString *livechat_id __attribute__((swift_name("livechat_id")));
@property (readonly) NSString *message_title __attribute__((swift_name("message_title")));
@property (readonly) NSString *messages_sent __attribute__((swift_name("messages_sent")));
@property (readonly) int64_t read_at __attribute__((swift_name("read_at")));
@property (readonly) int64_t response_time __attribute__((swift_name("response_time")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MessageDisplayEntity")))
@interface SharedMessageDisplayEntity : SharedBase
- (instancetype)initWithMsgEn:(NSString * _Nullable)msgEn msgTh:(NSString * _Nullable)msgTh msgType:(NSString * _Nullable)msgType __attribute__((swift_name("init(msgEn:msgTh:msgType:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedMessageDisplayEntityCompanion *companion __attribute__((swift_name("companion")));
- (SharedMessageDisplayEntity *)doCopyMsgEn:(NSString * _Nullable)msgEn msgTh:(NSString * _Nullable)msgTh msgType:(NSString * _Nullable)msgType __attribute__((swift_name("doCopy(msgEn:msgTh:msgType:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable msgEn __attribute__((swift_name("msgEn")));
@property (readonly) NSString * _Nullable msgTh __attribute__((swift_name("msgTh")));
@property (readonly) NSString * _Nullable msgType __attribute__((swift_name("msgType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MessageDisplayEntity.Companion")))
@interface SharedMessageDisplayEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMessageDisplayEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MessageEntity")))
@interface SharedMessageEntity : SharedBase
- (instancetype)initWithEn:(NSString * _Nullable)en th:(NSString * _Nullable)th __attribute__((swift_name("init(en:th:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedMessageEntityCompanion *companion __attribute__((swift_name("companion")));
- (SharedMessageEntity *)doCopyEn:(NSString * _Nullable)en th:(NSString * _Nullable)th __attribute__((swift_name("doCopy(en:th:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable en __attribute__((swift_name("en")));
@property (readonly) NSString * _Nullable th __attribute__((swift_name("th")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MessageEntity.Companion")))
@interface SharedMessageEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMessageEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChangePasswordEntity")))
@interface SharedChangePasswordEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(NSString *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedChangePasswordEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChangePasswordEntity.Companion")))
@interface SharedChangePasswordEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChangePasswordEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckAppVersionUpdateEntity")))
@interface SharedCheckAppVersionUpdateEntity : SharedBase
- (instancetype)initWithResponse:(SharedCheckAppVersionUpdateEntityCheckAppVersionUpdateResponse *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedCheckAppVersionUpdateEntityCompanion *companion __attribute__((swift_name("companion")));
- (SharedCheckAppVersionUpdateEntity *)doCopyResponse:(SharedCheckAppVersionUpdateEntityCheckAppVersionUpdateResponse *)response __attribute__((swift_name("doCopy(response:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedCheckAppVersionUpdateEntityCheckAppVersionUpdateResponse *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckAppVersionUpdateEntity.CheckAppVersionUpdateResponse")))
@interface SharedCheckAppVersionUpdateEntityCheckAppVersionUpdateResponse : SharedBase
- (instancetype)initWithIs_update:(SharedBoolean * _Nullable)is_update is_force:(SharedBoolean * _Nullable)is_force url:(NSString * _Nullable)url current_version:(NSString * _Nullable)current_version min_version:(NSString * _Nullable)min_version __attribute__((swift_name("init(is_update:is_force:url:current_version:min_version:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedCheckAppVersionUpdateEntityCheckAppVersionUpdateResponseCompanion *companion __attribute__((swift_name("companion")));
- (SharedCheckAppVersionUpdateEntityCheckAppVersionUpdateResponse *)doCopyIs_update:(SharedBoolean * _Nullable)is_update is_force:(SharedBoolean * _Nullable)is_force url:(NSString * _Nullable)url current_version:(NSString * _Nullable)current_version min_version:(NSString * _Nullable)min_version __attribute__((swift_name("doCopy(is_update:is_force:url:current_version:min_version:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable current_version __attribute__((swift_name("current_version")));
@property (readonly) SharedBoolean * _Nullable is_force __attribute__((swift_name("is_force")));
@property (readonly) SharedBoolean * _Nullable is_update __attribute__((swift_name("is_update")));
@property (readonly) NSString * _Nullable min_version __attribute__((swift_name("min_version")));
@property (readonly) NSString * _Nullable url __attribute__((swift_name("url")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckAppVersionUpdateEntity.CheckAppVersionUpdateResponseCompanion")))
@interface SharedCheckAppVersionUpdateEntityCheckAppVersionUpdateResponseCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCheckAppVersionUpdateEntityCheckAppVersionUpdateResponseCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckAppVersionUpdateEntity.Companion")))
@interface SharedCheckAppVersionUpdateEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCheckAppVersionUpdateEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckUserTokenEntity")))
@interface SharedCheckUserTokenEntity : SharedBase
- (instancetype)initWithResponse:(SharedCheckUserTokenEntityUserTokenData *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedCheckUserTokenEntityCompanion *companion __attribute__((swift_name("companion")));
- (SharedCheckUserTokenEntity *)doCopyResponse:(SharedCheckUserTokenEntityUserTokenData *)response __attribute__((swift_name("doCopy(response:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedCheckUserTokenEntityUserTokenData *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckUserTokenEntity.Companion")))
@interface SharedCheckUserTokenEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCheckUserTokenEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckUserTokenEntity.UserTokenData")))
@interface SharedCheckUserTokenEntityUserTokenData : SharedBase
- (instancetype)initWithData:(SharedCheckUserTokenEntityUserTokenDataUserData * _Nullable)data __attribute__((swift_name("init(data:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedCheckUserTokenEntityUserTokenDataCompanion *companion __attribute__((swift_name("companion")));
- (SharedCheckUserTokenEntityUserTokenData *)doCopyData:(SharedCheckUserTokenEntityUserTokenDataUserData * _Nullable)data __attribute__((swift_name("doCopy(data:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedCheckUserTokenEntityUserTokenDataUserData * _Nullable data __attribute__((swift_name("data")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckUserTokenEntity.UserTokenDataCompanion")))
@interface SharedCheckUserTokenEntityUserTokenDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCheckUserTokenEntityUserTokenDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckUserTokenEntity.UserTokenDataUserData")))
@interface SharedCheckUserTokenEntityUserTokenDataUserData : SharedBase
- (instancetype)initWithFirstname:(NSString * _Nullable)firstname lastname:(NSString * _Nullable)lastname phone:(NSString * _Nullable)phone image:(NSString * _Nullable)image __attribute__((swift_name("init(firstname:lastname:phone:image:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedCheckUserTokenEntityUserTokenDataUserDataCompanion *companion __attribute__((swift_name("companion")));
- (SharedCheckUserTokenEntityUserTokenDataUserData *)doCopyFirstname:(NSString * _Nullable)firstname lastname:(NSString * _Nullable)lastname phone:(NSString * _Nullable)phone image:(NSString * _Nullable)image __attribute__((swift_name("doCopy(firstname:lastname:phone:image:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable firstname __attribute__((swift_name("firstname")));
@property (readonly) NSString * _Nullable image __attribute__((swift_name("image")));
@property (readonly) NSString * _Nullable lastname __attribute__((swift_name("lastname")));
@property (readonly) NSString * _Nullable phone __attribute__((swift_name("phone")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckUserTokenEntity.UserTokenDataUserDataCompanion")))
@interface SharedCheckUserTokenEntityUserTokenDataUserDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCheckUserTokenEntityUserTokenDataUserDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LiveChatSettingEntity")))
@interface SharedLiveChatSettingEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedLiveChatSettingEntityLiveChatSettingResponseEntity *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedLiveChatSettingEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedLiveChatSettingEntityLiveChatSettingResponseEntity *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LiveChatSettingEntity.Companion")))
@interface SharedLiveChatSettingEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedLiveChatSettingEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LiveChatSettingEntity.LiveChatSettingResponseEntity")))
@interface SharedLiveChatSettingEntityLiveChatSettingResponseEntity : SharedBase
- (instancetype)initWithAdding_buttom:(NSString * _Nullable)adding_buttom __attribute__((swift_name("init(adding_buttom:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedLiveChatSettingEntityLiveChatSettingResponseEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable adding_buttom __attribute__((swift_name("adding_buttom")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LiveChatSettingEntity.LiveChatSettingResponseEntityCompanion")))
@interface SharedLiveChatSettingEntityLiveChatSettingResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedLiveChatSettingEntityLiveChatSettingResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileEntity")))
@interface SharedProfileEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedProfileEntityProfileResponseEntity *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedProfileEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedProfileEntityProfileResponseEntity *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileEntity.Companion")))
@interface SharedProfileEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedProfileEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileEntity.ProfileResponseEntity")))
@interface SharedProfileEntityProfileResponseEntity : SharedBase
- (instancetype)initWithFirstname:(NSString * _Nullable)firstname lastname:(NSString * _Nullable)lastname __attribute__((swift_name("init(firstname:lastname:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedProfileEntityProfileResponseEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable firstname __attribute__((swift_name("firstname")));
@property (readonly) NSString * _Nullable lastname __attribute__((swift_name("lastname")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileEntity.ProfileResponseEntityCompanion")))
@interface SharedProfileEntityProfileResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedProfileEntityProfileResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationAccountEntity")))
@interface SharedSettingNotificationAccountEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(NSArray<SharedSettingNotificationAccountEntityNotificationAccount *> *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedSettingNotificationAccountEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSArray<SharedSettingNotificationAccountEntityNotificationAccount *> *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationAccountEntity.Companion")))
@interface SharedSettingNotificationAccountEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSettingNotificationAccountEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationAccountEntity.NotificationAccount")))
@interface SharedSettingNotificationAccountEntityNotificationAccount : SharedBase
- (instancetype)initWithCompany_id:(NSString *)company_id name:(NSString *)name enable:(BOOL)enable __attribute__((swift_name("init(company_id:name:enable:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSettingNotificationAccountEntityNotificationAccountCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString *company_id __attribute__((swift_name("company_id")));
@property (readonly) BOOL enable __attribute__((swift_name("enable")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationAccountEntity.NotificationAccountCompanion")))
@interface SharedSettingNotificationAccountEntityNotificationAccountCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSettingNotificationAccountEntityNotificationAccountCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationEntity")))
@interface SharedSettingNotificationEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedSettingNotificationEntitySettingNotification *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedSettingNotificationEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedSettingNotificationEntitySettingNotification *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationEntity.Companion")))
@interface SharedSettingNotificationEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSettingNotificationEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationEntity.SettingNotification")))
@interface SharedSettingNotificationEntitySettingNotification : SharedBase
- (instancetype)initWithIsAllowNotification:(BOOL)isAllowNotification settingTopicList:(NSArray<SharedSettingNotificationEntitySettingNotificationSetting *> *)settingTopicList __attribute__((swift_name("init(isAllowNotification:settingTopicList:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSettingNotificationEntitySettingNotificationCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) BOOL isAllowNotification __attribute__((swift_name("isAllowNotification")));
@property (readonly) NSArray<SharedSettingNotificationEntitySettingNotificationSetting *> *settingTopicList __attribute__((swift_name("settingTopicList")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationEntity.SettingNotificationCompanion")))
@interface SharedSettingNotificationEntitySettingNotificationCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSettingNotificationEntitySettingNotificationCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationEntity.SettingNotificationSetting")))
@interface SharedSettingNotificationEntitySettingNotificationSetting : SharedBase
- (instancetype)initWithSettingTopic:(NSString * _Nullable)settingTopic settingTopicKey:(NSString * _Nullable)settingTopicKey settingDesc:(NSString * _Nullable)settingDesc settingList:(NSArray<SharedSettingNotificationEntitySettingNotificationSettingSettingInfo *> *)settingList __attribute__((swift_name("init(settingTopic:settingTopicKey:settingDesc:settingList:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSettingNotificationEntitySettingNotificationSettingCompanion *companion __attribute__((swift_name("companion")));
- (SharedSettingNotificationEntitySettingNotificationSetting *)doCopySettingTopic:(NSString * _Nullable)settingTopic settingTopicKey:(NSString * _Nullable)settingTopicKey settingDesc:(NSString * _Nullable)settingDesc settingList:(NSArray<SharedSettingNotificationEntitySettingNotificationSettingSettingInfo *> *)settingList __attribute__((swift_name("doCopy(settingTopic:settingTopicKey:settingDesc:settingList:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable settingDesc __attribute__((swift_name("settingDesc")));
@property (readonly) NSArray<SharedSettingNotificationEntitySettingNotificationSettingSettingInfo *> *settingList __attribute__((swift_name("settingList")));
@property (readonly) NSString * _Nullable settingTopic __attribute__((swift_name("settingTopic")));
@property (readonly) NSString * _Nullable settingTopicKey __attribute__((swift_name("settingTopicKey")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationEntity.SettingNotificationSettingCompanion")))
@interface SharedSettingNotificationEntitySettingNotificationSettingCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSettingNotificationEntitySettingNotificationSettingCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationEntity.SettingNotificationSettingSettingInfo")))
@interface SharedSettingNotificationEntitySettingNotificationSettingSettingInfo : SharedBase
- (instancetype)initWithSettingName:(NSString * _Nullable)settingName settingKey:(NSString * _Nullable)settingKey isEnable:(SharedBoolean * _Nullable)isEnable __attribute__((swift_name("init(settingName:settingKey:isEnable:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSettingNotificationEntitySettingNotificationSettingSettingInfoCompanion *companion __attribute__((swift_name("companion")));
- (SharedSettingNotificationEntitySettingNotificationSettingSettingInfo *)doCopySettingName:(NSString * _Nullable)settingName settingKey:(NSString * _Nullable)settingKey isEnable:(SharedBoolean * _Nullable)isEnable __attribute__((swift_name("doCopy(settingName:settingKey:isEnable:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedBoolean * _Nullable isEnable __attribute__((swift_name("isEnable")));
@property (readonly) NSString * _Nullable settingKey __attribute__((swift_name("settingKey")));
@property (readonly) NSString * _Nullable settingName __attribute__((swift_name("settingName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationEntity.SettingNotificationSettingSettingInfoCompanion")))
@interface SharedSettingNotificationEntitySettingNotificationSettingSettingInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSettingNotificationEntitySettingNotificationSettingSettingInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BaseResponseStatusEntity.Companion")))
@interface SharedBaseResponseStatusEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedBaseResponseStatusEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StringEntity")))
@interface SharedStringEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(NSString *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedStringEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StringEntity.Companion")))
@interface SharedStringEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedStringEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactEntity")))
@interface SharedContactEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedContactEntityContactResponseEntity *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedContactEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedContactEntityContactResponseEntity *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactEntity.Companion")))
@interface SharedContactEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactEntity.ContactDataEntity")))
@interface SharedContactEntityContactDataEntity : SharedBase
- (instancetype)initWith_id:(NSString * _Nullable)_id channel_id:(NSString * _Nullable)channel_id channel_type:(NSString * _Nullable)channel_type channel_type_id:(NSString * _Nullable)channel_type_id profile:(SharedContactEntityProfile * _Nullable)profile __attribute__((swift_name("init(_id:channel_id:channel_type:channel_type_id:profile:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactEntityContactDataEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable _id __attribute__((swift_name("_id")));
@property (readonly) NSString * _Nullable channel_id __attribute__((swift_name("channel_id")));
@property (readonly) NSString * _Nullable channel_type __attribute__((swift_name("channel_type")));
@property (readonly) NSString * _Nullable channel_type_id __attribute__((swift_name("channel_type_id")));
@property (readonly) SharedContactEntityProfile * _Nullable profile __attribute__((swift_name("profile")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactEntity.ContactDataEntityCompanion")))
@interface SharedContactEntityContactDataEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactEntityContactDataEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactEntity.ContactResponseEntity")))
@interface SharedContactEntityContactResponseEntity : SharedBase
- (instancetype)initWithTotalCount:(NSString * _Nullable)totalCount user:(NSMutableArray<SharedContactEntityContactDataEntity *> * _Nullable)user __attribute__((swift_name("init(totalCount:user:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactEntityContactResponseEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable totalCount __attribute__((swift_name("totalCount")));
@property (readonly) NSMutableArray<SharedContactEntityContactDataEntity *> * _Nullable user __attribute__((swift_name("user")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactEntity.ContactResponseEntityCompanion")))
@interface SharedContactEntityContactResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactEntityContactResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactEntity.Profile")))
@interface SharedContactEntityProfile : SharedBase
- (instancetype)initWithLine_name:(NSString * _Nullable)line_name line_nickname:(NSString * _Nullable)line_nickname line_image:(NSString * _Nullable)line_image __attribute__((swift_name("init(line_name:line_nickname:line_image:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactEntityProfileCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable line_image __attribute__((swift_name("line_image")));
@property (readonly) NSString * _Nullable line_name __attribute__((swift_name("line_name")));
@property (readonly) NSString * _Nullable line_nickname __attribute__((swift_name("line_nickname")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactEntity.ProfileCompanion")))
@interface SharedContactEntityProfileCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactEntityProfileCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity")))
@interface SharedDashboardEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedDashboardEntityDashboardResponseEntity *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedDashboardEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedDashboardEntityDashboardResponseEntity *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.AvgChatData")))
@interface SharedDashboardEntityAvgChatData : SharedBase
- (instancetype)initWithAgent:(SharedInt * _Nullable)agent chat:(SharedInt * _Nullable)chat __attribute__((swift_name("init(agent:chat:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardEntityAvgChatDataCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedInt * _Nullable agent __attribute__((swift_name("agent")));
@property (readonly) SharedInt * _Nullable chat __attribute__((swift_name("chat")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.AvgChatDataCompanion")))
@interface SharedDashboardEntityAvgChatDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardEntityAvgChatDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.Companion")))
@interface SharedDashboardEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.ContactChatInfo")))
@interface SharedDashboardEntityContactChatInfo : SharedBase
- (instancetype)initWithAgentNewChat:(int32_t)agentNewChat agentOldChat:(int32_t)agentOldChat botNewChat:(int32_t)botNewChat botOldChat:(int32_t)botOldChat __attribute__((swift_name("init(agentNewChat:agentOldChat:botNewChat:botOldChat:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardEntityContactChatInfoCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) int32_t agentNewChat __attribute__((swift_name("agentNewChat")));
@property (readonly) int32_t agentOldChat __attribute__((swift_name("agentOldChat")));
@property (readonly) int32_t botNewChat __attribute__((swift_name("botNewChat")));
@property (readonly) int32_t botOldChat __attribute__((swift_name("botOldChat")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.ContactChatInfoCompanion")))
@interface SharedDashboardEntityContactChatInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardEntityContactChatInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.ContactGraph")))
@interface SharedDashboardEntityContactGraph : SharedBase
- (instancetype)initWithType:(NSString * _Nullable)type data:(SharedDashboardEntityInsightData *)data __attribute__((swift_name("init(type:data:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardEntityContactGraphCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedDashboardEntityInsightData *data __attribute__((swift_name("data")));
@property (readonly) NSString * _Nullable type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.ContactGraphCompanion")))
@interface SharedDashboardEntityContactGraphCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardEntityContactGraphCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.DashboardResponseEntity")))
@interface SharedDashboardEntityDashboardResponseEntity : SharedBase
- (instancetype)initWithOverall:(SharedDashboardEntityOverAllData *)overall heatMapTable:(NSMutableArray<SharedDashboardEntityHeatMapTableInfo *> *)heatMapTable chartAllFollower:(NSMutableArray<SharedDashboardEntityContactChatInfo *> *)chartAllFollower contactGraph:(NSMutableArray<SharedDashboardEntityContactGraph *> *)contactGraph __attribute__((swift_name("init(overall:heatMapTable:chartAllFollower:contactGraph:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardEntityDashboardResponseEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSMutableArray<SharedDashboardEntityContactChatInfo *> *chartAllFollower __attribute__((swift_name("chartAllFollower")));
@property (readonly) NSMutableArray<SharedDashboardEntityContactGraph *> *contactGraph __attribute__((swift_name("contactGraph")));
@property (readonly) NSMutableArray<SharedDashboardEntityHeatMapTableInfo *> *heatMapTable __attribute__((swift_name("heatMapTable")));
@property (readonly) SharedDashboardEntityOverAllData *overall __attribute__((swift_name("overall")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.DashboardResponseEntityCompanion")))
@interface SharedDashboardEntityDashboardResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardEntityDashboardResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.FollowerData")))
@interface SharedDashboardEntityFollowerData : SharedBase
- (instancetype)initWithBlocks:(SharedInt * _Nullable)blocks followers:(SharedInt * _Nullable)followers newFollower:(SharedInt * _Nullable)newFollower __attribute__((swift_name("init(blocks:followers:newFollower:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardEntityFollowerDataCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedInt * _Nullable blocks __attribute__((swift_name("blocks")));
@property (readonly) SharedInt * _Nullable followers __attribute__((swift_name("followers")));
@property (readonly, getter=doNewFollower) SharedInt * _Nullable newFollower __attribute__((swift_name("newFollower")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.FollowerDataCompanion")))
@interface SharedDashboardEntityFollowerDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardEntityFollowerDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.GraphData")))
@interface SharedDashboardEntityGraphData : SharedBase
- (instancetype)initWithDateInformation:(NSString * _Nullable)dateInformation followers:(SharedDashboardEntityFollowerData * _Nullable)followers __attribute__((swift_name("init(dateInformation:followers:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardEntityGraphDataCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable dateInformation __attribute__((swift_name("dateInformation")));
@property (readonly) SharedDashboardEntityFollowerData * _Nullable followers __attribute__((swift_name("followers")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.GraphDataCompanion")))
@interface SharedDashboardEntityGraphDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardEntityGraphDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.GrowData")))
@interface SharedDashboardEntityGrowData : SharedBase
- (instancetype)initWithPercent:(SharedDouble * _Nullable)percent type:(NSString * _Nullable)type __attribute__((swift_name("init(percent:type:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardEntityGrowDataCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedDouble * _Nullable percent __attribute__((swift_name("percent")));
@property (readonly) NSString * _Nullable type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.GrowDataCompanion")))
@interface SharedDashboardEntityGrowDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardEntityGrowDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.GrowPercent")))
@interface SharedDashboardEntityGrowPercent : SharedBase
- (instancetype)initWithBlocks:(SharedDashboardEntityGrowData *)blocks followers:(SharedDashboardEntityGrowData *)followers newFollower:(SharedDashboardEntityGrowData *)newFollower __attribute__((swift_name("init(blocks:followers:newFollower:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardEntityGrowPercentCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedDashboardEntityGrowData *blocks __attribute__((swift_name("blocks")));
@property (readonly) SharedDashboardEntityGrowData *followers __attribute__((swift_name("followers")));
@property (readonly, getter=doNewFollower) SharedDashboardEntityGrowData *newFollower __attribute__((swift_name("newFollower")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.GrowPercentCompanion")))
@interface SharedDashboardEntityGrowPercentCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardEntityGrowPercentCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.HeatMapTableInfo")))
@interface SharedDashboardEntityHeatMapTableInfo : SharedBase
- (instancetype)initWithCountIncoming:(int32_t)countIncoming countOutgoing:(int32_t)countOutgoing countBot:(int32_t)countBot hour:(int32_t)hour day:(SharedInt * _Nullable)day __attribute__((swift_name("init(countIncoming:countOutgoing:countBot:hour:day:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardEntityHeatMapTableInfoCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) int32_t countBot __attribute__((swift_name("countBot")));
@property (readonly) int32_t countIncoming __attribute__((swift_name("countIncoming")));
@property (readonly) int32_t countOutgoing __attribute__((swift_name("countOutgoing")));
@property (readonly) SharedInt * _Nullable day __attribute__((swift_name("day")));
@property (readonly) int32_t hour __attribute__((swift_name("hour")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.HeatMapTableInfoCompanion")))
@interface SharedDashboardEntityHeatMapTableInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardEntityHeatMapTableInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.InsightData")))
@interface SharedDashboardEntityInsightData : SharedBase
- (instancetype)initWithListInsight:(NSMutableArray<SharedDashboardEntityGraphData *> * _Nullable)listInsight currentInsight:(SharedDashboardEntityFollowerData * _Nullable)currentInsight growPercent:(SharedDashboardEntityGrowPercent * _Nullable)growPercent __attribute__((swift_name("init(listInsight:currentInsight:growPercent:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardEntityInsightDataCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedDashboardEntityFollowerData * _Nullable currentInsight __attribute__((swift_name("currentInsight")));
@property (readonly) SharedDashboardEntityGrowPercent * _Nullable growPercent __attribute__((swift_name("growPercent")));
@property (readonly) NSMutableArray<SharedDashboardEntityGraphData *> * _Nullable listInsight __attribute__((swift_name("listInsight")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.InsightDataCompanion")))
@interface SharedDashboardEntityInsightDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardEntityInsightDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.OverAllData")))
@interface SharedDashboardEntityOverAllData : SharedBase
- (instancetype)initWithTotalChat:(SharedInt * _Nullable)totalChat percentTotal:(SharedDashboardEntityPercentData * _Nullable)percentTotal incommingChat:(SharedInt * _Nullable)incommingChat percentIncoming:(SharedDashboardEntityPercentData * _Nullable)percentIncoming outgoingChat:(SharedInt * _Nullable)outgoingChat percentOutgoing:(SharedDashboardEntityPercentData * _Nullable)percentOutgoing botChat:(SharedInt * _Nullable)botChat percentBot:(SharedDashboardEntityPercentData * _Nullable)percentBot missedChat:(SharedInt * _Nullable)missedChat percentMissed:(SharedDashboardEntityPercentData * _Nullable)percentMissed expiredChat:(SharedInt * _Nullable)expiredChat percentExpired:(SharedDashboardEntityPercentData * _Nullable)percentExpired avgResponseTime:(SharedDouble * _Nullable)avgResponseTime avgChatDuration:(SharedDouble * _Nullable)avgChatDuration avgAgentChat:(SharedDashboardEntityAvgChatData * _Nullable)avgAgentChat __attribute__((swift_name("init(totalChat:percentTotal:incommingChat:percentIncoming:outgoingChat:percentOutgoing:botChat:percentBot:missedChat:percentMissed:expiredChat:percentExpired:avgResponseTime:avgChatDuration:avgAgentChat:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardEntityOverAllDataCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedDashboardEntityAvgChatData * _Nullable avgAgentChat __attribute__((swift_name("avgAgentChat")));
@property (readonly) SharedDouble * _Nullable avgChatDuration __attribute__((swift_name("avgChatDuration")));
@property (readonly) SharedDouble * _Nullable avgResponseTime __attribute__((swift_name("avgResponseTime")));
@property (readonly) SharedInt * _Nullable botChat __attribute__((swift_name("botChat")));
@property (readonly) SharedInt * _Nullable expiredChat __attribute__((swift_name("expiredChat")));
@property (readonly) SharedInt * _Nullable incommingChat __attribute__((swift_name("incommingChat")));
@property (readonly) SharedInt * _Nullable missedChat __attribute__((swift_name("missedChat")));
@property (readonly) SharedInt * _Nullable outgoingChat __attribute__((swift_name("outgoingChat")));
@property (readonly) SharedDashboardEntityPercentData * _Nullable percentBot __attribute__((swift_name("percentBot")));
@property (readonly) SharedDashboardEntityPercentData * _Nullable percentExpired __attribute__((swift_name("percentExpired")));
@property (readonly) SharedDashboardEntityPercentData * _Nullable percentIncoming __attribute__((swift_name("percentIncoming")));
@property (readonly) SharedDashboardEntityPercentData * _Nullable percentMissed __attribute__((swift_name("percentMissed")));
@property (readonly) SharedDashboardEntityPercentData * _Nullable percentOutgoing __attribute__((swift_name("percentOutgoing")));
@property (readonly) SharedDashboardEntityPercentData * _Nullable percentTotal __attribute__((swift_name("percentTotal")));
@property (readonly) SharedInt * _Nullable totalChat __attribute__((swift_name("totalChat")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.OverAllDataCompanion")))
@interface SharedDashboardEntityOverAllDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardEntityOverAllDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.PercentData")))
@interface SharedDashboardEntityPercentData : SharedBase
- (instancetype)initWithPercent:(SharedDouble * _Nullable)percent type:(NSString * _Nullable)type __attribute__((swift_name("init(percent:type:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedDashboardEntityPercentDataCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedDouble * _Nullable percent __attribute__((swift_name("percent")));
@property (readonly) NSString * _Nullable type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardEntity.PercentDataCompanion")))
@interface SharedDashboardEntityPercentDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardEntityPercentDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AcceptChatEntity")))
@interface SharedAcceptChatEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedAcceptChatEntityAcceptChatResponseEntity *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedAcceptChatEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedAcceptChatEntityAcceptChatResponseEntity *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AcceptChatEntity.AcceptChatResponseEntity")))
@interface SharedAcceptChatEntityAcceptChatResponseEntity : SharedBase
- (instancetype)initWithSwitchModeAt:(NSString * _Nullable)switchModeAt countDownSecond:(SharedInt * _Nullable)countDownSecond livechatId:(NSString * _Nullable)livechatId __attribute__((swift_name("init(switchModeAt:countDownSecond:livechatId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedAcceptChatEntityAcceptChatResponseEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedInt * _Nullable countDownSecond __attribute__((swift_name("countDownSecond")));
@property (readonly) NSString * _Nullable livechatId __attribute__((swift_name("livechatId")));
@property (readonly) NSString * _Nullable switchModeAt __attribute__((swift_name("switchModeAt")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AcceptChatEntity.AcceptChatResponseEntityCompanion")))
@interface SharedAcceptChatEntityAcceptChatResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedAcceptChatEntityAcceptChatResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AcceptChatEntity.Companion")))
@interface SharedAcceptChatEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedAcceptChatEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AgentFilterEntity")))
@interface SharedAgentFilterEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(NSArray<SharedAgentFilterEntityAgentFilterResponseEntity *> *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedAgentFilterEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSArray<SharedAgentFilterEntityAgentFilterResponseEntity *> *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AgentFilterEntity.AgentFilterResponseEntity")))
@interface SharedAgentFilterEntityAgentFilterResponseEntity : SharedBase
- (instancetype)initWithUser_id:(NSString * _Nullable)user_id name:(NSString * _Nullable)name agentImage:(NSString * _Nullable)agentImage agentRoleName:(NSString * _Nullable)agentRoleName is_mobile:(SharedBoolean * _Nullable)is_mobile is_online:(SharedBoolean * _Nullable)is_online is_full:(SharedBoolean * _Nullable)is_full __attribute__((swift_name("init(user_id:name:agentImage:agentRoleName:is_mobile:is_online:is_full:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedAgentFilterEntityAgentFilterResponseEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable agentImage __attribute__((swift_name("agentImage")));
@property (readonly) NSString * _Nullable agentRoleName __attribute__((swift_name("agentRoleName")));
@property (readonly) SharedBoolean * _Nullable is_full __attribute__((swift_name("is_full")));
@property (readonly) SharedBoolean * _Nullable is_mobile __attribute__((swift_name("is_mobile")));
@property (readonly) SharedBoolean * _Nullable is_online __attribute__((swift_name("is_online")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable user_id __attribute__((swift_name("user_id")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AgentFilterEntity.AgentFilterResponseEntityCompanion")))
@interface SharedAgentFilterEntityAgentFilterResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedAgentFilterEntityAgentFilterResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AgentFilterEntity.Companion")))
@interface SharedAgentFilterEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedAgentFilterEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatLiveChatEntity")))
@interface SharedChatLiveChatEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedChatLiveChatEntityChatLiveChatResponse *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedChatLiveChatEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedChatLiveChatEntityChatLiveChatResponse *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatLiveChatEntity.ChatLiveChatResponse")))
@interface SharedChatLiveChatEntityChatLiveChatResponse : SharedBase
- (instancetype)initWithTotalData:(NSArray<SharedChatLiveChatEntityChatLiveChatResponseFollowerData *> *)totalData __attribute__((swift_name("init(totalData:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedChatLiveChatEntityChatLiveChatResponseCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSArray<SharedChatLiveChatEntityChatLiveChatResponseFollowerData *> *totalData __attribute__((swift_name("totalData")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatLiveChatEntity.ChatLiveChatResponseCompanion")))
@interface SharedChatLiveChatEntityChatLiveChatResponseCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatLiveChatEntityChatLiveChatResponseCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatLiveChatEntity.ChatLiveChatResponseFollowerData")))
@interface SharedChatLiveChatEntityChatLiveChatResponseFollowerData : SharedBase
- (instancetype)initWith_id:(NSString *)_id profile:(SharedChatLiveChatEntityChatLiveChatResponseFollowerDataProfile *)profile last_livechat:(SharedChatLiveChatEntityChatLiveChatResponseFollowerDataLastLiveChat *)last_livechat channelId:(NSString *)channelId channelTypeId:(NSString *)channelTypeId channelTypeInfo:(SharedChatLiveChatEntityChatLiveChatResponseFollowerDataChannelTypeInfo *)channelTypeInfo followerType:(NSString *)followerType __attribute__((swift_name("init(_id:profile:last_livechat:channelId:channelTypeId:channelTypeInfo:followerType:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedChatLiveChatEntityChatLiveChatResponseFollowerDataCompanion *companion __attribute__((swift_name("companion")));
- (SharedChatLiveChatEntityChatLiveChatResponseFollowerData *)doCopy_id:(NSString *)_id profile:(SharedChatLiveChatEntityChatLiveChatResponseFollowerDataProfile *)profile last_livechat:(SharedChatLiveChatEntityChatLiveChatResponseFollowerDataLastLiveChat *)last_livechat channelId:(NSString *)channelId channelTypeId:(NSString *)channelTypeId channelTypeInfo:(SharedChatLiveChatEntityChatLiveChatResponseFollowerDataChannelTypeInfo *)channelTypeInfo followerType:(NSString *)followerType __attribute__((swift_name("doCopy(_id:profile:last_livechat:channelId:channelTypeId:channelTypeInfo:followerType:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *_id __attribute__((swift_name("_id")));
@property (readonly) NSString *channelId __attribute__((swift_name("channelId")));
@property (readonly) NSString *channelTypeId __attribute__((swift_name("channelTypeId")));
@property (readonly) SharedChatLiveChatEntityChatLiveChatResponseFollowerDataChannelTypeInfo *channelTypeInfo __attribute__((swift_name("channelTypeInfo")));
@property (readonly) NSString *followerType __attribute__((swift_name("followerType")));
@property (readonly) SharedChatLiveChatEntityChatLiveChatResponseFollowerDataLastLiveChat *last_livechat __attribute__((swift_name("last_livechat")));
@property (readonly) SharedChatLiveChatEntityChatLiveChatResponseFollowerDataProfile *profile __attribute__((swift_name("profile")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatLiveChatEntity.ChatLiveChatResponseFollowerDataChannelTypeInfo")))
@interface SharedChatLiveChatEntityChatLiveChatResponseFollowerDataChannelTypeInfo : SharedBase
- (instancetype)initWithName:(NSString * _Nullable)name __attribute__((swift_name("init(name:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedChatLiveChatEntityChatLiveChatResponseFollowerDataChannelTypeInfoCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatLiveChatEntity.ChatLiveChatResponseFollowerDataChannelTypeInfoCompanion")))
@interface SharedChatLiveChatEntityChatLiveChatResponseFollowerDataChannelTypeInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatLiveChatEntityChatLiveChatResponseFollowerDataChannelTypeInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatLiveChatEntity.ChatLiveChatResponseFollowerDataCompanion")))
@interface SharedChatLiveChatEntityChatLiveChatResponseFollowerDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatLiveChatEntityChatLiveChatResponseFollowerDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatLiveChatEntity.ChatLiveChatResponseFollowerDataLastLiveChat")))
@interface SharedChatLiveChatEntityChatLiveChatResponseFollowerDataLastLiveChat : SharedBase
- (instancetype)initWithLast_chat_message:(SharedChatLiveChatEntityChatLiveChatResponseFollowerDataLastLiveChatLastChatMsg * _Nullable)last_chat_message __attribute__((swift_name("init(last_chat_message:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedChatLiveChatEntityChatLiveChatResponseFollowerDataLastLiveChatCompanion *companion __attribute__((swift_name("companion")));
- (SharedChatLiveChatEntityChatLiveChatResponseFollowerDataLastLiveChat *)doCopyLast_chat_message:(SharedChatLiveChatEntityChatLiveChatResponseFollowerDataLastLiveChatLastChatMsg * _Nullable)last_chat_message __attribute__((swift_name("doCopy(last_chat_message:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedChatLiveChatEntityChatLiveChatResponseFollowerDataLastLiveChatLastChatMsg * _Nullable last_chat_message __attribute__((swift_name("last_chat_message")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatLiveChatEntity.ChatLiveChatResponseFollowerDataLastLiveChatCompanion")))
@interface SharedChatLiveChatEntityChatLiveChatResponseFollowerDataLastLiveChatCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatLiveChatEntityChatLiveChatResponseFollowerDataLastLiveChatCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatLiveChatEntity.ChatLiveChatResponseFollowerDataLastLiveChatLastChatMsg")))
@interface SharedChatLiveChatEntityChatLiveChatResponseFollowerDataLastLiveChatLastChatMsg : SharedBase
- (instancetype)initWith_id:(NSString *)_id message_title:(NSString *)message_title timestamp:(double)timestamp __attribute__((swift_name("init(_id:message_title:timestamp:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedChatLiveChatEntityChatLiveChatResponseFollowerDataLastLiveChatLastChatMsgCompanion *companion __attribute__((swift_name("companion")));
- (SharedChatLiveChatEntityChatLiveChatResponseFollowerDataLastLiveChatLastChatMsg *)doCopy_id:(NSString *)_id message_title:(NSString *)message_title timestamp:(double)timestamp __attribute__((swift_name("doCopy(_id:message_title:timestamp:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *_id __attribute__((swift_name("_id")));
@property (readonly) NSString *message_title __attribute__((swift_name("message_title")));
@property (readonly) double timestamp __attribute__((swift_name("timestamp")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatLiveChatEntity.ChatLiveChatResponseFollowerDataLastLiveChatLastChatMsgCompanion")))
@interface SharedChatLiveChatEntityChatLiveChatResponseFollowerDataLastLiveChatLastChatMsgCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatLiveChatEntityChatLiveChatResponseFollowerDataLastLiveChatLastChatMsgCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatLiveChatEntity.ChatLiveChatResponseFollowerDataProfile")))
@interface SharedChatLiveChatEntityChatLiveChatResponseFollowerDataProfile : SharedBase
- (instancetype)initWithLine_name:(NSString * _Nullable)line_name line_image:(NSString * _Nullable)line_image line_nickname:(NSString * _Nullable)line_nickname __attribute__((swift_name("init(line_name:line_image:line_nickname:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedChatLiveChatEntityChatLiveChatResponseFollowerDataProfileCompanion *companion __attribute__((swift_name("companion")));
- (SharedChatLiveChatEntityChatLiveChatResponseFollowerDataProfile *)doCopyLine_name:(NSString * _Nullable)line_name line_image:(NSString * _Nullable)line_image line_nickname:(NSString * _Nullable)line_nickname __attribute__((swift_name("doCopy(line_name:line_image:line_nickname:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable line_image __attribute__((swift_name("line_image")));
@property (readonly) NSString * _Nullable line_name __attribute__((swift_name("line_name")));
@property (readonly) NSString * _Nullable line_nickname __attribute__((swift_name("line_nickname")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatLiveChatEntity.ChatLiveChatResponseFollowerDataProfileCompanion")))
@interface SharedChatLiveChatEntityChatLiveChatResponseFollowerDataProfileCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatLiveChatEntityChatLiveChatResponseFollowerDataProfileCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatLiveChatEntity.Companion")))
@interface SharedChatLiveChatEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatLiveChatEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageEntity")))
@interface SharedChatMessageEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedChatMessageEntityGetChatListResponseEntity *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedChatMessageEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedChatMessageEntityGetChatListResponseEntity *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageEntity.Companion")))
@interface SharedChatMessageEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatMessageEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageEntity.GetChatListDataEntity")))
@interface SharedChatMessageEntityGetChatListDataEntity : SharedBase
- (instancetype)initWith_id:(NSString * _Nullable)_id channel_id:(NSString * _Nullable)channel_id type:(NSString * _Nullable)type sub_type:(NSString * _Nullable)sub_type chat_type:(NSString * _Nullable)chat_type mode:(NSString * _Nullable)mode is_replied:(SharedBoolean * _Nullable)is_replied message_title:(NSString * _Nullable)message_title messages_sent:(NSArray<SharedChatMessageEntityMessageSentEntity *> * _Nullable)messages_sent timestamp:(SharedDouble * _Nullable)timestamp created_at:(NSString * _Nullable)created_at user_info:(SharedGetFollowerChatEntityUserInfoEntity * _Nullable)user_info group_info:(SharedGetFollowerChatEntityQueueInfoEntity * _Nullable)group_info follower:(SharedChatMessageEntityLiveChatFollowerEntity * _Nullable)follower member:(NSArray<SharedChatMessageEntityLiveChatMemberEntity *> * _Nullable)member follower_id:(NSString * _Nullable)follower_id is_block:(SharedBoolean * _Nullable)is_block is_spam:(SharedBoolean * _Nullable)is_spam is_read:(SharedBoolean * _Nullable)is_read last_livechat:(SharedChatMessageEntityLastLiveChatEntity * _Nullable)last_livechat mention:(SharedChatMessageEntityMentionEntity * _Nullable)mention temp_id:(NSString * _Nullable)temp_id profile:(SharedChatMessageEntityProfile * _Nullable)profile __attribute__((swift_name("init(_id:channel_id:type:sub_type:chat_type:mode:is_replied:message_title:messages_sent:timestamp:created_at:user_info:group_info:follower:member:follower_id:is_block:is_spam:is_read:last_livechat:mention:temp_id:profile:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedChatMessageEntityGetChatListDataEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable _id __attribute__((swift_name("_id")));
@property (readonly) NSString * _Nullable channel_id __attribute__((swift_name("channel_id")));
@property (readonly) NSString * _Nullable chat_type __attribute__((swift_name("chat_type")));
@property (readonly) NSString * _Nullable created_at __attribute__((swift_name("created_at")));
@property (readonly) SharedChatMessageEntityLiveChatFollowerEntity * _Nullable follower __attribute__((swift_name("follower")));
@property (readonly) NSString * _Nullable follower_id __attribute__((swift_name("follower_id")));
@property (readonly) SharedGetFollowerChatEntityQueueInfoEntity * _Nullable group_info __attribute__((swift_name("group_info")));
@property (readonly) SharedBoolean * _Nullable is_block __attribute__((swift_name("is_block")));
@property (readonly) SharedBoolean * _Nullable is_read __attribute__((swift_name("is_read")));
@property (readonly) SharedBoolean * _Nullable is_replied __attribute__((swift_name("is_replied")));
@property (readonly) SharedBoolean * _Nullable is_spam __attribute__((swift_name("is_spam")));
@property (readonly) SharedChatMessageEntityLastLiveChatEntity * _Nullable last_livechat __attribute__((swift_name("last_livechat")));
@property (readonly) NSArray<SharedChatMessageEntityLiveChatMemberEntity *> * _Nullable member __attribute__((swift_name("member")));
@property (readonly) SharedChatMessageEntityMentionEntity * _Nullable mention __attribute__((swift_name("mention")));
@property (readonly) NSString * _Nullable message_title __attribute__((swift_name("message_title")));
@property (readonly) NSArray<SharedChatMessageEntityMessageSentEntity *> * _Nullable messages_sent __attribute__((swift_name("messages_sent")));
@property (readonly) NSString * _Nullable mode __attribute__((swift_name("mode")));
@property (readonly) SharedChatMessageEntityProfile * _Nullable profile __attribute__((swift_name("profile")));
@property (readonly) NSString * _Nullable sub_type __attribute__((swift_name("sub_type")));
@property (readonly) NSString * _Nullable temp_id __attribute__((swift_name("temp_id")));
@property (readonly) SharedDouble * _Nullable timestamp __attribute__((swift_name("timestamp")));
@property (readonly) NSString * _Nullable type __attribute__((swift_name("type")));
@property (readonly) SharedGetFollowerChatEntityUserInfoEntity * _Nullable user_info __attribute__((swift_name("user_info")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageEntity.GetChatListDataEntityCompanion")))
@interface SharedChatMessageEntityGetChatListDataEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatMessageEntityGetChatListDataEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageEntity.GetChatListMessageEntity")))
@interface SharedChatMessageEntityGetChatListMessageEntity : SharedBase
- (instancetype)initWithIs_business_time:(SharedBoolean * _Nullable)is_business_time status:(SharedInt * _Nullable)status __attribute__((swift_name("init(is_business_time:status:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedChatMessageEntityGetChatListMessageEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedBoolean * _Nullable is_business_time __attribute__((swift_name("is_business_time")));
@property (readonly) SharedInt * _Nullable status __attribute__((swift_name("status")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageEntity.GetChatListMessageEntityCompanion")))
@interface SharedChatMessageEntityGetChatListMessageEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatMessageEntityGetChatListMessageEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageEntity.GetChatListResponseEntity")))
@interface SharedChatMessageEntityGetChatListResponseEntity : SharedBase
- (instancetype)initWithMessage:(SharedChatMessageEntityGetChatListMessageEntity * _Nullable)message data:(NSMutableArray<SharedChatMessageEntityGetChatListDataEntity *> * _Nullable)data __attribute__((swift_name("init(message:data:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedChatMessageEntityGetChatListResponseEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSMutableArray<SharedChatMessageEntityGetChatListDataEntity *> * _Nullable data __attribute__((swift_name("data")));
@property (readonly) SharedChatMessageEntityGetChatListMessageEntity * _Nullable message __attribute__((swift_name("message")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageEntity.GetChatListResponseEntityCompanion")))
@interface SharedChatMessageEntityGetChatListResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatMessageEntityGetChatListResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageEntity.LastLiveChatEntity")))
@interface SharedChatMessageEntityLastLiveChatEntity : SharedBase
- (instancetype)initWithSwitch_mode_at:(NSString * _Nullable)switch_mode_at done_at:(NSString * _Nullable)done_at is_missed:(SharedBoolean * _Nullable)is_missed is_business:(SharedBoolean * _Nullable)is_business is_done:(SharedBoolean * _Nullable)is_done is_expired:(SharedBoolean * _Nullable)is_expired is_assign:(SharedBoolean * _Nullable)is_assign __attribute__((swift_name("init(switch_mode_at:done_at:is_missed:is_business:is_done:is_expired:is_assign:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedChatMessageEntityLastLiveChatEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable done_at __attribute__((swift_name("done_at")));
@property (readonly) SharedBoolean * _Nullable is_assign __attribute__((swift_name("is_assign")));
@property (readonly) SharedBoolean * _Nullable is_business __attribute__((swift_name("is_business")));
@property (readonly) SharedBoolean * _Nullable is_done __attribute__((swift_name("is_done")));
@property (readonly) SharedBoolean * _Nullable is_expired __attribute__((swift_name("is_expired")));
@property (readonly) SharedBoolean * _Nullable is_missed __attribute__((swift_name("is_missed")));
@property (readonly) NSString * _Nullable switch_mode_at __attribute__((swift_name("switch_mode_at")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageEntity.LastLiveChatEntityCompanion")))
@interface SharedChatMessageEntityLastLiveChatEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatMessageEntityLastLiveChatEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageEntity.LiveChatFollowerEntity")))
@interface SharedChatMessageEntityLiveChatFollowerEntity : SharedBase
- (instancetype)initWith_id:(NSString * _Nullable)_id profile:(SharedGetFollowerChatEntityProfileFollowerEntity *)profile __attribute__((swift_name("init(_id:profile:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedChatMessageEntityLiveChatFollowerEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable _id __attribute__((swift_name("_id")));
@property (readonly) SharedGetFollowerChatEntityProfileFollowerEntity *profile __attribute__((swift_name("profile")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageEntity.LiveChatFollowerEntityCompanion")))
@interface SharedChatMessageEntityLiveChatFollowerEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatMessageEntityLiveChatFollowerEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageEntity.LiveChatMemberEntity")))
@interface SharedChatMessageEntityLiveChatMemberEntity : SharedBase
- (instancetype)initWithLine_name:(NSString * _Nullable)line_name line_image:(NSString * _Nullable)line_image __attribute__((swift_name("init(line_name:line_image:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedChatMessageEntityLiveChatMemberEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable line_image __attribute__((swift_name("line_image")));
@property (readonly) NSString * _Nullable line_name __attribute__((swift_name("line_name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageEntity.LiveChatMemberEntityCompanion")))
@interface SharedChatMessageEntityLiveChatMemberEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatMessageEntityLiveChatMemberEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageEntity.MentionEntity")))
@interface SharedChatMessageEntityMentionEntity : SharedBase
- (instancetype)initWithId:(NSString * _Nullable)id message:(NSArray<SharedChatMessageEntityMessageSentEntity *> *)message __attribute__((swift_name("init(id:message:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedChatMessageEntityMentionEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) NSArray<SharedChatMessageEntityMessageSentEntity *> *message __attribute__((swift_name("message")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageEntity.MentionEntityCompanion")))
@interface SharedChatMessageEntityMentionEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatMessageEntityMentionEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageEntity.MessageSentEntity")))
@interface SharedChatMessageEntityMessageSentEntity : SharedBase
- (instancetype)initWithText:(NSString * _Nullable)text altText:(NSString * _Nullable)altText type:(NSString * _Nullable)type id:(NSString * _Nullable)id stickerId:(NSString * _Nullable)stickerId stickerResourceType:(NSString * _Nullable)stickerResourceType previewImageUrl:(NSString * _Nullable)previewImageUrl originalContentUrl:(NSString * _Nullable)originalContentUrl video:(SharedChatMessageEntityVideoMessageEntity * _Nullable)video contents:(NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> * _Nullable)contents latitude:(SharedDouble * _Nullable)latitude longitude:(SharedDouble * _Nullable)longitude address:(NSString * _Nullable)address duration:(SharedLong * _Nullable)duration fileSize:(SharedLong * _Nullable)fileSize file_path:(NSString * _Nullable)file_path thumbnail:(NSString * _Nullable)thumbnail fileName:(NSString * _Nullable)fileName baseUrl:(NSString * _Nullable)baseUrl __attribute__((swift_name("init(text:altText:type:id:stickerId:stickerResourceType:previewImageUrl:originalContentUrl:video:contents:latitude:longitude:address:duration:fileSize:file_path:thumbnail:fileName:baseUrl:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedChatMessageEntityMessageSentEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable address __attribute__((swift_name("address")));
@property (readonly) NSString * _Nullable altText __attribute__((swift_name("altText")));
@property (readonly) NSString * _Nullable baseUrl __attribute__((swift_name("baseUrl")));
@property (readonly) NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> * _Nullable contents __attribute__((swift_name("contents")));
@property (readonly) SharedLong * _Nullable duration __attribute__((swift_name("duration")));
@property (readonly) NSString * _Nullable fileName __attribute__((swift_name("fileName")));
@property (readonly) SharedLong * _Nullable fileSize __attribute__((swift_name("fileSize")));
@property (readonly) NSString * _Nullable file_path __attribute__((swift_name("file_path")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) SharedDouble * _Nullable latitude __attribute__((swift_name("latitude")));
@property (readonly) SharedDouble * _Nullable longitude __attribute__((swift_name("longitude")));
@property (readonly) NSString * _Nullable originalContentUrl __attribute__((swift_name("originalContentUrl")));
@property (readonly) NSString * _Nullable previewImageUrl __attribute__((swift_name("previewImageUrl")));
@property (readonly) NSString * _Nullable stickerId __attribute__((swift_name("stickerId")));
@property (readonly) NSString * _Nullable stickerResourceType __attribute__((swift_name("stickerResourceType")));
@property (readonly) NSString * _Nullable text __attribute__((swift_name("text")));
@property (readonly) NSString * _Nullable thumbnail __attribute__((swift_name("thumbnail")));
@property (readonly) NSString * _Nullable type __attribute__((swift_name("type")));
@property (readonly) SharedChatMessageEntityVideoMessageEntity * _Nullable video __attribute__((swift_name("video")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageEntity.MessageSentEntityCompanion")))
@interface SharedChatMessageEntityMessageSentEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatMessageEntityMessageSentEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageEntity.Profile")))
@interface SharedChatMessageEntityProfile : SharedBase
- (instancetype)initWithLine_name:(NSString * _Nullable)line_name line_nickname:(NSString * _Nullable)line_nickname line_image:(NSString * _Nullable)line_image __attribute__((swift_name("init(line_name:line_nickname:line_image:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedChatMessageEntityProfileCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable line_image __attribute__((swift_name("line_image")));
@property (readonly) NSString * _Nullable line_name __attribute__((swift_name("line_name")));
@property (readonly) NSString * _Nullable line_nickname __attribute__((swift_name("line_nickname")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageEntity.ProfileCompanion")))
@interface SharedChatMessageEntityProfileCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatMessageEntityProfileCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageEntity.VideoMessageEntity")))
@interface SharedChatMessageEntityVideoMessageEntity : SharedBase
- (instancetype)initWithOriginalContentUrl:(NSString * _Nullable)originalContentUrl previewImageUrl:(NSString * _Nullable)previewImageUrl __attribute__((swift_name("init(originalContentUrl:previewImageUrl:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedChatMessageEntityVideoMessageEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable originalContentUrl __attribute__((swift_name("originalContentUrl")));
@property (readonly) NSString * _Nullable previewImageUrl __attribute__((swift_name("previewImageUrl")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatMessageEntity.VideoMessageEntityCompanion")))
@interface SharedChatMessageEntityVideoMessageEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedChatMessageEntityVideoMessageEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CloseChatEntity")))
@interface SharedCloseChatEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedGetFollowerChatEntityChatEntity *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedCloseChatEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedGetFollowerChatEntityChatEntity *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CloseChatEntity.Companion")))
@interface SharedCloseChatEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCloseChatEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity")))
@interface SharedContactInformationEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedContactInformationEntityContactInformationResponseEntity *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedContactInformationEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedContactInformationEntityContactInformationResponseEntity *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.Companion")))
@interface SharedContactInformationEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactInformationEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntity")))
@interface SharedContactInformationEntityContactInformationResponseEntity : SharedBase
- (instancetype)initWithActivities:(NSArray<SharedContactInformationEntityContactInformationResponseEntityActivity *> * _Nullable)activities channelTypeInfo:(SharedContactInformationEntityContactInformationResponseEntityChannelTypeInfo * _Nullable)channelTypeInfo contactDetail:(NSArray<id> * _Nullable)contactDetail followerType:(NSString * _Nullable)followerType id:(NSString * _Nullable)id isBlock:(SharedBoolean * _Nullable)isBlock isFollow:(SharedBoolean * _Nullable)isFollow isSpam:(SharedBoolean * _Nullable)isSpam isVerify:(SharedBoolean * _Nullable)isVerify memberCount:(SharedInt * _Nullable)memberCount memberImage:(NSArray<id> * _Nullable)memberImage note:(NSArray<id> * _Nullable)note profile:(SharedContactInformationEntityContactInformationResponseEntityProfile * _Nullable)profile socialId:(NSString * _Nullable)socialId systemTags:(SharedContactInformationEntityContactInformationResponseEntityVerifySystemTags * _Nullable)systemTags tagsId:(NSArray<id> * _Nullable)tagsId verify:(SharedContactInformationEntityContactInformationResponseEntityVerify * _Nullable)verify __attribute__((swift_name("init(activities:channelTypeInfo:contactDetail:followerType:id:isBlock:isFollow:isSpam:isVerify:memberCount:memberImage:note:profile:socialId:systemTags:tagsId:verify:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactInformationEntityContactInformationResponseEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSArray<SharedContactInformationEntityContactInformationResponseEntityActivity *> * _Nullable activities __attribute__((swift_name("activities")));
@property (readonly) SharedContactInformationEntityContactInformationResponseEntityChannelTypeInfo * _Nullable channelTypeInfo __attribute__((swift_name("channelTypeInfo")));
@property (readonly) NSArray<id> * _Nullable contactDetail __attribute__((swift_name("contactDetail")));
@property (readonly) NSString * _Nullable followerType __attribute__((swift_name("followerType")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) SharedBoolean * _Nullable isBlock __attribute__((swift_name("isBlock")));
@property (readonly) SharedBoolean * _Nullable isFollow __attribute__((swift_name("isFollow")));
@property (readonly) SharedBoolean * _Nullable isSpam __attribute__((swift_name("isSpam")));
@property (readonly) SharedBoolean * _Nullable isVerify __attribute__((swift_name("isVerify")));
@property (readonly) SharedInt * _Nullable memberCount __attribute__((swift_name("memberCount")));
@property (readonly) NSArray<id> * _Nullable memberImage __attribute__((swift_name("memberImage")));
@property (readonly) NSArray<id> * _Nullable note __attribute__((swift_name("note")));
@property (readonly) SharedContactInformationEntityContactInformationResponseEntityProfile * _Nullable profile __attribute__((swift_name("profile")));
@property (readonly) NSString * _Nullable socialId __attribute__((swift_name("socialId")));
@property (readonly) SharedContactInformationEntityContactInformationResponseEntityVerifySystemTags * _Nullable systemTags __attribute__((swift_name("systemTags")));
@property (readonly) NSArray<id> * _Nullable tagsId __attribute__((swift_name("tagsId")));
@property (readonly) SharedContactInformationEntityContactInformationResponseEntityVerify * _Nullable verify __attribute__((swift_name("verify")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntityActivity")))
@interface SharedContactInformationEntityContactInformationResponseEntityActivity : SharedBase
- (instancetype)initWithType:(NSString * _Nullable)type adId:(NSString * _Nullable)adId adTitle:(NSString * _Nullable)adTitle postId:(NSString * _Nullable)postId adLink:(NSString * _Nullable)adLink photoUrl:(NSString * _Nullable)photoUrl videoUrl:(NSString * _Nullable)videoUrl thumbnail:(NSString * _Nullable)thumbnail originalPhotoUrl:(NSString * _Nullable)originalPhotoUrl originalVideoUrl:(NSString * _Nullable)originalVideoUrl historyLog:(NSArray<NSString *> * _Nullable)historyLog __attribute__((swift_name("init(type:adId:adTitle:postId:adLink:photoUrl:videoUrl:thumbnail:originalPhotoUrl:originalVideoUrl:historyLog:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactInformationEntityContactInformationResponseEntityActivityCompanion *companion __attribute__((swift_name("companion")));
- (SharedContactInformationEntityContactInformationResponseEntityActivity *)doCopyType:(NSString * _Nullable)type adId:(NSString * _Nullable)adId adTitle:(NSString * _Nullable)adTitle postId:(NSString * _Nullable)postId adLink:(NSString * _Nullable)adLink photoUrl:(NSString * _Nullable)photoUrl videoUrl:(NSString * _Nullable)videoUrl thumbnail:(NSString * _Nullable)thumbnail originalPhotoUrl:(NSString * _Nullable)originalPhotoUrl originalVideoUrl:(NSString * _Nullable)originalVideoUrl historyLog:(NSArray<NSString *> * _Nullable)historyLog __attribute__((swift_name("doCopy(type:adId:adTitle:postId:adLink:photoUrl:videoUrl:thumbnail:originalPhotoUrl:originalVideoUrl:historyLog:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable adId __attribute__((swift_name("adId")));
@property (readonly) NSString * _Nullable adLink __attribute__((swift_name("adLink")));
@property (readonly) NSString * _Nullable adTitle __attribute__((swift_name("adTitle")));
@property (readonly) NSArray<NSString *> * _Nullable historyLog __attribute__((swift_name("historyLog")));
@property (readonly) NSString * _Nullable originalPhotoUrl __attribute__((swift_name("originalPhotoUrl")));
@property (readonly) NSString * _Nullable originalVideoUrl __attribute__((swift_name("originalVideoUrl")));
@property (readonly) NSString * _Nullable photoUrl __attribute__((swift_name("photoUrl")));
@property (readonly) NSString * _Nullable postId __attribute__((swift_name("postId")));
@property (readonly) NSString * _Nullable thumbnail __attribute__((swift_name("thumbnail")));
@property (readonly) NSString * _Nullable type __attribute__((swift_name("type")));
@property (readonly) NSString * _Nullable videoUrl __attribute__((swift_name("videoUrl")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntityActivityCompanion")))
@interface SharedContactInformationEntityContactInformationResponseEntityActivityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactInformationEntityContactInformationResponseEntityActivityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntityChannelTypeInfo")))
@interface SharedContactInformationEntityContactInformationResponseEntityChannelTypeInfo : SharedBase
- (instancetype)initWithCreatedAt:(NSString * _Nullable)createdAt iconPng:(NSString * _Nullable)iconPng iconSvg:(NSString * _Nullable)iconSvg id:(NSString * _Nullable)id isActive:(SharedBoolean * _Nullable)isActive name:(NSString * _Nullable)name sort:(SharedInt * _Nullable)sort __attribute__((swift_name("init(createdAt:iconPng:iconSvg:id:isActive:name:sort:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactInformationEntityContactInformationResponseEntityChannelTypeInfoCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable createdAt __attribute__((swift_name("createdAt")));
@property (readonly) NSString * _Nullable iconPng __attribute__((swift_name("iconPng")));
@property (readonly) NSString * _Nullable iconSvg __attribute__((swift_name("iconSvg")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) SharedBoolean * _Nullable isActive __attribute__((swift_name("isActive")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) SharedInt * _Nullable sort __attribute__((swift_name("sort")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntityChannelTypeInfoCompanion")))
@interface SharedContactInformationEntityContactInformationResponseEntityChannelTypeInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactInformationEntityContactInformationResponseEntityChannelTypeInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntityCompanion")))
@interface SharedContactInformationEntityContactInformationResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactInformationEntityContactInformationResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntityContactDetail")))
@interface SharedContactInformationEntityContactInformationResponseEntityContactDetail : SharedBase
- (instancetype)initWithId:(NSString * _Nullable)id _key:(NSString * _Nullable)_key key:(NSString * _Nullable)key name:(NSString * _Nullable)name nameEn:(NSString * _Nullable)nameEn nameTh:(NSString * _Nullable)nameTh options:(NSArray<id> * _Nullable)options permission:(SharedPermissionEntity * _Nullable)permission type:(NSString * _Nullable)type value:(SharedKotlinx_serialization_jsonJsonElement * _Nullable)value __attribute__((swift_name("init(id:_key:key:name:nameEn:nameTh:options:permission:type:value:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactInformationEntityContactInformationResponseEntityContactDetailCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable _key __attribute__((swift_name("_key")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable key __attribute__((swift_name("key")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable nameEn __attribute__((swift_name("nameEn")));
@property (readonly) NSString * _Nullable nameTh __attribute__((swift_name("nameTh")));
@property (readonly) NSArray<id> * _Nullable options __attribute__((swift_name("options")));
@property (readonly) SharedPermissionEntity * _Nullable permission __attribute__((swift_name("permission")));
@property (readonly) NSString * _Nullable type __attribute__((swift_name("type")));
@property (readonly) SharedKotlinx_serialization_jsonJsonElement * _Nullable value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntityContactDetailCompanion")))
@interface SharedContactInformationEntityContactInformationResponseEntityContactDetailCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactInformationEntityContactInformationResponseEntityContactDetailCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntityMemberImage")))
@interface SharedContactInformationEntityContactInformationResponseEntityMemberImage : SharedBase
- (instancetype)initWithLine_image:(NSString * _Nullable)line_image __attribute__((swift_name("init(line_image:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactInformationEntityContactInformationResponseEntityMemberImageCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable line_image __attribute__((swift_name("line_image")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntityMemberImageCompanion")))
@interface SharedContactInformationEntityContactInformationResponseEntityMemberImageCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactInformationEntityContactInformationResponseEntityMemberImageCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntityNote")))
@interface SharedContactInformationEntityContactInformationResponseEntityNote : SharedBase
- (instancetype)initWithCreatedAt:(NSString * _Nullable)createdAt no:(SharedInt * _Nullable)no updatedAt:(NSString * _Nullable)updatedAt updatedBy:(NSString * _Nullable)updatedBy user:(SharedContactInformationEntityContactInformationResponseEntityNoteUser * _Nullable)user value:(NSString * _Nullable)value __attribute__((swift_name("init(createdAt:no:updatedAt:updatedBy:user:value:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactInformationEntityContactInformationResponseEntityNoteCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable createdAt __attribute__((swift_name("createdAt")));
@property (readonly) SharedInt * _Nullable no __attribute__((swift_name("no")));
@property (readonly) NSString * _Nullable updatedAt __attribute__((swift_name("updatedAt")));
@property (readonly) NSString * _Nullable updatedBy __attribute__((swift_name("updatedBy")));
@property (readonly) SharedContactInformationEntityContactInformationResponseEntityNoteUser * _Nullable user __attribute__((swift_name("user")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntityNoteCompanion")))
@interface SharedContactInformationEntityContactInformationResponseEntityNoteCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactInformationEntityContactInformationResponseEntityNoteCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntityNoteUser")))
@interface SharedContactInformationEntityContactInformationResponseEntityNoteUser : SharedBase
- (instancetype)initWithId:(NSString * _Nullable)id profile:(SharedContactInformationEntityContactInformationResponseEntityNoteUserProfile * _Nullable)profile __attribute__((swift_name("init(id:profile:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactInformationEntityContactInformationResponseEntityNoteUserCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) SharedContactInformationEntityContactInformationResponseEntityNoteUserProfile * _Nullable profile __attribute__((swift_name("profile")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntityNoteUserCompanion")))
@interface SharedContactInformationEntityContactInformationResponseEntityNoteUserCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactInformationEntityContactInformationResponseEntityNoteUserCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntityNoteUserProfile")))
@interface SharedContactInformationEntityContactInformationResponseEntityNoteUserProfile : SharedBase
- (instancetype)initWithFirstname:(NSString * _Nullable)firstname image:(NSString * _Nullable)image lastname:(NSString * _Nullable)lastname __attribute__((swift_name("init(firstname:image:lastname:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactInformationEntityContactInformationResponseEntityNoteUserProfileCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable firstname __attribute__((swift_name("firstname")));
@property (readonly) NSString * _Nullable image __attribute__((swift_name("image")));
@property (readonly) NSString * _Nullable lastname __attribute__((swift_name("lastname")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntityNoteUserProfileCompanion")))
@interface SharedContactInformationEntityContactInformationResponseEntityNoteUserProfileCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactInformationEntityContactInformationResponseEntityNoteUserProfileCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntityProfile")))
@interface SharedContactInformationEntityContactInformationResponseEntityProfile : SharedBase
- (instancetype)initWithCacheDate:(SharedLong * _Nullable)cacheDate lineEmail:(NSString * _Nullable)lineEmail lineImage:(NSString * _Nullable)lineImage lineName:(NSString * _Nullable)lineName lineNickname:(NSString * _Nullable)lineNickname __attribute__((swift_name("init(cacheDate:lineEmail:lineImage:lineName:lineNickname:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactInformationEntityContactInformationResponseEntityProfileCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedLong * _Nullable cacheDate __attribute__((swift_name("cacheDate")));
@property (readonly) NSString * _Nullable lineEmail __attribute__((swift_name("lineEmail")));
@property (readonly) NSString * _Nullable lineImage __attribute__((swift_name("lineImage")));
@property (readonly) NSString * _Nullable lineName __attribute__((swift_name("lineName")));
@property (readonly) NSString * _Nullable lineNickname __attribute__((swift_name("lineNickname")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntityProfileCompanion")))
@interface SharedContactInformationEntityContactInformationResponseEntityProfileCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactInformationEntityContactInformationResponseEntityProfileCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntityTagsId")))
@interface SharedContactInformationEntityContactInformationResponseEntityTagsId : SharedBase
- (instancetype)initWithId:(NSString * _Nullable)id text:(NSString * _Nullable)text __attribute__((swift_name("init(id:text:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactInformationEntityContactInformationResponseEntityTagsIdCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable text __attribute__((swift_name("text")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntityTagsIdCompanion")))
@interface SharedContactInformationEntityContactInformationResponseEntityTagsIdCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactInformationEntityContactInformationResponseEntityTagsIdCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntityVerify")))
@interface SharedContactInformationEntityContactInformationResponseEntityVerify : SharedBase
- (instancetype)initWithIsVerify:(SharedBoolean * _Nullable)isVerify logoutAt:(NSString * _Nullable)logoutAt systemTags:(SharedContactInformationEntityContactInformationResponseEntityVerifySystemTags * _Nullable)systemTags verifyAt:(NSString * _Nullable)verifyAt verifyType:(NSString * _Nullable)verifyType __attribute__((swift_name("init(isVerify:logoutAt:systemTags:verifyAt:verifyType:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactInformationEntityContactInformationResponseEntityVerifyCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedBoolean * _Nullable isVerify __attribute__((swift_name("isVerify")));
@property (readonly) NSString * _Nullable logoutAt __attribute__((swift_name("logoutAt")));
@property (readonly) SharedContactInformationEntityContactInformationResponseEntityVerifySystemTags * _Nullable systemTags __attribute__((swift_name("systemTags")));
@property (readonly) NSString * _Nullable verifyAt __attribute__((swift_name("verifyAt")));
@property (readonly) NSString * _Nullable verifyType __attribute__((swift_name("verifyType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntityVerifyCompanion")))
@interface SharedContactInformationEntityContactInformationResponseEntityVerifyCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactInformationEntityContactInformationResponseEntityVerifyCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntityVerifySystemTags")))
@interface SharedContactInformationEntityContactInformationResponseEntityVerifySystemTags : SharedBase
- (instancetype)initWithId:(NSString * _Nullable)id value:(NSString * _Nullable)value __attribute__((swift_name("init(id:value:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedContactInformationEntityContactInformationResponseEntityVerifySystemTagsCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationEntity.ContactInformationResponseEntityVerifySystemTagsCompanion")))
@interface SharedContactInformationEntityContactInformationResponseEntityVerifySystemTagsCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContactInformationEntityContactInformationResponseEntityVerifySystemTagsCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContractCreateLiveChatEntity")))
@interface SharedContractCreateLiveChatEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedGetFollowerChatEntityChatEntity *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedContractCreateLiveChatEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedGetFollowerChatEntityChatEntity *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContractCreateLiveChatEntity.Companion")))
@interface SharedContractCreateLiveChatEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedContractCreateLiveChatEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileFolderListEntity")))
@interface SharedFileFolderListEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(NSMutableArray<SharedFileFolderListEntityFolderEntity *> *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedFileFolderListEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSMutableArray<SharedFileFolderListEntityFolderEntity *> *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileFolderListEntity.Companion")))
@interface SharedFileFolderListEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFileFolderListEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileFolderListEntity.FolderEntity")))
@interface SharedFileFolderListEntityFolderEntity : SharedBase
- (instancetype)initWithFolderId:(NSString * _Nullable)folderId folderName:(NSString * _Nullable)folderName is_default:(SharedBoolean * _Nullable)is_default path:(NSString * _Nullable)path __attribute__((swift_name("init(folderId:folderName:is_default:path:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedFileFolderListEntityFolderEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable folderId __attribute__((swift_name("folderId")));
@property (readonly) NSString * _Nullable folderName __attribute__((swift_name("folderName")));
@property (readonly) SharedBoolean * _Nullable is_default __attribute__((swift_name("is_default")));
@property (readonly) NSString * _Nullable path __attribute__((swift_name("path")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileFolderListEntity.FolderEntityCompanion")))
@interface SharedFileFolderListEntityFolderEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFileFolderListEntityFolderEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileListEntity")))
@interface SharedFileListEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedFileListEntityFileListResponseEntity *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedFileListEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedFileListEntityFileListResponseEntity *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileListEntity.Companion")))
@interface SharedFileListEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFileListEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileListEntity.FileListResponseEntity")))
@interface SharedFileListEntityFileListResponseEntity : SharedBase
- (instancetype)initWithFiles:(NSMutableArray<SharedFileListEntityFilesEntity *> *)files __attribute__((swift_name("init(files:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedFileListEntityFileListResponseEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSMutableArray<SharedFileListEntityFilesEntity *> *files __attribute__((swift_name("files")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileListEntity.FileListResponseEntityCompanion")))
@interface SharedFileListEntityFileListResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFileListEntityFileListResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileListEntity.FilesEntity")))
@interface SharedFileListEntityFilesEntity : SharedBase
- (instancetype)initWithFileId:(NSString * _Nullable)fileId originalname:(NSString * _Nullable)originalname path_original:(NSString * _Nullable)path_original size:(SharedLong * _Nullable)size thumbnail:(NSString * _Nullable)thumbnail content_type:(NSString * _Nullable)content_type extension:(NSString * _Nullable)extension path:(NSString * _Nullable)path created_at:(NSString * _Nullable)created_at __attribute__((swift_name("init(fileId:originalname:path_original:size:thumbnail:content_type:extension:path:created_at:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedFileListEntityFilesEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable content_type __attribute__((swift_name("content_type")));
@property (readonly) NSString * _Nullable created_at __attribute__((swift_name("created_at")));
@property (readonly) NSString * _Nullable extension __attribute__((swift_name("extension")));
@property (readonly) NSString * _Nullable fileId __attribute__((swift_name("fileId")));
@property (readonly) NSString * _Nullable originalname __attribute__((swift_name("originalname")));
@property (readonly) NSString * _Nullable path __attribute__((swift_name("path")));
@property (readonly) NSString * _Nullable path_original __attribute__((swift_name("path_original")));
@property (readonly) SharedLong * _Nullable size __attribute__((swift_name("size")));
@property (readonly) NSString * _Nullable thumbnail __attribute__((swift_name("thumbnail")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileListEntity.FilesEntityCompanion")))
@interface SharedFileListEntityFilesEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedFileListEntityFilesEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatRoomListEntity")))
@interface SharedGetChatRoomListEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(NSMutableArray<SharedGetChatRoomListEntityGetChatListResponseEntity *> *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedGetChatRoomListEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSMutableArray<SharedGetChatRoomListEntityGetChatListResponseEntity *> *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatRoomListEntity.Companion")))
@interface SharedGetChatRoomListEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetChatRoomListEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatRoomListEntity.GetChatListDataEntity")))
@interface SharedGetChatRoomListEntityGetChatListDataEntity : SharedBase
- (instancetype)initWith_id:(NSString * _Nullable)_id type:(NSString * _Nullable)type sub_type:(NSString * _Nullable)sub_type chat_type:(NSString * _Nullable)chat_type mode:(NSString * _Nullable)mode is_replied:(SharedBoolean * _Nullable)is_replied message_title:(NSString * _Nullable)message_title timestamp:(SharedDouble * _Nullable)timestamp created_at:(NSString * _Nullable)created_at user_info:(SharedGetFollowerChatEntityUserInfoEntity * _Nullable)user_info group_info:(SharedGetFollowerChatEntityQueueInfoEntity * _Nullable)group_info follower:(SharedGetChatRoomListEntityLiveChatFollowerEntity * _Nullable)follower __attribute__((swift_name("init(_id:type:sub_type:chat_type:mode:is_replied:message_title:timestamp:created_at:user_info:group_info:follower:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetChatRoomListEntityGetChatListDataEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable _id __attribute__((swift_name("_id")));
@property (readonly) NSString * _Nullable chat_type __attribute__((swift_name("chat_type")));
@property (readonly) NSString * _Nullable created_at __attribute__((swift_name("created_at")));
@property (readonly) SharedGetChatRoomListEntityLiveChatFollowerEntity * _Nullable follower __attribute__((swift_name("follower")));
@property (readonly) SharedGetFollowerChatEntityQueueInfoEntity * _Nullable group_info __attribute__((swift_name("group_info")));
@property (readonly) SharedBoolean * _Nullable is_replied __attribute__((swift_name("is_replied")));
@property (readonly) NSString * _Nullable message_title __attribute__((swift_name("message_title")));
@property (readonly) NSString * _Nullable mode __attribute__((swift_name("mode")));
@property (readonly) NSString * _Nullable sub_type __attribute__((swift_name("sub_type")));
@property (readonly) SharedDouble * _Nullable timestamp __attribute__((swift_name("timestamp")));
@property (readonly) NSString * _Nullable type __attribute__((swift_name("type")));
@property (readonly) SharedGetFollowerChatEntityUserInfoEntity * _Nullable user_info __attribute__((swift_name("user_info")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatRoomListEntity.GetChatListDataEntityCompanion")))
@interface SharedGetChatRoomListEntityGetChatListDataEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetChatRoomListEntityGetChatListDataEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatRoomListEntity.GetChatListMessageEntity")))
@interface SharedGetChatRoomListEntityGetChatListMessageEntity : SharedBase
- (instancetype)initWithIs_business_time:(SharedBoolean * _Nullable)is_business_time status:(SharedInt * _Nullable)status __attribute__((swift_name("init(is_business_time:status:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetChatRoomListEntityGetChatListMessageEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedBoolean * _Nullable is_business_time __attribute__((swift_name("is_business_time")));
@property (readonly) SharedInt * _Nullable status __attribute__((swift_name("status")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatRoomListEntity.GetChatListMessageEntityCompanion")))
@interface SharedGetChatRoomListEntityGetChatListMessageEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetChatRoomListEntityGetChatListMessageEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatRoomListEntity.GetChatListResponseEntity")))
@interface SharedGetChatRoomListEntityGetChatListResponseEntity : SharedBase
- (instancetype)initWithMessage:(SharedGetChatRoomListEntityGetChatListMessageEntity * _Nullable)message data:(NSMutableArray<SharedGetChatRoomListEntityGetChatListDataEntity *> * _Nullable)data __attribute__((swift_name("init(message:data:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetChatRoomListEntityGetChatListResponseEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSMutableArray<SharedGetChatRoomListEntityGetChatListDataEntity *> * _Nullable data __attribute__((swift_name("data")));
@property (readonly) SharedGetChatRoomListEntityGetChatListMessageEntity * _Nullable message __attribute__((swift_name("message")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatRoomListEntity.GetChatListResponseEntityCompanion")))
@interface SharedGetChatRoomListEntityGetChatListResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetChatRoomListEntityGetChatListResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatRoomListEntity.LastLiveChatEntity")))
@interface SharedGetChatRoomListEntityLastLiveChatEntity : SharedBase
- (instancetype)initWithSwitch_mode_at:(NSString * _Nullable)switch_mode_at done_at:(NSString * _Nullable)done_at is_missed:(SharedBoolean * _Nullable)is_missed is_business:(SharedBoolean * _Nullable)is_business __attribute__((swift_name("init(switch_mode_at:done_at:is_missed:is_business:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetChatRoomListEntityLastLiveChatEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable done_at __attribute__((swift_name("done_at")));
@property (readonly) SharedBoolean * _Nullable is_business __attribute__((swift_name("is_business")));
@property (readonly) SharedBoolean * _Nullable is_missed __attribute__((swift_name("is_missed")));
@property (readonly) NSString * _Nullable switch_mode_at __attribute__((swift_name("switch_mode_at")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatRoomListEntity.LastLiveChatEntityCompanion")))
@interface SharedGetChatRoomListEntityLastLiveChatEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetChatRoomListEntityLastLiveChatEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatRoomListEntity.LiveChatFollowerEntity")))
@interface SharedGetChatRoomListEntityLiveChatFollowerEntity : SharedBase
- (instancetype)initWith_id:(NSString * _Nullable)_id profile:(SharedGetFollowerChatEntityProfileFollowerEntity *)profile __attribute__((swift_name("init(_id:profile:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetChatRoomListEntityLiveChatFollowerEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable _id __attribute__((swift_name("_id")));
@property (readonly) SharedGetFollowerChatEntityProfileFollowerEntity *profile __attribute__((swift_name("profile")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatRoomListEntity.LiveChatFollowerEntityCompanion")))
@interface SharedGetChatRoomListEntityLiveChatFollowerEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetChatRoomListEntityLiveChatFollowerEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity")))
@interface SharedGetFollowerChatEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedGetFollowerChatEntityGetFollowerChatResponseEntity *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedGetFollowerChatEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedGetFollowerChatEntityGetFollowerChatResponseEntity *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.Agent")))
@interface SharedGetFollowerChatEntityAgent : SharedBase
- (instancetype)initWith_id:(NSString * _Nullable)_id __attribute__((swift_name("init(_id:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetFollowerChatEntityAgentCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable _id __attribute__((swift_name("_id")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.AgentCompanion")))
@interface SharedGetFollowerChatEntityAgentCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetFollowerChatEntityAgentCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.ChannelTypeInfo")))
@interface SharedGetFollowerChatEntityChannelTypeInfo : SharedBase
- (instancetype)initWith_id:(NSString * _Nullable)_id name:(NSString * _Nullable)name __attribute__((swift_name("init(_id:name:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetFollowerChatEntityChannelTypeInfoCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable _id __attribute__((swift_name("_id")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.ChannelTypeInfoCompanion")))
@interface SharedGetFollowerChatEntityChannelTypeInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetFollowerChatEntityChannelTypeInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.ChatEntity")))
@interface SharedGetFollowerChatEntityChatEntity : SharedBase
- (instancetype)initWith_id:(NSString * _Nullable)_id is_block:(SharedBoolean * _Nullable)is_block is_spam:(SharedBoolean * _Nullable)is_spam is_follow:(SharedBoolean * _Nullable)is_follow social_id:(NSString * _Nullable)social_id follower_type:(NSString * _Nullable)follower_type channel_id:(NSString * _Nullable)channel_id channel_type_id:(NSString * _Nullable)channel_type_id channel_type_info:(SharedGetFollowerChatEntityChannelTypeInfo * _Nullable)channel_type_info member_count:(SharedInt * _Nullable)member_count menu_id:(NSString * _Nullable)menu_id mode:(NSString * _Nullable)mode mode_expired_at:(NSString * _Nullable)mode_expired_at last_livechat:(SharedGetFollowerChatEntityLiveChatMsgEntity * _Nullable)last_livechat profile:(SharedGetFollowerChatEntityProfileFollowerEntity * _Nullable)profile user_info:(SharedGetFollowerChatEntityUserInfoEntity * _Nullable)user_info count_not_is_replied:(SharedInt * _Nullable)count_not_is_replied __attribute__((swift_name("init(_id:is_block:is_spam:is_follow:social_id:follower_type:channel_id:channel_type_id:channel_type_info:member_count:menu_id:mode:mode_expired_at:last_livechat:profile:user_info:count_not_is_replied:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetFollowerChatEntityChatEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable _id __attribute__((swift_name("_id")));
@property (readonly) NSString * _Nullable channel_id __attribute__((swift_name("channel_id")));
@property (readonly) NSString * _Nullable channel_type_id __attribute__((swift_name("channel_type_id")));
@property (readonly) SharedGetFollowerChatEntityChannelTypeInfo * _Nullable channel_type_info __attribute__((swift_name("channel_type_info")));
@property (readonly) SharedInt * _Nullable count_not_is_replied __attribute__((swift_name("count_not_is_replied")));
@property (readonly) NSString * _Nullable follower_type __attribute__((swift_name("follower_type")));
@property (readonly) SharedBoolean * _Nullable is_block __attribute__((swift_name("is_block")));
@property (readonly) SharedBoolean * _Nullable is_follow __attribute__((swift_name("is_follow")));
@property (readonly) SharedBoolean * _Nullable is_spam __attribute__((swift_name("is_spam")));
@property (readonly) SharedGetFollowerChatEntityLiveChatMsgEntity * _Nullable last_livechat __attribute__((swift_name("last_livechat")));
@property (readonly) SharedInt * _Nullable member_count __attribute__((swift_name("member_count")));
@property (readonly) NSString * _Nullable menu_id __attribute__((swift_name("menu_id")));
@property (readonly) NSString * _Nullable mode __attribute__((swift_name("mode")));
@property (readonly) NSString * _Nullable mode_expired_at __attribute__((swift_name("mode_expired_at")));
@property (readonly) SharedGetFollowerChatEntityProfileFollowerEntity * _Nullable profile __attribute__((swift_name("profile")));
@property (readonly) NSString * _Nullable social_id __attribute__((swift_name("social_id")));
@property (readonly) SharedGetFollowerChatEntityUserInfoEntity * _Nullable user_info __attribute__((swift_name("user_info")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.ChatEntityCompanion")))
@interface SharedGetFollowerChatEntityChatEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetFollowerChatEntityChatEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.Companion")))
@interface SharedGetFollowerChatEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetFollowerChatEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.FollowerChatEntity")))
@interface SharedGetFollowerChatEntityFollowerChatEntity : SharedBase
- (instancetype)initWithData:(NSMutableArray<SharedGetFollowerChatEntityChatEntity *> * _Nullable)data total_count:(SharedInt * _Nullable)total_count __attribute__((swift_name("init(data:total_count:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetFollowerChatEntityFollowerChatEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSMutableArray<SharedGetFollowerChatEntityChatEntity *> * _Nullable data __attribute__((swift_name("data")));
@property (readonly) SharedInt * _Nullable total_count __attribute__((swift_name("total_count")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.FollowerChatEntityCompanion")))
@interface SharedGetFollowerChatEntityFollowerChatEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetFollowerChatEntityFollowerChatEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.GetFollowerChatResponseEntity")))
@interface SharedGetFollowerChatEntityGetFollowerChatResponseEntity : SharedBase
- (instancetype)initWithChat_status:(SharedInt * _Nullable)chat_status hide_bot:(SharedBoolean * _Nullable)hide_bot chat:(SharedGetFollowerChatEntityFollowerChatEntity *)chat chat_pin:(SharedGetFollowerChatEntityFollowerChatEntity *)chat_pin __attribute__((swift_name("init(chat_status:hide_bot:chat:chat_pin:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetFollowerChatEntityGetFollowerChatResponseEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedGetFollowerChatEntityFollowerChatEntity *chat __attribute__((swift_name("chat")));
@property (readonly) SharedGetFollowerChatEntityFollowerChatEntity *chat_pin __attribute__((swift_name("chat_pin")));
@property (readonly) SharedInt * _Nullable chat_status __attribute__((swift_name("chat_status")));
@property (readonly) SharedBoolean * _Nullable hide_bot __attribute__((swift_name("hide_bot")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.GetFollowerChatResponseEntityCompanion")))
@interface SharedGetFollowerChatEntityGetFollowerChatResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetFollowerChatEntityGetFollowerChatResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.LiveChatMsgEntity")))
@interface SharedGetFollowerChatEntityLiveChatMsgEntity : SharedBase
- (instancetype)initWith_id:(NSString * _Nullable)_id last_chat_message:(SharedGetFollowerChatEntityLiveChatMsgItemEntity * _Nullable)last_chat_message is_new_message:(SharedBoolean * _Nullable)is_new_message is_assign:(SharedBoolean * _Nullable)is_assign is_expired:(SharedBoolean * _Nullable)is_expired is_accepted:(SharedBoolean * _Nullable)is_accepted is_done:(SharedBoolean * _Nullable)is_done is_business:(SharedBoolean * _Nullable)is_business is_missed:(SharedBoolean * _Nullable)is_missed updated_at:(NSString * _Nullable)updated_at expired_at:(NSString * _Nullable)expired_at channel_id:(NSString * _Nullable)channel_id channel_type_id:(NSString * _Nullable)channel_type_id user_id:(NSString * _Nullable)user_id livechat_id:(NSString * _Nullable)livechat_id count_down_second:(SharedInt * _Nullable)count_down_second queue_info:(SharedGetFollowerChatEntityQueueInfoEntity * _Nullable)queue_info __attribute__((swift_name("init(_id:last_chat_message:is_new_message:is_assign:is_expired:is_accepted:is_done:is_business:is_missed:updated_at:expired_at:channel_id:channel_type_id:user_id:livechat_id:count_down_second:queue_info:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetFollowerChatEntityLiveChatMsgEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable _id __attribute__((swift_name("_id")));
@property (readonly) NSString * _Nullable channel_id __attribute__((swift_name("channel_id")));
@property (readonly) NSString * _Nullable channel_type_id __attribute__((swift_name("channel_type_id")));
@property (readonly) SharedInt * _Nullable count_down_second __attribute__((swift_name("count_down_second")));
@property (readonly) NSString * _Nullable expired_at __attribute__((swift_name("expired_at")));
@property (readonly) SharedBoolean * _Nullable is_accepted __attribute__((swift_name("is_accepted")));
@property (readonly) SharedBoolean * _Nullable is_assign __attribute__((swift_name("is_assign")));
@property (readonly) SharedBoolean * _Nullable is_business __attribute__((swift_name("is_business")));
@property (readonly) SharedBoolean * _Nullable is_done __attribute__((swift_name("is_done")));
@property (readonly) SharedBoolean * _Nullable is_expired __attribute__((swift_name("is_expired")));
@property (readonly) SharedBoolean * _Nullable is_missed __attribute__((swift_name("is_missed")));
@property (readonly) SharedBoolean * _Nullable is_new_message __attribute__((swift_name("is_new_message")));
@property (readonly) SharedGetFollowerChatEntityLiveChatMsgItemEntity * _Nullable last_chat_message __attribute__((swift_name("last_chat_message")));
@property (readonly) NSString * _Nullable livechat_id __attribute__((swift_name("livechat_id")));
@property (readonly) SharedGetFollowerChatEntityQueueInfoEntity * _Nullable queue_info __attribute__((swift_name("queue_info")));
@property (readonly) NSString * _Nullable updated_at __attribute__((swift_name("updated_at")));
@property (readonly) NSString * _Nullable user_id __attribute__((swift_name("user_id")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.LiveChatMsgEntityCompanion")))
@interface SharedGetFollowerChatEntityLiveChatMsgEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetFollowerChatEntityLiveChatMsgEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.LiveChatMsgItemEntity")))
@interface SharedGetFollowerChatEntityLiveChatMsgItemEntity : SharedBase
- (instancetype)initWithMessage_title:(NSString * _Nullable)message_title timestamp:(SharedDouble * _Nullable)timestamp __attribute__((swift_name("init(message_title:timestamp:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetFollowerChatEntityLiveChatMsgItemEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable message_title __attribute__((swift_name("message_title")));
@property (readonly) SharedDouble * _Nullable timestamp __attribute__((swift_name("timestamp")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.LiveChatMsgItemEntityCompanion")))
@interface SharedGetFollowerChatEntityLiveChatMsgItemEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetFollowerChatEntityLiveChatMsgItemEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.ProfileFollowerEntity")))
@interface SharedGetFollowerChatEntityProfileFollowerEntity : SharedBase
- (instancetype)initWithLine_name:(NSString * _Nullable)line_name line_image:(NSString * _Nullable)line_image line_nickname:(NSString * _Nullable)line_nickname __attribute__((swift_name("init(line_name:line_image:line_nickname:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetFollowerChatEntityProfileFollowerEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable line_image __attribute__((swift_name("line_image")));
@property (readonly) NSString * _Nullable line_name __attribute__((swift_name("line_name")));
@property (readonly) NSString * _Nullable line_nickname __attribute__((swift_name("line_nickname")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.ProfileFollowerEntityCompanion")))
@interface SharedGetFollowerChatEntityProfileFollowerEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetFollowerChatEntityProfileFollowerEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.QueueInfoEntity")))
@interface SharedGetFollowerChatEntityQueueInfoEntity : SharedBase
- (instancetype)initWith_id:(NSString * _Nullable)_id company_id:(NSString * _Nullable)company_id queue_name:(NSString * _Nullable)queue_name channel_id:(NSString * _Nullable)channel_id setting:(SharedGetFollowerChatEntityQueueInfoSettingEntity * _Nullable)setting agent_list:(NSArray<SharedGetFollowerChatEntityAgent *> * _Nullable)agent_list __attribute__((swift_name("init(_id:company_id:queue_name:channel_id:setting:agent_list:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetFollowerChatEntityQueueInfoEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable _id __attribute__((swift_name("_id")));
@property (readonly) NSArray<SharedGetFollowerChatEntityAgent *> * _Nullable agent_list __attribute__((swift_name("agent_list")));
@property (readonly) NSString * _Nullable channel_id __attribute__((swift_name("channel_id")));
@property (readonly) NSString * _Nullable company_id __attribute__((swift_name("company_id")));
@property (readonly) NSString * _Nullable queue_name __attribute__((swift_name("queue_name")));
@property (readonly) SharedGetFollowerChatEntityQueueInfoSettingEntity * _Nullable setting __attribute__((swift_name("setting")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.QueueInfoEntityCompanion")))
@interface SharedGetFollowerChatEntityQueueInfoEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetFollowerChatEntityQueueInfoEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.QueueInfoSettingEntity")))
@interface SharedGetFollowerChatEntityQueueInfoSettingEntity : SharedBase
- (instancetype)initWithVisibility:(SharedBoolean * _Nullable)visibility __attribute__((swift_name("init(visibility:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetFollowerChatEntityQueueInfoSettingEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedBoolean * _Nullable visibility __attribute__((swift_name("visibility")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.QueueInfoSettingEntityCompanion")))
@interface SharedGetFollowerChatEntityQueueInfoSettingEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetFollowerChatEntityQueueInfoSettingEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.SocketUserEntity")))
@interface SharedGetFollowerChatEntitySocketUserEntity : SharedBase
- (instancetype)initWithCompany_id:(NSString * _Nullable)company_id socket_status_expired:(NSString * _Nullable)socket_status_expired channel_id:(NSString * _Nullable)channel_id __attribute__((swift_name("init(company_id:socket_status_expired:channel_id:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetFollowerChatEntitySocketUserEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable channel_id __attribute__((swift_name("channel_id")));
@property (readonly) NSString * _Nullable company_id __attribute__((swift_name("company_id")));
@property (readonly) NSString * _Nullable socket_status_expired __attribute__((swift_name("socket_status_expired")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.SocketUserEntityCompanion")))
@interface SharedGetFollowerChatEntitySocketUserEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetFollowerChatEntitySocketUserEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.UserInfoEntity")))
@interface SharedGetFollowerChatEntityUserInfoEntity : SharedBase
- (instancetype)initWith_id:(NSString * _Nullable)_id firstname:(NSString * _Nullable)firstname lastname:(NSString * _Nullable)lastname image:(NSString * _Nullable)image socket:(SharedGetFollowerChatEntitySocketUserEntity * _Nullable)socket __attribute__((swift_name("init(_id:firstname:lastname:image:socket:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGetFollowerChatEntityUserInfoEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable _id __attribute__((swift_name("_id")));
@property (readonly) NSString * _Nullable firstname __attribute__((swift_name("firstname")));
@property (readonly) NSString * _Nullable image __attribute__((swift_name("image")));
@property (readonly) NSString * _Nullable lastname __attribute__((swift_name("lastname")));
@property (readonly) SharedGetFollowerChatEntitySocketUserEntity * _Nullable socket __attribute__((swift_name("socket")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatEntity.UserInfoEntityCompanion")))
@interface SharedGetFollowerChatEntityUserInfoEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGetFollowerChatEntityUserInfoEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupAssignEntity")))
@interface SharedGroupAssignEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(NSArray<SharedGroupAssignEntityGroupFilterResponseEntity *> *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedGroupAssignEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSArray<SharedGroupAssignEntityGroupFilterResponseEntity *> *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupAssignEntity.Companion")))
@interface SharedGroupAssignEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGroupAssignEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupAssignEntity.GroupFilterResponseEntity")))
@interface SharedGroupAssignEntityGroupFilterResponseEntity : SharedBase
- (instancetype)initWithGroupId:(NSString * _Nullable)groupId groupName:(NSString * _Nullable)groupName listOfAgent:(NSArray<SharedGroupAssignEntityGroupFilterResponseEntityAgentInfo *> * _Nullable)listOfAgent __attribute__((swift_name("init(groupId:groupName:listOfAgent:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGroupAssignEntityGroupFilterResponseEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable groupId __attribute__((swift_name("groupId")));
@property (readonly) NSString * _Nullable groupName __attribute__((swift_name("groupName")));
@property (readonly) NSArray<SharedGroupAssignEntityGroupFilterResponseEntityAgentInfo *> * _Nullable listOfAgent __attribute__((swift_name("listOfAgent")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupAssignEntity.GroupFilterResponseEntityAgentInfo")))
@interface SharedGroupAssignEntityGroupFilterResponseEntityAgentInfo : SharedBase
- (instancetype)initWithUser_id:(NSString * _Nullable)user_id name:(NSString * _Nullable)name agentImage:(NSString * _Nullable)agentImage agentRoleName:(NSString * _Nullable)agentRoleName is_mobile:(SharedBoolean * _Nullable)is_mobile is_online:(SharedBoolean * _Nullable)is_online is_full:(SharedBoolean * _Nullable)is_full __attribute__((swift_name("init(user_id:name:agentImage:agentRoleName:is_mobile:is_online:is_full:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGroupAssignEntityGroupFilterResponseEntityAgentInfoCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable agentImage __attribute__((swift_name("agentImage")));
@property (readonly) NSString * _Nullable agentRoleName __attribute__((swift_name("agentRoleName")));
@property (readonly) SharedBoolean * _Nullable is_full __attribute__((swift_name("is_full")));
@property (readonly) SharedBoolean * _Nullable is_mobile __attribute__((swift_name("is_mobile")));
@property (readonly) SharedBoolean * _Nullable is_online __attribute__((swift_name("is_online")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable user_id __attribute__((swift_name("user_id")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupAssignEntity.GroupFilterResponseEntityAgentInfoCompanion")))
@interface SharedGroupAssignEntityGroupFilterResponseEntityAgentInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGroupAssignEntityGroupFilterResponseEntityAgentInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupAssignEntity.GroupFilterResponseEntityCompanion")))
@interface SharedGroupAssignEntityGroupFilterResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGroupAssignEntityGroupFilterResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupFilterEntity")))
@interface SharedGroupFilterEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(NSArray<SharedGroupFilterEntityGroupFilterResponseEntity *> *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedGroupFilterEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSArray<SharedGroupFilterEntityGroupFilterResponseEntity *> *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupFilterEntity.Companion")))
@interface SharedGroupFilterEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGroupFilterEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupFilterEntity.GroupFilterResponseEntity")))
@interface SharedGroupFilterEntityGroupFilterResponseEntity : SharedBase
- (instancetype)initWithGroupId:(NSString * _Nullable)groupId groupName:(NSString * _Nullable)groupName listOfAgent:(NSArray<SharedGroupFilterEntityGroupFilterResponseEntityAgentInfo *> * _Nullable)listOfAgent __attribute__((swift_name("init(groupId:groupName:listOfAgent:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGroupFilterEntityGroupFilterResponseEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable groupId __attribute__((swift_name("groupId")));
@property (readonly) NSString * _Nullable groupName __attribute__((swift_name("groupName")));
@property (readonly) NSArray<SharedGroupFilterEntityGroupFilterResponseEntityAgentInfo *> * _Nullable listOfAgent __attribute__((swift_name("listOfAgent")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupFilterEntity.GroupFilterResponseEntityAgentInfo")))
@interface SharedGroupFilterEntityGroupFilterResponseEntityAgentInfo : SharedBase
- (instancetype)initWithUser_id:(NSString * _Nullable)user_id name:(NSString * _Nullable)name __attribute__((swift_name("init(user_id:name:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedGroupFilterEntityGroupFilterResponseEntityAgentInfoCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable user_id __attribute__((swift_name("user_id")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupFilterEntity.GroupFilterResponseEntityAgentInfoCompanion")))
@interface SharedGroupFilterEntityGroupFilterResponseEntityAgentInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGroupFilterEntityGroupFilterResponseEntityAgentInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupFilterEntity.GroupFilterResponseEntityCompanion")))
@interface SharedGroupFilterEntityGroupFilterResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedGroupFilterEntityGroupFilterResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MasterDataChatEntity")))
@interface SharedMasterDataChatEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedMasterDataChatEntityMasterDataChatResponseEntity *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedMasterDataChatEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedMasterDataChatEntityMasterDataChatResponseEntity *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MasterDataChatEntity.ChannelType")))
@interface SharedMasterDataChatEntityChannelType : SharedBase
- (instancetype)initWithChannelId:(NSString * _Nullable)channelId channelName:(NSString * _Nullable)channelName channelActive:(SharedBoolean * _Nullable)channelActive __attribute__((swift_name("init(channelId:channelName:channelActive:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedMasterDataChatEntityChannelTypeCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedBoolean * _Nullable channelActive __attribute__((swift_name("channelActive")));
@property (readonly) NSString * _Nullable channelId __attribute__((swift_name("channelId")));
@property (readonly) NSString * _Nullable channelName __attribute__((swift_name("channelName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MasterDataChatEntity.ChannelTypeCompanion")))
@interface SharedMasterDataChatEntityChannelTypeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMasterDataChatEntityChannelTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MasterDataChatEntity.ChatType")))
@interface SharedMasterDataChatEntityChatType : SharedBase
- (instancetype)initWithChatType1:(NSArray<SharedMasterDataChatEntityChatTypeDetail *> *)chatType1 chatType2:(NSArray<SharedMasterDataChatEntityChatTypeDetail *> *)chatType2 __attribute__((swift_name("init(chatType1:chatType2:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedMasterDataChatEntityChatTypeCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSArray<SharedMasterDataChatEntityChatTypeDetail *> *chatType1 __attribute__((swift_name("chatType1")));
@property (readonly) NSArray<SharedMasterDataChatEntityChatTypeDetail *> *chatType2 __attribute__((swift_name("chatType2")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MasterDataChatEntity.ChatTypeCompanion")))
@interface SharedMasterDataChatEntityChatTypeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMasterDataChatEntityChatTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MasterDataChatEntity.ChatTypeDetail")))
@interface SharedMasterDataChatEntityChatTypeDetail : SharedBase
- (instancetype)initWithChatTypeName:(NSString * _Nullable)chatTypeName chatTypeValue:(NSString * _Nullable)chatTypeValue __attribute__((swift_name("init(chatTypeName:chatTypeValue:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedMasterDataChatEntityChatTypeDetailCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable chatTypeName __attribute__((swift_name("chatTypeName")));
@property (readonly) NSString * _Nullable chatTypeValue __attribute__((swift_name("chatTypeValue")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MasterDataChatEntity.ChatTypeDetailCompanion")))
@interface SharedMasterDataChatEntityChatTypeDetailCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMasterDataChatEntityChatTypeDetailCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MasterDataChatEntity.Companion")))
@interface SharedMasterDataChatEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMasterDataChatEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MasterDataChatEntity.MasterDataChatResponseEntity")))
@interface SharedMasterDataChatEntityMasterDataChatResponseEntity : SharedBase
- (instancetype)initWithListChannelType:(NSArray<SharedMasterDataChatEntityChannelType *> * _Nullable)listChannelType listChatType:(SharedMasterDataChatEntityChatType *)listChatType __attribute__((swift_name("init(listChannelType:listChatType:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedMasterDataChatEntityMasterDataChatResponseEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSArray<SharedMasterDataChatEntityChannelType *> * _Nullable listChannelType __attribute__((swift_name("listChannelType")));
@property (readonly) SharedMasterDataChatEntityChatType *listChatType __attribute__((swift_name("listChatType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MasterDataChatEntity.MasterDataChatResponseEntityCompanion")))
@interface SharedMasterDataChatEntityMasterDataChatResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMasterDataChatEntityMasterDataChatResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NotificationCountEntity")))
@interface SharedNotificationCountEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedNotificationCountEntityNotificationCountResponseEntity *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedNotificationCountEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedNotificationCountEntityNotificationCountResponseEntity *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NotificationCountEntity.Companion")))
@interface SharedNotificationCountEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedNotificationCountEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NotificationCountEntity.NotificationCountResponseEntity")))
@interface SharedNotificationCountEntityNotificationCountResponseEntity : SharedBase
- (instancetype)initWithNot_repiled:(SharedInt * _Nullable)not_repiled __attribute__((swift_name("init(not_repiled:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedNotificationCountEntityNotificationCountResponseEntityCompanion *companion __attribute__((swift_name("companion")));
- (SharedNotificationCountEntityNotificationCountResponseEntity *)doCopyNot_repiled:(SharedInt * _Nullable)not_repiled __attribute__((swift_name("doCopy(not_repiled:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedInt * _Nullable not_repiled __attribute__((swift_name("not_repiled")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NotificationCountEntity.NotificationCountResponseEntityCompanion")))
@interface SharedNotificationCountEntityNotificationCountResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedNotificationCountEntityNotificationCountResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PermissionEntity")))
@interface SharedPermissionEntity : SharedBase
- (instancetype)initWithDefault:(NSArray<id> * _Nullable)default_ verify:(NSArray<id> * _Nullable)verify __attribute__((swift_name("init(default:verify:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedPermissionEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly, getter=default) NSArray<id> * _Nullable default_ __attribute__((swift_name("default_")));
@property (readonly) NSArray<id> * _Nullable verify __attribute__((swift_name("verify")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PermissionEntity.Action")))
@interface SharedPermissionEntityAction : SharedBase
- (instancetype)initWithActionType:(SharedInt * _Nullable)actionType roleId:(NSString * _Nullable)roleId __attribute__((swift_name("init(actionType:roleId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedPermissionEntityActionCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedInt * _Nullable actionType __attribute__((swift_name("actionType")));
@property (readonly) NSString * _Nullable roleId __attribute__((swift_name("roleId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PermissionEntity.ActionCompanion")))
@interface SharedPermissionEntityActionCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPermissionEntityActionCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PermissionEntity.Companion")))
@interface SharedPermissionEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPermissionEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplyMessageEntity")))
@interface SharedReplyMessageEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedReplyMessageEntityReplyMessageDetailEntity *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedReplyMessageEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedReplyMessageEntityReplyMessageDetailEntity *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplyMessageEntity.Companion")))
@interface SharedReplyMessageEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedReplyMessageEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplyMessageEntity.ReplyMessageDetailEntity")))
@interface SharedReplyMessageEntityReplyMessageDetailEntity : SharedBase
- (instancetype)initWithTemplate:(NSMutableArray<SharedReplyMessageEntityReplyMessageTemplateEntity *> *)template_ __attribute__((swift_name("init(template:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedReplyMessageEntityReplyMessageDetailEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly, getter=template) NSMutableArray<SharedReplyMessageEntityReplyMessageTemplateEntity *> *template_ __attribute__((swift_name("template_")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplyMessageEntity.ReplyMessageDetailEntityCompanion")))
@interface SharedReplyMessageEntityReplyMessageDetailEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedReplyMessageEntityReplyMessageDetailEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplyMessageEntity.ReplyMessageTemplateEntity")))
@interface SharedReplyMessageEntityReplyMessageTemplateEntity : SharedBase
- (instancetype)initWithChannel_type_id:(NSString * _Nullable)channel_type_id messages_sent:(SharedChatMessageEntityMessageSentEntity * _Nullable)messages_sent messages_display:(SharedChatMessageEntityMessageSentEntity * _Nullable)messages_display __attribute__((swift_name("init(channel_type_id:messages_sent:messages_display:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedReplyMessageEntityReplyMessageTemplateEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable channel_type_id __attribute__((swift_name("channel_type_id")));
@property (readonly) SharedChatMessageEntityMessageSentEntity * _Nullable messages_display __attribute__((swift_name("messages_display")));
@property (readonly) SharedChatMessageEntityMessageSentEntity * _Nullable messages_sent __attribute__((swift_name("messages_sent")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplyMessageEntity.ReplyMessageTemplateEntityCompanion")))
@interface SharedReplyMessageEntityReplyMessageTemplateEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedReplyMessageEntityReplyMessageTemplateEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplyTemplateEntity")))
@interface SharedReplyTemplateEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(NSMutableArray<SharedReplyTemplateEntityTemplateGroupEntity *> *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedReplyTemplateEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSMutableArray<SharedReplyTemplateEntityTemplateGroupEntity *> *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplyTemplateEntity.Companion")))
@interface SharedReplyTemplateEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedReplyTemplateEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplyTemplateEntity.ReplyEntity")))
@interface SharedReplyTemplateEntityReplyEntity : SharedBase
- (instancetype)initWithReply_message_name:(NSString * _Nullable)reply_message_name status:(SharedBoolean * _Nullable)status _id:(NSString * _Nullable)_id __attribute__((swift_name("init(reply_message_name:status:_id:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedReplyTemplateEntityReplyEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable _id __attribute__((swift_name("_id")));
@property (readonly) NSString * _Nullable reply_message_name __attribute__((swift_name("reply_message_name")));
@property (readonly) SharedBoolean * _Nullable status __attribute__((swift_name("status")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplyTemplateEntity.ReplyEntityCompanion")))
@interface SharedReplyTemplateEntityReplyEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedReplyTemplateEntityReplyEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplyTemplateEntity.TemplateGroupEntity")))
@interface SharedReplyTemplateEntityTemplateGroupEntity : SharedBase
- (instancetype)initWithGroup_name:(NSString * _Nullable)group_name group_reply_message_id:(NSString * _Nullable)group_reply_message_id reply_message:(NSMutableArray<SharedReplyTemplateEntityReplyEntity *> * _Nullable)reply_message __attribute__((swift_name("init(group_name:group_reply_message_id:reply_message:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedReplyTemplateEntityTemplateGroupEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable group_name __attribute__((swift_name("group_name")));
@property (readonly) NSString * _Nullable group_reply_message_id __attribute__((swift_name("group_reply_message_id")));
@property (readonly) NSMutableArray<SharedReplyTemplateEntityReplyEntity *> * _Nullable reply_message __attribute__((swift_name("reply_message")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplyTemplateEntity.TemplateGroupEntityCompanion")))
@interface SharedReplyTemplateEntityTemplateGroupEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedReplyTemplateEntityTemplateGroupEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageEntity")))
@interface SharedSearchMessageEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedSearchMessageEntitySearchMessageResponse *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedSearchMessageEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedSearchMessageEntitySearchMessageResponse *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageEntity.Companion")))
@interface SharedSearchMessageEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchMessageEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageEntity.SearchMessageResponse")))
@interface SharedSearchMessageEntitySearchMessageResponse : SharedBase
- (instancetype)initWithMessage:(NSArray<SharedSearchMessageEntitySearchMessageResponseMessage *> *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSearchMessageEntitySearchMessageResponseCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSArray<SharedSearchMessageEntitySearchMessageResponseMessage *> *message __attribute__((swift_name("message")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageEntity.SearchMessageResponseCompanion")))
@interface SharedSearchMessageEntitySearchMessageResponseCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchMessageEntitySearchMessageResponseCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageEntity.SearchMessageResponseMessage")))
@interface SharedSearchMessageEntitySearchMessageResponseMessage : SharedBase
- (instancetype)initWith_id:(NSString *)_id channelId:(NSString *)channelId channelTypeId:(NSString *)channelTypeId channelTypeInfo:(SharedSearchMessageEntitySearchMessageResponseMessageChannelTypeInfo *)channelTypeInfo countMessage:(SharedInt * _Nullable)countMessage followerType:(NSString *)followerType memberCount:(NSString * _Nullable)memberCount profile:(SharedSearchMessageEntitySearchMessageResponseMessageProfile *)profile __attribute__((swift_name("init(_id:channelId:channelTypeId:channelTypeInfo:countMessage:followerType:memberCount:profile:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSearchMessageEntitySearchMessageResponseMessageCompanion *companion __attribute__((swift_name("companion")));
- (SharedSearchMessageEntitySearchMessageResponseMessage *)doCopy_id:(NSString *)_id channelId:(NSString *)channelId channelTypeId:(NSString *)channelTypeId channelTypeInfo:(SharedSearchMessageEntitySearchMessageResponseMessageChannelTypeInfo *)channelTypeInfo countMessage:(SharedInt * _Nullable)countMessage followerType:(NSString *)followerType memberCount:(NSString * _Nullable)memberCount profile:(SharedSearchMessageEntitySearchMessageResponseMessageProfile *)profile __attribute__((swift_name("doCopy(_id:channelId:channelTypeId:channelTypeInfo:countMessage:followerType:memberCount:profile:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *_id __attribute__((swift_name("_id")));
@property (readonly) NSString *channelId __attribute__((swift_name("channelId")));
@property (readonly) NSString *channelTypeId __attribute__((swift_name("channelTypeId")));
@property (readonly) SharedSearchMessageEntitySearchMessageResponseMessageChannelTypeInfo *channelTypeInfo __attribute__((swift_name("channelTypeInfo")));
@property (readonly) SharedInt * _Nullable countMessage __attribute__((swift_name("countMessage")));
@property (readonly) NSString *followerType __attribute__((swift_name("followerType")));
@property (readonly) NSString * _Nullable memberCount __attribute__((swift_name("memberCount")));
@property (readonly) SharedSearchMessageEntitySearchMessageResponseMessageProfile *profile __attribute__((swift_name("profile")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageEntity.SearchMessageResponseMessageChannelTypeInfo")))
@interface SharedSearchMessageEntitySearchMessageResponseMessageChannelTypeInfo : SharedBase
- (instancetype)initWithName:(NSString * _Nullable)name __attribute__((swift_name("init(name:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSearchMessageEntitySearchMessageResponseMessageChannelTypeInfoCompanion *companion __attribute__((swift_name("companion")));
- (SharedSearchMessageEntitySearchMessageResponseMessageChannelTypeInfo *)doCopyName:(NSString * _Nullable)name __attribute__((swift_name("doCopy(name:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageEntity.SearchMessageResponseMessageChannelTypeInfoCompanion")))
@interface SharedSearchMessageEntitySearchMessageResponseMessageChannelTypeInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchMessageEntitySearchMessageResponseMessageChannelTypeInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageEntity.SearchMessageResponseMessageCompanion")))
@interface SharedSearchMessageEntitySearchMessageResponseMessageCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchMessageEntitySearchMessageResponseMessageCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageEntity.SearchMessageResponseMessageProfile")))
@interface SharedSearchMessageEntitySearchMessageResponseMessageProfile : SharedBase
- (instancetype)initWithLine_name:(NSString * _Nullable)line_name line_image:(NSString * _Nullable)line_image line_nickname:(NSString * _Nullable)line_nickname __attribute__((swift_name("init(line_name:line_image:line_nickname:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSearchMessageEntitySearchMessageResponseMessageProfileCompanion *companion __attribute__((swift_name("companion")));
- (SharedSearchMessageEntitySearchMessageResponseMessageProfile *)doCopyLine_name:(NSString * _Nullable)line_name line_image:(NSString * _Nullable)line_image line_nickname:(NSString * _Nullable)line_nickname __attribute__((swift_name("doCopy(line_name:line_image:line_nickname:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable line_image __attribute__((swift_name("line_image")));
@property (readonly) NSString * _Nullable line_name __attribute__((swift_name("line_name")));
@property (readonly) NSString * _Nullable line_nickname __attribute__((swift_name("line_nickname")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageEntity.SearchMessageResponseMessageProfileCompanion")))
@interface SharedSearchMessageEntitySearchMessageResponseMessageProfileCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchMessageEntitySearchMessageResponseMessageProfileCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageInChatEntity")))
@interface SharedSearchMessageInChatEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedSearchMessageInChatEntitySearchMessageInChatResponse *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedSearchMessageInChatEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedSearchMessageInChatEntitySearchMessageInChatResponse *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageInChatEntity.Companion")))
@interface SharedSearchMessageInChatEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchMessageInChatEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageInChatEntity.SearchMessageInChatResponse")))
@interface SharedSearchMessageInChatEntitySearchMessageInChatResponse : SharedBase
- (instancetype)initWithTotalCount:(SharedInt * _Nullable)totalCount messageFound:(NSArray<SharedSearchMessageInChatEntitySearchMessageInChatResponseMessage *> *)messageFound messageFoundAll:(NSArray<SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageFoundAll *> * _Nullable)messageFoundAll __attribute__((swift_name("init(totalCount:messageFound:messageFoundAll:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSearchMessageInChatEntitySearchMessageInChatResponseCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSArray<SharedSearchMessageInChatEntitySearchMessageInChatResponseMessage *> *messageFound __attribute__((swift_name("messageFound")));
@property (readonly) NSArray<SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageFoundAll *> * _Nullable messageFoundAll __attribute__((swift_name("messageFoundAll")));
@property (readonly) SharedInt * _Nullable totalCount __attribute__((swift_name("totalCount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageInChatEntity.SearchMessageInChatResponseCompanion")))
@interface SharedSearchMessageInChatEntitySearchMessageInChatResponseCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchMessageInChatEntitySearchMessageInChatResponseCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageInChatEntity.SearchMessageInChatResponseMessage")))
@interface SharedSearchMessageInChatEntitySearchMessageInChatResponseMessage : SharedBase
- (instancetype)initWith_id:(NSString *)_id messageText:(NSString * _Nullable)messageText messageFromType:(NSString * _Nullable)messageFromType messageToType:(NSString * _Nullable)messageToType timestamp:(double)timestamp followerId:(NSString *)followerId userInfo:(SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageUser * _Nullable)userInfo messagesSent:(NSArray<SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageMessageInfo *> * _Nullable)messagesSent memberInfo:(NSArray<SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageMember *> * _Nullable)memberInfo __attribute__((swift_name("init(_id:messageText:messageFromType:messageToType:timestamp:followerId:userInfo:messagesSent:memberInfo:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageCompanion *companion __attribute__((swift_name("companion")));
- (SharedSearchMessageInChatEntitySearchMessageInChatResponseMessage *)doCopy_id:(NSString *)_id messageText:(NSString * _Nullable)messageText messageFromType:(NSString * _Nullable)messageFromType messageToType:(NSString * _Nullable)messageToType timestamp:(double)timestamp followerId:(NSString *)followerId userInfo:(SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageUser * _Nullable)userInfo messagesSent:(NSArray<SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageMessageInfo *> * _Nullable)messagesSent memberInfo:(NSArray<SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageMember *> * _Nullable)memberInfo __attribute__((swift_name("doCopy(_id:messageText:messageFromType:messageToType:timestamp:followerId:userInfo:messagesSent:memberInfo:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *_id __attribute__((swift_name("_id")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@property (readonly) NSArray<SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageMember *> * _Nullable memberInfo __attribute__((swift_name("memberInfo")));
@property (readonly) NSString * _Nullable messageFromType __attribute__((swift_name("messageFromType")));
@property (readonly) NSString * _Nullable messageText __attribute__((swift_name("messageText")));
@property (readonly) NSString * _Nullable messageToType __attribute__((swift_name("messageToType")));
@property (readonly) NSArray<SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageMessageInfo *> * _Nullable messagesSent __attribute__((swift_name("messagesSent")));
@property (readonly) double timestamp __attribute__((swift_name("timestamp")));
@property (readonly) SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageUser * _Nullable userInfo __attribute__((swift_name("userInfo")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageInChatEntity.SearchMessageInChatResponseMessageCompanion")))
@interface SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageInChatEntity.SearchMessageInChatResponseMessageMember")))
@interface SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageMember : SharedBase
- (instancetype)initWithImage:(NSString * _Nullable)image name:(NSString * _Nullable)name id:(NSString * _Nullable)id __attribute__((swift_name("init(image:name:id:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageMemberCompanion *companion __attribute__((swift_name("companion")));
- (SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageMember *)doCopyImage:(NSString * _Nullable)image name:(NSString * _Nullable)name id:(NSString * _Nullable)id __attribute__((swift_name("doCopy(image:name:id:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable image __attribute__((swift_name("image")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageInChatEntity.SearchMessageInChatResponseMessageMemberCompanion")))
@interface SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageMemberCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageMemberCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageInChatEntity.SearchMessageInChatResponseMessageMessageInfo")))
@interface SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageMessageInfo : SharedBase
- (instancetype)initWithText:(NSString * _Nullable)text type:(NSString * _Nullable)type __attribute__((swift_name("init(text:type:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageMessageInfoCompanion *companion __attribute__((swift_name("companion")));
- (SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageMessageInfo *)doCopyText:(NSString * _Nullable)text type:(NSString * _Nullable)type __attribute__((swift_name("doCopy(text:type:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable text __attribute__((swift_name("text")));
@property (readonly) NSString * _Nullable type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageInChatEntity.SearchMessageInChatResponseMessageMessageInfoCompanion")))
@interface SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageMessageInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageMessageInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageInChatEntity.SearchMessageInChatResponseMessageUser")))
@interface SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageUser : SharedBase
- (instancetype)initWithFirstname:(NSString *)firstname lastname:(NSString *)lastname imageUrl:(NSString *)imageUrl __attribute__((swift_name("init(firstname:lastname:imageUrl:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageUserCompanion *companion __attribute__((swift_name("companion")));
- (SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageUser *)doCopyFirstname:(NSString *)firstname lastname:(NSString *)lastname imageUrl:(NSString *)imageUrl __attribute__((swift_name("doCopy(firstname:lastname:imageUrl:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *firstname __attribute__((swift_name("firstname")));
@property (readonly) NSString *imageUrl __attribute__((swift_name("imageUrl")));
@property (readonly) NSString *lastname __attribute__((swift_name("lastname")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageInChatEntity.SearchMessageInChatResponseMessageUserCompanion")))
@interface SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageUserCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageUserCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageInChatEntity.SearchMessageInChatResponseMessageFoundAll")))
@interface SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageFoundAll : SharedBase
- (instancetype)initWith_id:(NSString *)_id timestamp:(double)timestamp __attribute__((swift_name("init(_id:timestamp:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageFoundAllCompanion *companion __attribute__((swift_name("companion")));
- (SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageFoundAll *)doCopy_id:(NSString *)_id timestamp:(double)timestamp __attribute__((swift_name("doCopy(_id:timestamp:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *_id __attribute__((swift_name("_id")));
@property (readonly) double timestamp __attribute__((swift_name("timestamp")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageInChatEntity.SearchMessageInChatResponseMessageFoundAllCompanion")))
@interface SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageFoundAllCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchMessageInChatEntitySearchMessageInChatResponseMessageFoundAllCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchNameEntity")))
@interface SharedSearchNameEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedSearchNameEntitySearchNameResponse *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedSearchNameEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedSearchNameEntitySearchNameResponse *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchNameEntity.Companion")))
@interface SharedSearchNameEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchNameEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchNameEntity.SearchNameResponse")))
@interface SharedSearchNameEntitySearchNameResponse : SharedBase
- (instancetype)initWithFollower:(NSArray<SharedSearchNameEntitySearchNameResponseFollowerData *> *)follower __attribute__((swift_name("init(follower:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSearchNameEntitySearchNameResponseCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSArray<SharedSearchNameEntitySearchNameResponseFollowerData *> *follower __attribute__((swift_name("follower")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchNameEntity.SearchNameResponseCompanion")))
@interface SharedSearchNameEntitySearchNameResponseCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchNameEntitySearchNameResponseCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchNameEntity.SearchNameResponseFollowerData")))
@interface SharedSearchNameEntitySearchNameResponseFollowerData : SharedBase
- (instancetype)initWithFollowerId:(NSString *)followerId __attribute__((swift_name("init(followerId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSearchNameEntitySearchNameResponseFollowerDataCompanion *companion __attribute__((swift_name("companion")));
- (SharedSearchNameEntitySearchNameResponseFollowerData *)doCopyFollowerId:(NSString *)followerId __attribute__((swift_name("doCopy(followerId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *followerId __attribute__((swift_name("followerId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchNameEntity.SearchNameResponseFollowerDataCompanion")))
@interface SharedSearchNameEntitySearchNameResponseFollowerDataCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchNameEntitySearchNameResponseFollowerDataCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchTagEntity")))
@interface SharedSearchTagEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedSearchTagEntitySearchTagResponse *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedSearchTagEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedSearchTagEntitySearchTagResponse *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchTagEntity.Companion")))
@interface SharedSearchTagEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchTagEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchTagEntity.SearchTagResponse")))
@interface SharedSearchTagEntitySearchTagResponse : SharedBase
- (instancetype)initWithListFollower:(NSArray<SharedGetFollowerChatEntityChatEntity *> *)listFollower __attribute__((swift_name("init(listFollower:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSearchTagEntitySearchTagResponseCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSArray<SharedGetFollowerChatEntityChatEntity *> *listFollower __attribute__((swift_name("listFollower")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchTagEntity.SearchTagResponseCompanion")))
@interface SharedSearchTagEntitySearchTagResponseCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSearchTagEntitySearchTagResponseCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StickerEntity")))
@interface SharedStickerEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(NSArray<SharedStickerEntityStickerEntityResponse *> *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedStickerEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSArray<SharedStickerEntityStickerEntityResponse *> *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StickerEntity.Companion")))
@interface SharedStickerEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedStickerEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StickerEntity.StickerEntityResponse")))
@interface SharedStickerEntityStickerEntityResponse : SharedBase
- (instancetype)initWithPackageId:(NSString * _Nullable)packageId packageImageUrl:(NSString * _Nullable)packageImageUrl stickerList:(NSArray<SharedStickerEntityStickerEntityResponseSticker *> *)stickerList __attribute__((swift_name("init(packageId:packageImageUrl:stickerList:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedStickerEntityStickerEntityResponseCompanion *companion __attribute__((swift_name("companion")));
- (SharedStickerEntityStickerEntityResponse *)doCopyPackageId:(NSString * _Nullable)packageId packageImageUrl:(NSString * _Nullable)packageImageUrl stickerList:(NSArray<SharedStickerEntityStickerEntityResponseSticker *> *)stickerList __attribute__((swift_name("doCopy(packageId:packageImageUrl:stickerList:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable packageId __attribute__((swift_name("packageId")));
@property (readonly) NSString * _Nullable packageImageUrl __attribute__((swift_name("packageImageUrl")));
@property (readonly) NSArray<SharedStickerEntityStickerEntityResponseSticker *> *stickerList __attribute__((swift_name("stickerList")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StickerEntity.StickerEntityResponseCompanion")))
@interface SharedStickerEntityStickerEntityResponseCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedStickerEntityStickerEntityResponseCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StickerEntity.StickerEntityResponseSticker")))
@interface SharedStickerEntityStickerEntityResponseSticker : SharedBase
- (instancetype)initWithStickerNumber:(int32_t)stickerNumber packageId:(NSString * _Nullable)packageId stickerId:(int32_t)stickerId stickerType:(NSString *)stickerType stickerImageUrl:(NSString * _Nullable)stickerImageUrl stickerAnimationUrl:(NSString * _Nullable)stickerAnimationUrl __attribute__((swift_name("init(stickerNumber:packageId:stickerId:stickerType:stickerImageUrl:stickerAnimationUrl:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedStickerEntityStickerEntityResponseStickerCompanion *companion __attribute__((swift_name("companion")));
- (SharedStickerEntityStickerEntityResponseSticker *)doCopyStickerNumber:(int32_t)stickerNumber packageId:(NSString * _Nullable)packageId stickerId:(int32_t)stickerId stickerType:(NSString *)stickerType stickerImageUrl:(NSString * _Nullable)stickerImageUrl stickerAnimationUrl:(NSString * _Nullable)stickerAnimationUrl __attribute__((swift_name("doCopy(stickerNumber:packageId:stickerId:stickerType:stickerImageUrl:stickerAnimationUrl:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable packageId __attribute__((swift_name("packageId")));
@property (readonly) NSString * _Nullable stickerAnimationUrl __attribute__((swift_name("stickerAnimationUrl")));
@property (readonly) int32_t stickerId __attribute__((swift_name("stickerId")));
@property (readonly) NSString * _Nullable stickerImageUrl __attribute__((swift_name("stickerImageUrl")));
@property (readonly) int32_t stickerNumber __attribute__((swift_name("stickerNumber")));
@property (readonly) NSString *stickerType __attribute__((swift_name("stickerType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StickerEntity.StickerEntityResponseStickerCompanion")))
@interface SharedStickerEntityStickerEntityResponseStickerCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedStickerEntityStickerEntityResponseStickerCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StorageInfoEntity")))
@interface SharedStorageInfoEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedStorageInfoEntityStorageInfoResponseEntity *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedStorageInfoEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedStorageInfoEntityStorageInfoResponseEntity *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StorageInfoEntity.Companion")))
@interface SharedStorageInfoEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedStorageInfoEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StorageInfoEntity.DiskInfoEntity")))
@interface SharedStorageInfoEntityDiskInfoEntity : SharedBase
- (instancetype)initWithLimit:(NSString * _Nullable)limit use:(NSString * _Nullable)use __attribute__((swift_name("init(limit:use:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedStorageInfoEntityDiskInfoEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable limit __attribute__((swift_name("limit")));
@property (readonly) NSString * _Nullable use __attribute__((swift_name("use")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StorageInfoEntity.DiskInfoEntityCompanion")))
@interface SharedStorageInfoEntityDiskInfoEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedStorageInfoEntityDiskInfoEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StorageInfoEntity.StorageInfoResponseEntity")))
@interface SharedStorageInfoEntityStorageInfoResponseEntity : SharedBase
- (instancetype)initWithDiskInfo:(SharedStorageInfoEntityDiskInfoEntity * _Nullable)diskInfo __attribute__((swift_name("init(diskInfo:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedStorageInfoEntityStorageInfoResponseEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedStorageInfoEntityDiskInfoEntity * _Nullable diskInfo __attribute__((swift_name("diskInfo")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StorageInfoEntity.StorageInfoResponseEntityCompanion")))
@interface SharedStorageInfoEntityStorageInfoResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedStorageInfoEntityStorageInfoResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwitchModeEntity")))
@interface SharedSwitchModeEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedSwitchModeEntitySwitchModeResponseEntity *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedSwitchModeEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedSwitchModeEntitySwitchModeResponseEntity *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwitchModeEntity.Companion")))
@interface SharedSwitchModeEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSwitchModeEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwitchModeEntity.SwitchModeResponseEntity")))
@interface SharedSwitchModeEntitySwitchModeResponseEntity : SharedBase
- (instancetype)initWithSwitch_mode_at:(NSString * _Nullable)switch_mode_at count_down_second:(NSString * _Nullable)count_down_second __attribute__((swift_name("init(switch_mode_at:count_down_second:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSwitchModeEntitySwitchModeResponseEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable count_down_second __attribute__((swift_name("count_down_second")));
@property (readonly) NSString * _Nullable switch_mode_at __attribute__((swift_name("switch_mode_at")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwitchModeEntity.SwitchModeResponseEntityCompanion")))
@interface SharedSwitchModeEntitySwitchModeResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSwitchModeEntitySwitchModeResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TagListEntity")))
@interface SharedTagListEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedTagListEntityTagListResponseEntity *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedTagListEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedTagListEntityTagListResponseEntity *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TagListEntity.Companion")))
@interface SharedTagListEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedTagListEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TagListEntity.TagListResponseEntity")))
@interface SharedTagListEntityTagListResponseEntity : SharedBase
- (instancetype)initWithTags:(NSArray<id> * _Nullable)tags totalCount:(SharedInt * _Nullable)totalCount __attribute__((swift_name("init(tags:totalCount:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedTagListEntityTagListResponseEntityCompanion *companion __attribute__((swift_name("companion")));
- (SharedTagListEntityTagListResponseEntity *)doCopyTags:(NSArray<id> * _Nullable)tags totalCount:(SharedInt * _Nullable)totalCount __attribute__((swift_name("doCopy(tags:totalCount:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<id> * _Nullable tags __attribute__((swift_name("tags")));
@property (readonly) SharedInt * _Nullable totalCount __attribute__((swift_name("totalCount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TagListEntity.TagListResponseEntityCompanion")))
@interface SharedTagListEntityTagListResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedTagListEntityTagListResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TagListEntity.TagListResponseEntityTag")))
@interface SharedTagListEntityTagListResponseEntityTag : SharedBase
- (instancetype)initWithChannelId:(NSString * _Nullable)channelId companyId:(NSString * _Nullable)companyId countUser:(SharedInt * _Nullable)countUser createdAt:(NSString * _Nullable)createdAt createdBy:(NSString * _Nullable)createdBy groupTag:(SharedTagListEntityTagListResponseEntityTagGroupTag * _Nullable)groupTag id:(NSString * _Nullable)id permission:(SharedPermissionEntity * _Nullable)permission socialId:(NSArray<id> * _Nullable)socialId status:(SharedBoolean * _Nullable)status tagImport:(SharedBoolean * _Nullable)tagImport text:(NSString * _Nullable)text textSort:(NSString * _Nullable)textSort type:(NSString * _Nullable)type updatedAt:(NSString * _Nullable)updatedAt updatedBy:(NSString * _Nullable)updatedBy verifyTagApi:(SharedBoolean * _Nullable)verifyTagApi __attribute__((swift_name("init(channelId:companyId:countUser:createdAt:createdBy:groupTag:id:permission:socialId:status:tagImport:text:textSort:type:updatedAt:updatedBy:verifyTagApi:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedTagListEntityTagListResponseEntityTagCompanion *companion __attribute__((swift_name("companion")));
- (SharedTagListEntityTagListResponseEntityTag *)doCopyChannelId:(NSString * _Nullable)channelId companyId:(NSString * _Nullable)companyId countUser:(SharedInt * _Nullable)countUser createdAt:(NSString * _Nullable)createdAt createdBy:(NSString * _Nullable)createdBy groupTag:(SharedTagListEntityTagListResponseEntityTagGroupTag * _Nullable)groupTag id:(NSString * _Nullable)id permission:(SharedPermissionEntity * _Nullable)permission socialId:(NSArray<id> * _Nullable)socialId status:(SharedBoolean * _Nullable)status tagImport:(SharedBoolean * _Nullable)tagImport text:(NSString * _Nullable)text textSort:(NSString * _Nullable)textSort type:(NSString * _Nullable)type updatedAt:(NSString * _Nullable)updatedAt updatedBy:(NSString * _Nullable)updatedBy verifyTagApi:(SharedBoolean * _Nullable)verifyTagApi __attribute__((swift_name("doCopy(channelId:companyId:countUser:createdAt:createdBy:groupTag:id:permission:socialId:status:tagImport:text:textSort:type:updatedAt:updatedBy:verifyTagApi:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable channelId __attribute__((swift_name("channelId")));
@property (readonly) NSString * _Nullable companyId __attribute__((swift_name("companyId")));
@property (readonly) SharedInt * _Nullable countUser __attribute__((swift_name("countUser")));
@property (readonly) NSString * _Nullable createdAt __attribute__((swift_name("createdAt")));
@property (readonly) NSString * _Nullable createdBy __attribute__((swift_name("createdBy")));
@property (readonly) SharedTagListEntityTagListResponseEntityTagGroupTag * _Nullable groupTag __attribute__((swift_name("groupTag")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) SharedPermissionEntity * _Nullable permission __attribute__((swift_name("permission")));
@property (readonly) NSArray<id> * _Nullable socialId __attribute__((swift_name("socialId")));
@property (readonly) SharedBoolean * _Nullable status __attribute__((swift_name("status")));
@property (readonly) SharedBoolean * _Nullable tagImport __attribute__((swift_name("tagImport")));
@property (readonly) NSString * _Nullable text __attribute__((swift_name("text")));
@property (readonly) NSString * _Nullable textSort __attribute__((swift_name("textSort")));
@property (readonly) NSString * _Nullable type __attribute__((swift_name("type")));
@property (readonly) NSString * _Nullable updatedAt __attribute__((swift_name("updatedAt")));
@property (readonly) NSString * _Nullable updatedBy __attribute__((swift_name("updatedBy")));
@property (readonly) SharedBoolean * _Nullable verifyTagApi __attribute__((swift_name("verifyTagApi")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TagListEntity.TagListResponseEntityTagCompanion")))
@interface SharedTagListEntityTagListResponseEntityTagCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedTagListEntityTagListResponseEntityTagCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TagListEntity.TagListResponseEntityTagGroupTag")))
@interface SharedTagListEntityTagListResponseEntityTagGroupTag : SharedBase
- (instancetype)initWithId:(NSString * _Nullable)id name:(NSString * _Nullable)name type:(NSString * _Nullable)type __attribute__((swift_name("init(id:name:type:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedTagListEntityTagListResponseEntityTagGroupTagCompanion *companion __attribute__((swift_name("companion")));
- (SharedTagListEntityTagListResponseEntityTagGroupTag *)doCopyId:(NSString * _Nullable)id name:(NSString * _Nullable)name type:(NSString * _Nullable)type __attribute__((swift_name("doCopy(id:name:type:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TagListEntity.TagListResponseEntityTagGroupTagCompanion")))
@interface SharedTagListEntityTagListResponseEntityTagGroupTagCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedTagListEntityTagListResponseEntityTagGroupTagCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TagListEntity.TagListResponseEntityTagSocialId")))
@interface SharedTagListEntityTagListResponseEntityTagSocialId : SharedBase
- (instancetype)initWithChannelType:(NSString * _Nullable)channelType channelTypeId:(NSString * _Nullable)channelTypeId followerType:(NSString * _Nullable)followerType id:(NSString * _Nullable)id isBlock:(SharedBoolean * _Nullable)isBlock socialId:(NSString * _Nullable)socialId __attribute__((swift_name("init(channelType:channelTypeId:followerType:id:isBlock:socialId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedTagListEntityTagListResponseEntityTagSocialIdCompanion *companion __attribute__((swift_name("companion")));
- (SharedTagListEntityTagListResponseEntityTagSocialId *)doCopyChannelType:(NSString * _Nullable)channelType channelTypeId:(NSString * _Nullable)channelTypeId followerType:(NSString * _Nullable)followerType id:(NSString * _Nullable)id isBlock:(SharedBoolean * _Nullable)isBlock socialId:(NSString * _Nullable)socialId __attribute__((swift_name("doCopy(channelType:channelTypeId:followerType:id:isBlock:socialId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable channelType __attribute__((swift_name("channelType")));
@property (readonly) NSString * _Nullable channelTypeId __attribute__((swift_name("channelTypeId")));
@property (readonly) NSString * _Nullable followerType __attribute__((swift_name("followerType")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) SharedBoolean * _Nullable isBlock __attribute__((swift_name("isBlock")));
@property (readonly) NSString * _Nullable socialId __attribute__((swift_name("socialId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TagListEntity.TagListResponseEntityTagSocialIdCompanion")))
@interface SharedTagListEntityTagListResponseEntityTagSocialIdCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedTagListEntityTagListResponseEntityTagSocialIdCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckAppStatusEntity")))
@interface SharedCheckAppStatusEntity : SharedBaseResponseStatusEntity
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedCheckAppStatusEntityCompanion *companion __attribute__((swift_name("companion")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckAppStatusEntity.Companion")))
@interface SharedCheckAppStatusEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCheckAppStatusEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoginEntity")))
@interface SharedLoginEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedLoginEntityLoginResponseEntity *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedLoginEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedLoginEntityLoginResponseEntity *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoginEntity.BotInfo")))
@interface SharedLoginEntityBotInfo : SharedBase
- (instancetype)initWithImage:(NSString * _Nullable)image name:(NSString * _Nullable)name __attribute__((swift_name("init(image:name:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedLoginEntityBotInfoCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable image __attribute__((swift_name("image")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoginEntity.BotInfoCompanion")))
@interface SharedLoginEntityBotInfoCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedLoginEntityBotInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoginEntity.ChannelEntity")))
@interface SharedLoginEntityChannelEntity : SharedBase
- (instancetype)initWith_id:(NSString * _Nullable)_id channel_type_info:(SharedLoginEntityChannelTypeInfoEntity * _Nullable)channel_type_info __attribute__((swift_name("init(_id:channel_type_info:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedLoginEntityChannelEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable _id __attribute__((swift_name("_id")));
@property (readonly) SharedLoginEntityChannelTypeInfoEntity * _Nullable channel_type_info __attribute__((swift_name("channel_type_info")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoginEntity.ChannelEntityCompanion")))
@interface SharedLoginEntityChannelEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedLoginEntityChannelEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoginEntity.ChannelTypeInfoEntity")))
@interface SharedLoginEntityChannelTypeInfoEntity : SharedBase
- (instancetype)initWith_id:(NSString * _Nullable)_id name:(NSString * _Nullable)name icon_svg:(NSString * _Nullable)icon_svg is_active:(SharedBoolean * _Nullable)is_active __attribute__((swift_name("init(_id:name:icon_svg:is_active:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedLoginEntityChannelTypeInfoEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable _id __attribute__((swift_name("_id")));
@property (readonly) NSString * _Nullable icon_svg __attribute__((swift_name("icon_svg")));
@property (readonly) SharedBoolean * _Nullable is_active __attribute__((swift_name("is_active")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoginEntity.ChannelTypeInfoEntityCompanion")))
@interface SharedLoginEntityChannelTypeInfoEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedLoginEntityChannelTypeInfoEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoginEntity.Companion")))
@interface SharedLoginEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedLoginEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoginEntity.CompanyDataEntity")))
@interface SharedLoginEntityCompanyDataEntity : SharedBase
- (instancetype)initWith_id:(NSString * _Nullable)_id roles:(SharedLoginEntityRoleEntity * _Nullable)roles chat_status:(SharedInt * _Nullable)chat_status company_info:(SharedLoginEntityCompanyInfoEntity * _Nullable)company_info channel:(NSMutableArray<SharedLoginEntityChannelEntity *> * _Nullable)channel user_count:(SharedInt * _Nullable)user_count setting:(SharedLoginEntitySetting * _Nullable)setting __attribute__((swift_name("init(_id:roles:chat_status:company_info:channel:user_count:setting:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedLoginEntityCompanyDataEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable _id __attribute__((swift_name("_id")));
@property (readonly) NSMutableArray<SharedLoginEntityChannelEntity *> * _Nullable channel __attribute__((swift_name("channel")));
@property (readonly) SharedInt * _Nullable chat_status __attribute__((swift_name("chat_status")));
@property (readonly) SharedLoginEntityCompanyInfoEntity * _Nullable company_info __attribute__((swift_name("company_info")));
@property (readonly) SharedLoginEntityRoleEntity * _Nullable roles __attribute__((swift_name("roles")));
@property (readonly) SharedLoginEntitySetting * _Nullable setting __attribute__((swift_name("setting")));
@property (readonly) SharedInt * _Nullable user_count __attribute__((swift_name("user_count")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoginEntity.CompanyDataEntityCompanion")))
@interface SharedLoginEntityCompanyDataEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedLoginEntityCompanyDataEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoginEntity.CompanyInfoEntity")))
@interface SharedLoginEntityCompanyInfoEntity : SharedBase
- (instancetype)initWithAccount_name:(NSString * _Nullable)account_name package_info:(SharedOfficialAccountListEntityPackageInfoEntity * _Nullable)package_info __attribute__((swift_name("init(account_name:package_info:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedLoginEntityCompanyInfoEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable account_name __attribute__((swift_name("account_name")));
@property (readonly) SharedOfficialAccountListEntityPackageInfoEntity * _Nullable package_info __attribute__((swift_name("package_info")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoginEntity.CompanyInfoEntityCompanion")))
@interface SharedLoginEntityCompanyInfoEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedLoginEntityCompanyInfoEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoginEntity.LoginResponseEntity")))
@interface SharedLoginEntityLoginResponseEntity : SharedBase
- (instancetype)initWithToken:(NSString * _Nullable)token company:(NSMutableArray<SharedLoginEntityCompanyDataEntity *> * _Nullable)company __attribute__((swift_name("init(token:company:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedLoginEntityLoginResponseEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSMutableArray<SharedLoginEntityCompanyDataEntity *> * _Nullable company __attribute__((swift_name("company")));
@property (readonly) NSString * _Nullable token __attribute__((swift_name("token")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoginEntity.LoginResponseEntityCompanion")))
@interface SharedLoginEntityLoginResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedLoginEntityLoginResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoginEntity.RoleEntity")))
@interface SharedLoginEntityRoleEntity : SharedBase
- (instancetype)initWith_id:(NSString * _Nullable)_id name:(NSString * _Nullable)name level:(SharedInt * _Nullable)level __attribute__((swift_name("init(_id:name:level:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedLoginEntityRoleEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable _id __attribute__((swift_name("_id")));
@property (readonly) SharedInt * _Nullable level __attribute__((swift_name("level")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoginEntity.RoleEntityCompanion")))
@interface SharedLoginEntityRoleEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedLoginEntityRoleEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoginEntity.Setting")))
@interface SharedLoginEntitySetting : SharedBase
- (instancetype)initWithBot_info:(SharedLoginEntityBotInfo * _Nullable)bot_info __attribute__((swift_name("init(bot_info:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedLoginEntitySettingCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedLoginEntityBotInfo * _Nullable bot_info __attribute__((swift_name("bot_info")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoginEntity.SettingCompanion")))
@interface SharedLoginEntitySettingCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedLoginEntitySettingCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OfficialAccountListEntity")))
@interface SharedOfficialAccountListEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedOfficialAccountListEntityOfficialAccountResponseEntity *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedOfficialAccountListEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedOfficialAccountListEntityOfficialAccountResponseEntity *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OfficialAccountListEntity.ChannelEntity")))
@interface SharedOfficialAccountListEntityChannelEntity : SharedBase
- (instancetype)initWith_id:(NSString * _Nullable)_id channel_type_info:(SharedOfficialAccountListEntityChannelTypeInfoEntity *)channel_type_info __attribute__((swift_name("init(_id:channel_type_info:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedOfficialAccountListEntityChannelEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable _id __attribute__((swift_name("_id")));
@property (readonly) SharedOfficialAccountListEntityChannelTypeInfoEntity *channel_type_info __attribute__((swift_name("channel_type_info")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OfficialAccountListEntity.ChannelEntityCompanion")))
@interface SharedOfficialAccountListEntityChannelEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedOfficialAccountListEntityChannelEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OfficialAccountListEntity.ChannelTypeInfoEntity")))
@interface SharedOfficialAccountListEntityChannelTypeInfoEntity : SharedBase
- (instancetype)initWith_id:(NSString * _Nullable)_id name:(NSString * _Nullable)name icon_png:(NSString * _Nullable)icon_png icon_svg:(NSString * _Nullable)icon_svg is_active:(SharedBoolean * _Nullable)is_active __attribute__((swift_name("init(_id:name:icon_png:icon_svg:is_active:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedOfficialAccountListEntityChannelTypeInfoEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable _id __attribute__((swift_name("_id")));
@property (readonly) NSString * _Nullable icon_png __attribute__((swift_name("icon_png")));
@property (readonly) NSString * _Nullable icon_svg __attribute__((swift_name("icon_svg")));
@property (readonly) SharedBoolean * _Nullable is_active __attribute__((swift_name("is_active")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OfficialAccountListEntity.ChannelTypeInfoEntityCompanion")))
@interface SharedOfficialAccountListEntityChannelTypeInfoEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedOfficialAccountListEntityChannelTypeInfoEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OfficialAccountListEntity.Companion")))
@interface SharedOfficialAccountListEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedOfficialAccountListEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OfficialAccountListEntity.CompanyInfoEntity")))
@interface SharedOfficialAccountListEntityCompanyInfoEntity : SharedBase
- (instancetype)initWith_id:(NSString * _Nullable)_id package_id:(NSString * _Nullable)package_id account_name:(NSString * _Nullable)account_name key_webhook:(NSString * _Nullable)key_webhook is_active:(SharedBoolean * _Nullable)is_active package_info:(SharedOfficialAccountListEntityPackageInfoEntity * _Nullable)package_info __attribute__((swift_name("init(_id:package_id:account_name:key_webhook:is_active:package_info:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedOfficialAccountListEntityCompanyInfoEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable _id __attribute__((swift_name("_id")));
@property (readonly) NSString * _Nullable account_name __attribute__((swift_name("account_name")));
@property (readonly) SharedBoolean * _Nullable is_active __attribute__((swift_name("is_active")));
@property (readonly) NSString * _Nullable key_webhook __attribute__((swift_name("key_webhook")));
@property (readonly) NSString * _Nullable package_id __attribute__((swift_name("package_id")));
@property (readonly) SharedOfficialAccountListEntityPackageInfoEntity * _Nullable package_info __attribute__((swift_name("package_info")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OfficialAccountListEntity.CompanyInfoEntityCompanion")))
@interface SharedOfficialAccountListEntityCompanyInfoEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedOfficialAccountListEntityCompanyInfoEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OfficialAccountListEntity.OfficialAccountResponseEntity")))
@interface SharedOfficialAccountListEntityOfficialAccountResponseEntity : SharedBase
- (instancetype)initWithTotalData:(NSMutableArray<SharedOfficialAccountListEntityTotalDataEntity *> * _Nullable)totalData totalCount:(SharedInt * _Nullable)totalCount isCreate:(SharedBoolean * _Nullable)isCreate __attribute__((swift_name("init(totalData:totalCount:isCreate:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedOfficialAccountListEntityOfficialAccountResponseEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedBoolean * _Nullable isCreate __attribute__((swift_name("isCreate")));
@property (readonly) SharedInt * _Nullable totalCount __attribute__((swift_name("totalCount")));
@property (readonly) NSMutableArray<SharedOfficialAccountListEntityTotalDataEntity *> * _Nullable totalData __attribute__((swift_name("totalData")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OfficialAccountListEntity.OfficialAccountResponseEntityCompanion")))
@interface SharedOfficialAccountListEntityOfficialAccountResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedOfficialAccountListEntityOfficialAccountResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OfficialAccountListEntity.PackageInfoEntity")))
@interface SharedOfficialAccountListEntityPackageInfoEntity : SharedBase
- (instancetype)initWithOption:(SharedOfficialAccountListEntityPackageInfoOptionEntity * _Nullable)option __attribute__((swift_name("init(option:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedOfficialAccountListEntityPackageInfoEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedOfficialAccountListEntityPackageInfoOptionEntity * _Nullable option __attribute__((swift_name("option")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OfficialAccountListEntity.PackageInfoEntityCompanion")))
@interface SharedOfficialAccountListEntityPackageInfoEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedOfficialAccountListEntityPackageInfoEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OfficialAccountListEntity.PackageInfoOptionEntity")))
@interface SharedOfficialAccountListEntityPackageInfoOptionEntity : SharedBase
- (instancetype)initWithUser:(SharedInt * _Nullable)user __attribute__((swift_name("init(user:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedOfficialAccountListEntityPackageInfoOptionEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedInt * _Nullable user __attribute__((swift_name("user")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OfficialAccountListEntity.PackageInfoOptionEntityCompanion")))
@interface SharedOfficialAccountListEntityPackageInfoOptionEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedOfficialAccountListEntityPackageInfoOptionEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OfficialAccountListEntity.RolesListEntity")))
@interface SharedOfficialAccountListEntityRolesListEntity : SharedBase
- (instancetype)initWith_id:(NSString * _Nullable)_id name:(NSString * _Nullable)name level:(SharedInt * _Nullable)level type:(NSString * _Nullable)type __attribute__((swift_name("init(_id:name:level:type:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedOfficialAccountListEntityRolesListEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable _id __attribute__((swift_name("_id")));
@property (readonly) SharedInt * _Nullable level __attribute__((swift_name("level")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OfficialAccountListEntity.RolesListEntityCompanion")))
@interface SharedOfficialAccountListEntityRolesListEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedOfficialAccountListEntityRolesListEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OfficialAccountListEntity.TotalDataEntity")))
@interface SharedOfficialAccountListEntityTotalDataEntity : SharedBase
- (instancetype)initWithChannel:(NSMutableArray<SharedOfficialAccountListEntityChannelEntity *> *)channel company_info:(SharedOfficialAccountListEntityCompanyInfoEntity *)company_info chat_status:(SharedInt * _Nullable)chat_status chat_status_mobile:(SharedInt * _Nullable)chat_status_mobile user_count:(SharedInt * _Nullable)user_count roles:(SharedOfficialAccountListEntityRolesListEntity * _Nullable)roles setting:(SharedLoginEntitySetting * _Nullable)setting __attribute__((swift_name("init(channel:company_info:chat_status:chat_status_mobile:user_count:roles:setting:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedOfficialAccountListEntityTotalDataEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSMutableArray<SharedOfficialAccountListEntityChannelEntity *> *channel __attribute__((swift_name("channel")));
@property (readonly) SharedInt * _Nullable chat_status __attribute__((swift_name("chat_status")));
@property (readonly) SharedInt * _Nullable chat_status_mobile __attribute__((swift_name("chat_status_mobile")));
@property (readonly) SharedOfficialAccountListEntityCompanyInfoEntity *company_info __attribute__((swift_name("company_info")));
@property (readonly) SharedOfficialAccountListEntityRolesListEntity * _Nullable roles __attribute__((swift_name("roles")));
@property (readonly) SharedLoginEntitySetting * _Nullable setting __attribute__((swift_name("setting")));
@property (readonly) SharedInt * _Nullable user_count __attribute__((swift_name("user_count")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OfficialAccountListEntity.TotalDataEntityCompanion")))
@interface SharedOfficialAccountListEntityTotalDataEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedOfficialAccountListEntityTotalDataEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ResetPasswordEntity")))
@interface SharedResetPasswordEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedResetPasswordEntityResetPasswordResponseEntity *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedResetPasswordEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedResetPasswordEntityResetPasswordResponseEntity *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ResetPasswordEntity.Companion")))
@interface SharedResetPasswordEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedResetPasswordEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ResetPasswordEntity.ResetPasswordResponseEntity")))
@interface SharedResetPasswordEntityResetPasswordResponseEntity : SharedBase
- (instancetype)initWithLink:(NSString * _Nullable)link __attribute__((swift_name("init(link:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedResetPasswordEntityResetPasswordResponseEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable link __attribute__((swift_name("link")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ResetPasswordEntity.ResetPasswordResponseEntityCompanion")))
@interface SharedResetPasswordEntityResetPasswordResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedResetPasswordEntityResetPasswordResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SetNewPasswordEntity")))
@interface SharedSetNewPasswordEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedSetNewPasswordEntitySetNewPasswordResponseEntity *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedSetNewPasswordEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedSetNewPasswordEntitySetNewPasswordResponseEntity *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SetNewPasswordEntity.Companion")))
@interface SharedSetNewPasswordEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSetNewPasswordEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SetNewPasswordEntity.SetNewPasswordResponseEntity")))
@interface SharedSetNewPasswordEntitySetNewPasswordResponseEntity : SharedBase
- (instancetype)initWithEmail:(NSString * _Nullable)email expired:(NSString * _Nullable)expired ref:(NSString * _Nullable)ref uuid:(NSString * _Nullable)uuid __attribute__((swift_name("init(email:expired:ref:uuid:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedSetNewPasswordEntitySetNewPasswordResponseEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString * _Nullable email __attribute__((swift_name("email")));
@property (readonly) NSString * _Nullable expired __attribute__((swift_name("expired")));
@property (readonly) NSString * _Nullable ref __attribute__((swift_name("ref")));
@property (readonly) NSString * _Nullable uuid __attribute__((swift_name("uuid")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SetNewPasswordEntity.SetNewPasswordResponseEntityCompanion")))
@interface SharedSetNewPasswordEntitySetNewPasswordResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedSetNewPasswordEntitySetNewPasswordResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserRoleMenuEntity")))
@interface SharedUserRoleMenuEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedUserRoleMenuEntityUserRoleMenuResponseEntity *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedUserRoleMenuEntityCompanion *companion __attribute__((swift_name("companion")));
- (SharedUserRoleMenuEntity *)doCopyResponse:(SharedUserRoleMenuEntityUserRoleMenuResponseEntity *)response __attribute__((swift_name("doCopy(response:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedUserRoleMenuEntityUserRoleMenuResponseEntity *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserRoleMenuEntity.Companion")))
@interface SharedUserRoleMenuEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedUserRoleMenuEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserRoleMenuEntity.UserRoleMenuResponseEntity")))
@interface SharedUserRoleMenuEntityUserRoleMenuResponseEntity : SharedBase
- (instancetype)initWithPermission_menu:(SharedUserRoleMenuEntityUserRoleMenuResponseEntityMenuType * _Nullable)permission_menu permission_action:(NSArray<NSString *> * _Nullable)permission_action __attribute__((swift_name("init(permission_menu:permission_action:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedUserRoleMenuEntityUserRoleMenuResponseEntityCompanion *companion __attribute__((swift_name("companion")));
- (SharedUserRoleMenuEntityUserRoleMenuResponseEntity *)doCopyPermission_menu:(SharedUserRoleMenuEntityUserRoleMenuResponseEntityMenuType * _Nullable)permission_menu permission_action:(NSArray<NSString *> * _Nullable)permission_action __attribute__((swift_name("doCopy(permission_menu:permission_action:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<NSString *> * _Nullable permission_action __attribute__((swift_name("permission_action")));
@property (readonly) SharedUserRoleMenuEntityUserRoleMenuResponseEntityMenuType * _Nullable permission_menu __attribute__((swift_name("permission_menu")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserRoleMenuEntity.UserRoleMenuResponseEntityCompanion")))
@interface SharedUserRoleMenuEntityUserRoleMenuResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedUserRoleMenuEntityUserRoleMenuResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserRoleMenuEntity.UserRoleMenuResponseEntityMenuType")))
@interface SharedUserRoleMenuEntityUserRoleMenuResponseEntityMenuType : SharedBase
- (instancetype)initWithDefault:(NSArray<SharedUserRoleMenuEntityUserRoleMenuResponseEntityMenuTypeMenu *> * _Nullable)default_ setting:(NSArray<SharedUserRoleMenuEntityUserRoleMenuResponseEntityMenuTypeMenu *> * _Nullable)setting __attribute__((swift_name("init(default:setting:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedUserRoleMenuEntityUserRoleMenuResponseEntityMenuTypeCompanion *companion __attribute__((swift_name("companion")));
- (SharedUserRoleMenuEntityUserRoleMenuResponseEntityMenuType *)doCopyDefault:(NSArray<SharedUserRoleMenuEntityUserRoleMenuResponseEntityMenuTypeMenu *> * _Nullable)default_ setting:(NSArray<SharedUserRoleMenuEntityUserRoleMenuResponseEntityMenuTypeMenu *> * _Nullable)setting __attribute__((swift_name("doCopy(default:setting:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly, getter=default) NSArray<SharedUserRoleMenuEntityUserRoleMenuResponseEntityMenuTypeMenu *> * _Nullable default_ __attribute__((swift_name("default_")));
@property (readonly) NSArray<SharedUserRoleMenuEntityUserRoleMenuResponseEntityMenuTypeMenu *> * _Nullable setting __attribute__((swift_name("setting")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserRoleMenuEntity.UserRoleMenuResponseEntityMenuTypeCompanion")))
@interface SharedUserRoleMenuEntityUserRoleMenuResponseEntityMenuTypeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedUserRoleMenuEntityUserRoleMenuResponseEntityMenuTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserRoleMenuEntity.UserRoleMenuResponseEntityMenuTypeMenu")))
@interface SharedUserRoleMenuEntityUserRoleMenuResponseEntityMenuTypeMenu : SharedBase
- (instancetype)initWithKey:(NSString *)key name:(NSString *)name visible:(BOOL)visible __attribute__((swift_name("init(key:name:visible:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedUserRoleMenuEntityUserRoleMenuResponseEntityMenuTypeMenuCompanion *companion __attribute__((swift_name("companion")));
- (SharedUserRoleMenuEntityUserRoleMenuResponseEntityMenuTypeMenu *)doCopyKey:(NSString *)key name:(NSString *)name visible:(BOOL)visible __attribute__((swift_name("doCopy(key:name:visible:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *key __attribute__((swift_name("key")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property BOOL visible __attribute__((swift_name("visible")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserRoleMenuEntity.UserRoleMenuResponseEntityMenuTypeMenuCompanion")))
@interface SharedUserRoleMenuEntityUserRoleMenuResponseEntityMenuTypeMenuCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedUserRoleMenuEntityUserRoleMenuResponseEntityMenuTypeMenuCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("VerifyOTPEntity")))
@interface SharedVerifyOTPEntity : SharedBaseResponseStatusEntity
- (instancetype)initWithResponse:(SharedVerifyOTPEntityVerifyOTPResponseEntity *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithStatusMessage:(NSString * _Nullable)statusMessage statusCode:(NSString * _Nullable)statusCode message:(NSString * _Nullable)message status:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(statusMessage:statusCode:message:status:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedVerifyOTPEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedVerifyOTPEntityVerifyOTPResponseEntity *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("VerifyOTPEntity.Companion")))
@interface SharedVerifyOTPEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedVerifyOTPEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("VerifyOTPEntity.VerifyOTPResponseEntity")))
@interface SharedVerifyOTPEntityVerifyOTPResponseEntity : SharedBase
- (instancetype)initWithStatus:(SharedBoolean * _Nullable)status __attribute__((swift_name("init(status:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedVerifyOTPEntityVerifyOTPResponseEntityCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) SharedBoolean * _Nullable status __attribute__((swift_name("status")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("VerifyOTPEntity.VerifyOTPResponseEntityCompanion")))
@interface SharedVerifyOTPEntityVerifyOTPResponseEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedVerifyOTPEntityVerifyOTPResponseEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StartChatSocketEntity")))
@interface SharedStartChatSocketEntity : SharedBase
- (instancetype)initWithSwitchModeAt:(NSString * _Nullable)switchModeAt countDownSecond:(NSString * _Nullable)countDownSecond livechatId:(NSString * _Nullable)livechatId followerId:(NSString * _Nullable)followerId __attribute__((swift_name("init(switchModeAt:countDownSecond:livechatId:followerId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedStartChatSocketEntityCompanion *companion __attribute__((swift_name("companion")));
- (SharedStartChatSocketEntity *)doCopySwitchModeAt:(NSString * _Nullable)switchModeAt countDownSecond:(NSString * _Nullable)countDownSecond livechatId:(NSString * _Nullable)livechatId followerId:(NSString * _Nullable)followerId __attribute__((swift_name("doCopy(switchModeAt:countDownSecond:livechatId:followerId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable countDownSecond __attribute__((swift_name("countDownSecond")));
@property (readonly) NSString * _Nullable followerId __attribute__((swift_name("followerId")));
@property (readonly) NSString * _Nullable livechatId __attribute__((swift_name("livechatId")));
@property (readonly) NSString * _Nullable switchModeAt __attribute__((swift_name("switchModeAt")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StartChatSocketEntity.Companion")))
@interface SharedStartChatSocketEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedStartChatSocketEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TriggerExtendChatTimeSocketEntity")))
@interface SharedTriggerExtendChatTimeSocketEntity : SharedBase
- (instancetype)initWithSwitchModeAt:(NSString * _Nullable)switchModeAt countDownSecond:(NSString * _Nullable)countDownSecond followerId:(NSString * _Nullable)followerId __attribute__((swift_name("init(switchModeAt:countDownSecond:followerId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedTriggerExtendChatTimeSocketEntityCompanion *companion __attribute__((swift_name("companion")));
- (SharedTriggerExtendChatTimeSocketEntity *)doCopySwitchModeAt:(NSString * _Nullable)switchModeAt countDownSecond:(NSString * _Nullable)countDownSecond followerId:(NSString * _Nullable)followerId __attribute__((swift_name("doCopy(switchModeAt:countDownSecond:followerId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable countDownSecond __attribute__((swift_name("countDownSecond")));
@property (readonly) NSString * _Nullable followerId __attribute__((swift_name("followerId")));
@property (readonly) NSString * _Nullable switchModeAt __attribute__((swift_name("switchModeAt")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TriggerExtendChatTimeSocketEntity.Companion")))
@interface SharedTriggerExtendChatTimeSocketEntityCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedTriggerExtendChatTimeSocketEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuthRepoImpl")))
@interface SharedAuthRepoImpl : SharedBase <SharedIAuthRepository>
- (instancetype)initWithLoginResultMapper:(SharedLoginResultMapper *)loginResultMapper getOfficialAccountResultMapper:(SharedGetOfficialAccountResultMapper *)getOfficialAccountResultMapper resetPasswordMapper:(SharedResetPasswordMapper *)resetPasswordMapper setNewPasswordMapper:(SharedSetNewPasswordMapper *)setNewPasswordMapper verifyOTPMapper:(SharedVerifyOTPMapper *)verifyOTPMapper baseMapper:(SharedBaseMapper *)baseMapper userRoleMenuMapper:(SharedUserRoleMenuMapper *)userRoleMenuMapper __attribute__((swift_name("init(loginResultMapper:getOfficialAccountResultMapper:resetPasswordMapper:setNewPasswordMapper:verifyOTPMapper:baseMapper:userRoleMenuMapper:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)ConfirmNewPasswordConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine body:(SharedConfirmNewPasswordBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("ConfirmNewPassword(config:engine:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getOfficialAccountListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine searchName:(NSString *)searchName completionHandler:(void (^)(SharedNetworkResponse<SharedGetOfficialAccountResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getOfficialAccountList(config:engine:searchName:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getUserMenuConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedUserRoleMenuResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getUserMenu(config:engine:roleId:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)loginWithUserConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine body:(SharedLoginBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedLoginResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("loginWithUser(config:engine:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)resendOTPConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine link:(NSString *)link completionHandler:(void (^)(SharedNetworkResponse<SharedSetNewPasswordResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("resendOTP(config:engine:link:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)resetPasswordConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine body:(SharedResetPasswordBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedResetPasswordResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("resetPassword(config:engine:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setNewPasswordConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine link:(NSString *)link completionHandler:(void (^)(SharedNetworkResponse<SharedSetNewPasswordResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setNewPassword(config:engine:link:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)verifyOTPConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine body:(SharedVerifyOTPBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("verifyOTP(config:engine:body:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactRepoImpl")))
@interface SharedContactRepoImpl : SharedBase <SharedIContactRepository>
- (instancetype)initWithContactResultMapper:(SharedContactResultMapper *)contactResultMapper __attribute__((swift_name("init(contactResultMapper:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getContactListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId channel_type_id:(NSArray<NSString *> *)channel_type_id contact_type:(NSArray<NSString *> *)contact_type customer_status:(NSArray<NSString *> *)customer_status customer_type:(NSArray<NSString *> *)customer_type page_index:(int32_t)page_index page_size:(int32_t)page_size search:(NSString *)search sortAsc:(int32_t)sortAsc sortField:(NSString *)sortField tag:(NSArray<NSString *> *)tag completionHandler:(void (^)(SharedNetworkResponse<SharedContactResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getContactList(config:engine:channelId:companyId:channelLists:roleId:channel_type_id:contact_type:customer_status:customer_type:page_index:page_size:search:sortAsc:sortField:tag:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardRepoImpl")))
@interface SharedDashboardRepoImpl : SharedBase <SharedIDashboardRepository>
- (instancetype)initWithDashboardResultMapper:(SharedDashboardResultMapper *)dashboardResultMapper __attribute__((swift_name("init(dashboardResultMapper:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getDashboardConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channel_id:(NSString * _Nullable)channel_id channel_lists:(NSArray<NSString *> * _Nullable)channel_lists company_id:(NSString *)company_id role_id:(NSString *)role_id channelType:(NSArray<NSString *> *)channelType startDate:(NSString *)startDate endData:(NSString *)endData completionHandler:(void (^)(SharedNetworkResponse<SharedDashboardResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getDashboard(config:engine:channel_id:channel_lists:company_id:role_id:channelType:startDate:endData:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LiveChatRepoImpl")))
@interface SharedLiveChatRepoImpl : SharedBase <SharedILiveChatRepository>
- (instancetype)initWithBaseMapper:(SharedBaseMapper *)baseMapper stringMapper:(SharedStringResultMapper *)stringMapper getFollowerChatResultMapper:(SharedGetFollowerChatResultMapper *)getFollowerChatResultMapper getChatMessageResultMapper:(SharedGetChatMessageResultMapper *)getChatMessageResultMapper acceptChatResultMapper:(SharedAcceptChatResultMapper *)acceptChatResultMapper closeChatResultMapper:(SharedCloseChatResultMapper *)closeChatResultMapper chatRoomListMapper:(SharedChatRoomListMapper *)chatRoomListMapper contactInformationResultMapper:(SharedContactInformationResultMapper *)contactInformationResultMapper contactNoteResultMapper:(SharedContactNoteResultMapper *)contactNoteResultMapper getReplyTemplateResultMapper:(SharedGetReplyTemplateResultMapper *)getReplyTemplateResultMapper replyMessageResultMapper:(SharedReplyMessageResultMapper *)replyMessageResultMapper fileFolderListResultMapper:(SharedFileFolderListResultMapper *)fileFolderListResultMapper fileListResultMapper:(SharedFileListResultMapper *)fileListResultMapper agentFilterResultMapper:(SharedAgentFilterMapper *)agentFilterResultMapper groupFilterResultMapper:(SharedGroupFilterMapper *)groupFilterResultMapper agentAssignResultMapper:(SharedAgentAssignMapper *)agentAssignResultMapper groupAssignResultMapper:(SharedGroupAssignMapper *)groupAssignResultMapper masterDataChatResultMapper:(SharedMasterDataChatMapper *)masterDataChatResultMapper getAgentChatStatusResultMapper:(SharedGetAgentChatStatusResultMapper *)getAgentChatStatusResultMapper chatSearchNameMapper:(SharedSearchNameMapper *)chatSearchNameMapper tagListMapper:(SharedTagListMapper *)tagListMapper searchTagMapper:(SharedSearchTagMapper *)searchTagMapper stickerResultMapper:(SharedStickerResultMapper *)stickerResultMapper getSearchFollowerMapper:(SharedGetSearchFollowerMapper *)getSearchFollowerMapper searchMessageMapper:(SharedSearchMessageMapper *)searchMessageMapper searchMessageInChatMapper:(SharedSearchMessageInChatMapper *)searchMessageInChatMapper switchModeMapper:(SharedSwitchModeMapper *)switchModeMapper notificationCountMapper:(SharedNotificationCountMapper *)notificationCountMapper __attribute__((swift_name("init(baseMapper:stringMapper:getFollowerChatResultMapper:getChatMessageResultMapper:acceptChatResultMapper:closeChatResultMapper:chatRoomListMapper:contactInformationResultMapper:contactNoteResultMapper:getReplyTemplateResultMapper:replyMessageResultMapper:fileFolderListResultMapper:fileListResultMapper:agentFilterResultMapper:groupFilterResultMapper:agentAssignResultMapper:groupAssignResultMapper:masterDataChatResultMapper:getAgentChatStatusResultMapper:chatSearchNameMapper:tagListMapper:searchTagMapper:stickerResultMapper:getSearchFollowerMapper:searchMessageMapper:searchMessageInChatMapper:switchModeMapper:notificationCountMapper:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)acceptChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId agentId:(NSString *)agentId completionHandler:(void (^)(SharedNetworkResponse<SharedAcceptChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("acceptChat(config:engine:channelId:companyId:channelLists:followerId:agentId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)addTagConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId tagId:(NSString *)tagId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("addTag(config:engine:roleId:channelId:companyId:channelLists:followerId:tagId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)assignToAgentConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId userId:(NSString *)userId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("assignToAgent(config:engine:channelId:companyId:channelLists:roleId:followerId:liveChatId:userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)assignToGroupConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId groupId:(NSString *)groupId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("assignToGroup(config:engine:channelId:companyId:channelLists:roleId:followerId:liveChatId:groupId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)chatSearchMessageConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId text:(NSString *)text skip:(int32_t)skip limit:(int32_t)limit channelList:(NSArray<NSString *> *)channelList completionHandler:(void (^)(SharedNetworkResponse<SharedSearchMessageResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("chatSearchMessage(config:engine:channelId:companyId:channelLists:roleId:text:skip:limit:channelList:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)chatSearchNameConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId text:(NSString *)text skip:(int32_t)skip limit:(int32_t)limit channel:(NSArray<NSString *> *)channel completionHandler:(void (^)(SharedNetworkResponse<SharedSearchNameResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("chatSearchName(config:engine:channelId:companyId:channelLists:roleId:text:skip:limit:channel:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)closeChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId agentId:(NSString *)agentId liveChatId:(NSString *)liveChatId completionHandler:(void (^)(SharedNetworkResponse<SharedGetFollowerChatResultChatRoomList *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("closeChat(config:engine:channelId:companyId:channelLists:followerId:agentId:liveChatId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createNoteConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId text:(NSString *)text completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createNote(config:engine:roleId:channelId:companyId:channelLists:followerId:text:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createTagConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId text:(NSString *)text completionHandler:(void (^)(SharedNetworkResponse<NSString *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createTag(config:engine:roleId:channelId:companyId:channelLists:followerId:text:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteNoteConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId no:(int32_t)no completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteNote(config:engine:roleId:channelId:companyId:channelLists:followerId:no:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteTagConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId tagId:(NSString *)tagId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteTag(config:engine:roleId:channelId:companyId:channelLists:followerId:tagId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)extendLiveChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId liveChatId:(NSString *)liveChatId completionHandler:(void (^)(SharedNetworkResponse<SharedAcceptChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("extendLiveChat(config:engine:channelId:companyId:channelLists:roleId:liveChatId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAgentAssignListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedAgentAssignResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAgentAssignList(config:engine:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAgentChatStatusConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedGetAgentChatStatusResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAgentChatStatus(config:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAgentFilterListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists searchName:(NSString *)searchName completionHandler:(void (^)(SharedNetworkResponse<SharedAgentFilterResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAgentFilterList(config:engine:channelId:companyId:channelLists:searchName:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getChatMessageConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId startID:(NSString *)startID endID:(NSString *)endID fromID:(NSString *)fromID toID:(NSString *)toID limit:(int32_t)limit hide:(BOOL)hide oldResult:(SharedGetChatMessageResult * _Nullable)oldResult userId:(NSString *)userId completionHandler:(void (^)(SharedNetworkResponse<SharedGetChatMessageResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getChatMessage(config:engine:roleId:channelId:companyId:channelLists:followerId:startID:endID:fromID:toID:limit:hide:oldResult:userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFileFolderListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedFileFolderListResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFileFolderList(config:engine:roleId:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFileListByFolderIdConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists folderId:(NSString *)folderId sortType:(SharedSortType *)sortType sortField:(SharedSortField *)sortField completionHandler:(void (^)(SharedNetworkResponse<SharedFileListResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFileListByFolderId(config:engine:roleId:channelId:companyId:channelLists:folderId:sortType:sortField:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFollowerChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine userId:(NSString *)userId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId skip:(int32_t)skip limit:(int32_t)limit sortType:(SharedSortType *)sortType chatType:(SharedChatRoomType *)chatType assigneeId:(NSString *)assigneeId channelType:(NSString * _Nullable)channelType groupId:(NSString * _Nullable)groupId completionHandler:(void (^)(SharedNetworkResponse<SharedGetFollowerChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFollowerChat(config:engine:userId:channelId:companyId:channelLists:roleId:skip:limit:sortType:chatType:assigneeId:channelType:groupId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getGroupAssignListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists userId:(NSString *)userId completionHandler:(void (^)(SharedNetworkResponse<SharedGroupAssignResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getGroupAssignList(config:engine:channelId:companyId:channelLists:userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getGroupFilterListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists searchName:(NSString *)searchName completionHandler:(void (^)(SharedNetworkResponse<SharedGroupFilterResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getGroupFilterList(config:engine:channelId:companyId:channelLists:searchName:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getInformationConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId completionHandler:(void (^)(SharedNetworkResponse<SharedContactInformationResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getInformation(config:engine:roleId:channelId:companyId:channelLists:followerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getMasterDataChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedMasterDataChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getMasterDataChat(config:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getNotesConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId roleLevel:(int32_t)roleLevel userId:(NSString *)userId completionHandler:(void (^)(SharedNetworkResponse<NSArray<SharedContactInformationResultNote *> *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getNotes(config:engine:roleId:channelId:companyId:channelLists:followerId:roleLevel:userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getNotificationCountConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedNotificationCountResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getNotificationCount(config:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getReplyMessageByIdConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId replyMessageId:(NSString *)replyMessageId chatChannelTypeId:(NSString *)chatChannelTypeId completionHandler:(void (^)(SharedNetworkResponse<NSMutableArray<SharedGetChatMessageResultMessageSent *> *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getReplyMessageById(config:engine:channelId:companyId:channelLists:roleId:replyMessageId:chatChannelTypeId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getReplyTemplateConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedGetReplyTemplateResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getReplyTemplate(config:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getSearchFollowerInfoConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSArray<NSString *> *)followerId completionHandler:(void (^)(SharedNetworkResponse<SharedGetSearchFollowerResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getSearchFollowerInfo(config:engine:channelId:companyId:channelLists:roleId:followerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getStickerListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedStickerResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getStickerList(config:engine:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getSwitchModeConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId liveChatId:(NSString *)liveChatId completionHandler:(void (^)(SharedNetworkResponse<SharedSwitchModeResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getSwitchMode(config:engine:channelId:companyId:channelLists:roleId:liveChatId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTagInfoConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId limit:(int32_t)limit skip:(int32_t)skip tagId:(NSString *)tagId channel:(NSArray<NSString *> *)channel completionHandler:(void (^)(SharedNetworkResponse<SharedSearchTagResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTagInfo(config:engine:channelId:companyId:channelLists:roleId:limit:skip:tagId:channel:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTagListConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId sortField:(SharedSortField *)sortField sortType:(SharedSortType *)sortType completionHandler:(void (^)(SharedNetworkResponse<SharedTagListResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTagList(config:engine:channelId:companyId:channelLists:roleId:sortField:sortType:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)searchMessageInChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId skip:(int32_t)skip limit:(int32_t)limit search:(NSString *)search followerId:(NSString *)followerId followerInfo:(SharedGetChatMessageResultSearchFollowerInfo *)followerInfo completionHandler:(void (^)(SharedNetworkResponse<SharedSearchMessageInChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("searchMessageInChat(config:engine:channelId:companyId:channelLists:roleId:skip:limit:search:followerId:followerInfo:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendFileFromLocalConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId userId:(NSString *)userId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId tempId:(NSString *)tempId fileBase64:(NSString *)fileBase64 fileName:(NSString *)fileName resolutionWidth:(int32_t)resolutionWidth reslutionHeight:(int32_t)reslutionHeight fileSize:(int64_t)fileSize completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendFileFromLocal(config:engine:channelId:companyId:channelLists:roleId:userId:followerId:liveChatId:tempId:fileBase64:fileName:resolutionWidth:reslutionHeight:fileSize:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendFileMessageConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId userId:(NSString *)userId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId tempId:(NSString *)tempId file:(SharedFileListResultFileResult *)file completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendFileMessage(config:engine:channelId:companyId:channelLists:roleId:userId:followerId:liveChatId:tempId:file:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendMessageConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId liveChatId:(NSString *)liveChatId followerId:(NSString *)followerId userId:(NSString *)userId message:(NSString *)message tempId:(NSString *)tempId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendMessage(config:engine:channelId:companyId:channelLists:roleId:liveChatId:followerId:userId:message:tempId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendReplyMessageConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId replyMessageId:(NSString *)replyMessageId userId:(NSString *)userId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendReplyMessage(config:engine:channelId:companyId:channelLists:roleId:followerId:liveChatId:replyMessageId:userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendStickerConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId packageId:(int32_t)packageId stickerId:(int32_t)stickerId tempId:(NSString *)tempId userId:(NSString *)userId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sendSticker(config:engine:channelId:companyId:channelLists:roleId:followerId:liveChatId:packageId:stickerId:tempId:userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setAgentDefaultStatusConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId chatStatus:(int32_t)chatStatus completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setAgentDefaultStatus(config:engine:channelId:companyId:channelLists:roleId:chatStatus:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setAgentStatusConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId chatStatus:(int32_t)chatStatus completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setAgentStatus(config:engine:channelId:companyId:channelLists:roleId:chatStatus:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setChatFollowConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId liveChatId:(NSString *)liveChatId userId:(NSString *)userId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setChatFollow(config:engine:channelId:companyId:channelLists:roleId:followerId:liveChatId:userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setChatSpamConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId followerId:(NSString *)followerId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setChatSpam(config:engine:channelId:companyId:channelLists:roleId:followerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)takeChatConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId agentId:(NSString *)agentId liveChatId:(NSString *)liveChatId completionHandler:(void (^)(SharedNetworkResponse<SharedAcceptChatResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("takeChat(config:engine:roleId:channelId:companyId:channelLists:followerId:agentId:liveChatId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateInformationConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists information:(SharedMutableDictionary<NSString *, NSMutableArray<NSString *> *> *)information followerId:(NSString *)followerId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateInformation(config:engine:roleId:channelId:companyId:channelLists:information:followerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateNickNameConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId nickname:(NSString *)nickname completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateNickName(config:engine:roleId:channelId:companyId:channelLists:followerId:nickname:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateNoteConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine roleId:(NSString *)roleId channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists followerId:(NSString *)followerId text:(NSString *)text no:(int32_t)no completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateNote(config:engine:roleId:channelId:companyId:channelLists:followerId:text:no:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingRepoImpl")))
@interface SharedSettingRepoImpl : SharedBase <SharedISettingRepository>
- (instancetype)initWithBaseMapper:(SharedBaseMapper *)baseMapper profileResultMapper:(SharedProfileResultMapper *)profileResultMapper changePasswordResultMapper:(SharedChangePasswordResultMapper *)changePasswordResultMapper checkUserTokenMapper:(SharedCheckUserTokenResultMapper *)checkUserTokenMapper settingNotificationAccountMapper:(SharedSettingNotificationAccountMapper *)settingNotificationAccountMapper settingNotificationMapper:(SharedSettingNotificationMapper *)settingNotificationMapper liveChatSettingMapper:(SharedLiveChatSettingMapper *)liveChatSettingMapper checkAppVersionMapper:(SharedCheckAppVersionMapper *)checkAppVersionMapper __attribute__((swift_name("init(baseMapper:profileResultMapper:changePasswordResultMapper:checkUserTokenMapper:settingNotificationAccountMapper:settingNotificationMapper:liveChatSettingMapper:checkAppVersionMapper:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)changePasswordConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine body:(SharedChangePasswordBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedChangePasswordResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("changePassword(config:engine:body:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)checkAppVersionUpdateConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine appVersion:(NSString *)appVersion completionHandler:(void (^)(SharedNetworkResponse<SharedCheckAppVersionUpdateResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkAppVersionUpdate(config:engine:appVersion:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)checkUserTokenConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine completionHandler:(void (^)(SharedNetworkResponse<SharedCheckUserTokenResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("checkUserToken(config:engine:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getSettingNotificationConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedSettingNotificationResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getSettingNotification(config:engine:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getSettingNotificationAccountConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists completionHandler:(void (^)(SharedNetworkResponse<SharedSettingNotificationAccountResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getSettingNotificationAccount(config:engine:channelId:companyId:channelLists:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)livechatSettingsConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedLiveChatSettingResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("livechatSettings(config:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)logoutConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists roleId:(NSString *)roleId completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("logout(config:engine:channelId:companyId:channelLists:roleId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)saveProfileConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine data:(SharedProfileBody *)body completionHandler:(void (^)(SharedNetworkResponse<SharedProfileResult *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("saveProfile(config:engine:data:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setFirebaseTokenConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists firebaseToken:(NSString *)firebaseToken completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setFirebaseToken(config:engine:channelId:companyId:channelLists:firebaseToken:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setNotificationSettingConfig:(SharedKotlinPair<NSString *, SharedMutableDictionary<NSString *, NSString *> *> *)config engine:(id<SharedKtor_client_coreHttpClientEngine> _Nullable)engine channelId:(NSString *)channelId companyId:(NSString *)companyId channelLists:(NSArray<NSString *> *)channelLists allowNotification:(BOOL)allowNotification channelSettingList:(NSArray<SharedSettingNotificationBodyChannelSetting *> *)channelSettingList chatAvailability:(SharedSettingNotificationBodyChatAvailabilityStatus *)chatAvailability chatSetting:(SharedSettingNotificationBodyChatSetting *)chatSetting completionHandler:(void (^)(SharedNetworkResponse<SharedBoolean *, SharedResponseStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setNotificationSetting(config:engine:channelId:companyId:channelLists:allowNotification:channelSettingList:chatAvailability:chatSetting:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("VolumeUtils")))
@interface SharedVolumeUtils : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)volumeUtils __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedVolumeUtils *shared __attribute__((swift_name("shared")));
- (NSArray<SharedInt *> *)getLabelNameMaximum:(int32_t)maximum __attribute__((swift_name("getLabelName(maximum:)")));
- (NSString *)getTimeFormatTime:(int32_t)time __attribute__((swift_name("getTimeFormat(time:)")));
- (NSString *)getVolumeColorValue:(int32_t)value __attribute__((swift_name("getVolumeColor(value:)")));
- (NSString *)getVolumeColorValue:(int32_t)value maximum:(int32_t)maximum __attribute__((swift_name("getVolumeColor(value:maximum:)")));
@end

__attribute__((swift_name("Mapper")))
@protocol SharedMapper
@required
- (id _Nullable)mapInput:(id _Nullable)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BaseMapper")))
@interface SharedBaseMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedBoolean *)mapInput:(SharedBaseResponseStatusEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StringResultMapper")))
@interface SharedStringResultMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSString *)mapInput:(SharedStringEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChangePasswordResultMapper")))
@interface SharedChangePasswordResultMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedChangePasswordResult *)mapInput:(SharedChangePasswordEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckAppVersionMapper")))
@interface SharedCheckAppVersionMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedCheckAppVersionUpdateResult *)mapInput:(SharedCheckAppVersionUpdateEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckUserTokenResultMapper")))
@interface SharedCheckUserTokenResultMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedCheckUserTokenResult *)mapInput:(SharedCheckUserTokenEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LiveChatSettingMapper")))
@interface SharedLiveChatSettingMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedLiveChatSettingResult *)mapInput:(SharedLiveChatSettingEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileResultMapper")))
@interface SharedProfileResultMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedProfileResult *)mapInput:(SharedProfileEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationAccountMapper")))
@interface SharedSettingNotificationAccountMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedSettingNotificationAccountResult *)mapInput:(SharedSettingNotificationAccountEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingNotificationMapper")))
@interface SharedSettingNotificationMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedSettingNotificationResult *)mapInput:(SharedSettingNotificationEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetOfficialAccountResultMapper")))
@interface SharedGetOfficialAccountResultMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedGetOfficialAccountResult *)mapInput:(SharedKotlinPair<SharedOfficialAccountListEntity *, NSString *> *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoginResultMapper")))
@interface SharedLoginResultMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedLoginResult *)mapInput:(SharedLoginEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ResetPasswordMapper")))
@interface SharedResetPasswordMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedResetPasswordResult *)mapInput:(SharedResetPasswordEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SetNewPasswordMapper")))
@interface SharedSetNewPasswordMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedSetNewPasswordResult *)mapInput:(SharedSetNewPasswordEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserRoleMenuMapper")))
@interface SharedUserRoleMenuMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedUserRoleMenuResult *)mapInput:(SharedUserRoleMenuEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("VerifyOTPMapper")))
@interface SharedVerifyOTPMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedBoolean *)mapInput:(SharedVerifyOTPEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResultMapper")))
@interface SharedDashboardResultMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (class, readonly, getter=companion) SharedDashboardResultMapperCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)doubleToTimeD:(double)d __attribute__((swift_name("doubleToTime(d:)")));
- (SharedDashboardResult *)mapInput:(SharedDashboardEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardResultMapper.Companion")))
@interface SharedDashboardResultMapperCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedDashboardResultMapperCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) int32_t AGENT_NEW_CHAT __attribute__((swift_name("AGENT_NEW_CHAT")));
@property (readonly) int32_t AGENT_OLD_CHAT __attribute__((swift_name("AGENT_OLD_CHAT")));
@property (readonly) int32_t BLOCK_EXPIRED_CONTACT __attribute__((swift_name("BLOCK_EXPIRED_CONTACT")));
@property (readonly) int32_t BOT_NEW_CHAT __attribute__((swift_name("BOT_NEW_CHAT")));
@property (readonly) int32_t BOT_OLD_CHAT __attribute__((swift_name("BOT_OLD_CHAT")));
@property (readonly) NSString *NEW_CHAT_COLOR __attribute__((swift_name("NEW_CHAT_COLOR")));
@property (readonly) int32_t NEW_CONTACT __attribute__((swift_name("NEW_CONTACT")));
@property (readonly) NSString *OLD_CHAT_COLOR __attribute__((swift_name("OLD_CHAT_COLOR")));
@property (readonly) int32_t STATE_BOT_REPLY __attribute__((swift_name("STATE_BOT_REPLY")));
@property (readonly) int32_t STATE_INCOMING __attribute__((swift_name("STATE_INCOMING")));
@property (readonly) int32_t STATE_OUTGOING __attribute__((swift_name("STATE_OUTGOING")));
@property (readonly) int32_t TOTAL_CONTACT __attribute__((swift_name("TOTAL_CONTACT")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactResultMapper")))
@interface SharedContactResultMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedContactResult *)mapInput:(SharedContactEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AcceptChatResultMapper")))
@interface SharedAcceptChatResultMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedAcceptChatResult *)mapInput:(SharedAcceptChatEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AgentAssignMapper")))
@interface SharedAgentAssignMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedAgentAssignResult *)mapInput:(SharedAgentFilterEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AgentFilterMapper")))
@interface SharedAgentFilterMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedAgentFilterResult *)mapInput:(SharedKotlinPair<SharedAgentFilterEntity *, NSString *> *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChatRoomListMapper")))
@interface SharedChatRoomListMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedGetFollowerChatResultChatRoomList * _Nullable)mapInput:(SharedKotlinPair<SharedGetFollowerChatEntityChatEntity *, NSString *> *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CloseChatResultMapper")))
@interface SharedCloseChatResultMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedGetFollowerChatResultChatRoomList *)mapInput:(SharedKotlinPair<SharedCloseChatEntity *, NSString *> *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactInformationResultMapper")))
@interface SharedContactInformationResultMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedContactInformationResult *)mapInput:(SharedKotlinTriple<SharedContactInformationEntity *, SharedTagListEntity *, NSString *> *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactNoteResultMapper")))
@interface SharedContactNoteResultMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSArray<SharedContactInformationResultNote *> *)getNotesNotes:(NSArray<id> *)notes roleLevel:(SharedInt * _Nullable)roleLevel userId:(NSString * _Nullable)userId __attribute__((swift_name("getNotes(notes:roleLevel:userId:)")));
- (NSArray<SharedContactInformationResultNote *> *)mapInput:(SharedKotlinTriple<SharedContactInformationEntity *, SharedInt *, NSString *> *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileFolderListResultMapper")))
@interface SharedFileFolderListResultMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedFileFolderListResult *)mapInput:(SharedFileFolderListEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FileListResultMapper")))
@interface SharedFileListResultMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedFileListResult *)mapInput:(SharedFileListEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetAgentChatStatusResultMapper")))
@interface SharedGetAgentChatStatusResultMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedGetAgentChatStatusResult *)mapInput:(SharedOfficialAccountListEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetChatMessageResultMapper")))
@interface SharedGetChatMessageResultMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedGetChatMessageResult *)mapInput:(SharedKotlinTriple<SharedChatMessageEntity *, SharedGetChatMessageResult *, SharedGetFollowerChatResultChatRoomList *> *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetFollowerChatResultMapper")))
@interface SharedGetFollowerChatResultMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedGetFollowerChatResult *)mapInput:(SharedKotlinPair<SharedGetFollowerChatEntity *, NSString *> *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetReplyTemplateResultMapper")))
@interface SharedGetReplyTemplateResultMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedGetReplyTemplateResult *)mapInput:(SharedReplyTemplateEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetSearchFollowerMapper")))
@interface SharedGetSearchFollowerMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedGetSearchFollowerResult *)mapInput:(SharedChatLiveChatEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupAssignMapper")))
@interface SharedGroupAssignMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedGroupAssignResult *)mapInput:(SharedKotlinPair<SharedGroupAssignEntity *, NSString *> *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupFilterMapper")))
@interface SharedGroupFilterMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedGroupFilterResult *)mapInput:(SharedKotlinPair<SharedGroupFilterEntity *, NSString *> *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MasterDataChatMapper")))
@interface SharedMasterDataChatMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedMasterDataChatResult *)mapInput:(SharedMasterDataChatEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MasterDataChatMapper.ChatTypeResult")))
@interface SharedMasterDataChatMapperChatTypeResult : SharedBase
- (instancetype)initWithList1:(NSArray<SharedMasterDataChatResultChatTypeInfo *> *)list1 list2:(NSArray<SharedMasterDataChatResultChatTypeInfo *> *)list2 __attribute__((swift_name("init(list1:list2:)"))) __attribute__((objc_designated_initializer));
- (SharedMasterDataChatMapperChatTypeResult *)doCopyList1:(NSArray<SharedMasterDataChatResultChatTypeInfo *> *)list1 list2:(NSArray<SharedMasterDataChatResultChatTypeInfo *> *)list2 __attribute__((swift_name("doCopy(list1:list2:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<SharedMasterDataChatResultChatTypeInfo *> *list1 __attribute__((swift_name("list1")));
@property (readonly) NSArray<SharedMasterDataChatResultChatTypeInfo *> *list2 __attribute__((swift_name("list2")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NotificationCountMapper")))
@interface SharedNotificationCountMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedNotificationCountResult *)mapInput:(SharedNotificationCountEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplyMessageResultMapper")))
@interface SharedReplyMessageResultMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSMutableArray<SharedGetChatMessageResultMessageSent *> *)mapInput:(SharedKotlinPair<SharedReplyMessageEntity *, NSString *> *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageInChatMapper")))
@interface SharedSearchMessageInChatMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedSearchMessageInChatResult *)mapInput:(SharedKotlinPair<SharedSearchMessageInChatEntity *, SharedGetChatMessageResultSearchFollowerInfo *> *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchMessageMapper")))
@interface SharedSearchMessageMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedSearchMessageResult *)mapInput:(SharedSearchMessageEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchNameMapper")))
@interface SharedSearchNameMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedSearchNameResult *)mapInput:(SharedSearchNameEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchTagMapper")))
@interface SharedSearchTagMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedSearchTagResult *)mapInput:(SharedSearchTagEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StickerResultMapper")))
@interface SharedStickerResultMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedStickerResult *)mapInput:(SharedStickerEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwitchModeMapper")))
@interface SharedSwitchModeMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedSwitchModeResult *)mapInput:(SharedSwitchModeEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TagListMapper")))
@interface SharedTagListMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedTagListResult *)mapInput:(SharedTagListEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((swift_name("Message")))
@protocol SharedMessage
@required
- (NSString *)builder __attribute__((swift_name("builder()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CarouselMessage")))
@interface SharedCarouselMessage : SharedBase <SharedMessage>
- (instancetype)initWithMJSONMessage:(NSArray<SharedKotlinx_serialization_jsonJsonElement *> *)mJSONMessage __attribute__((swift_name("init(mJSONMessage:)"))) __attribute__((objc_designated_initializer));
- (NSString *)builder __attribute__((swift_name("builder()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FlexMessage")))
@interface SharedFlexMessage : SharedBase <SharedMessage>
- (instancetype)initWithMJSONMessage:(NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> *)mJSONMessage __attribute__((swift_name("init(mJSONMessage:)"))) __attribute__((objc_designated_initializer));
- (NSString *)builder __attribute__((swift_name("builder()")));
- (NSString *)getContainerHTMLBuilder __attribute__((swift_name("getContainerHTMLBuilder()")));
- (float)getFlexMessageSize __attribute__((swift_name("getFlexMessageSize()")));
- (void)setCarouselBuilderBuilder:(BOOL)builder __attribute__((swift_name("setCarouselBuilder(builder:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BoxBuilder")))
@interface SharedBoxBuilder : SharedBase
- (instancetype)initWithMBoxData:(NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> *)mBoxData __attribute__((swift_name("init(mBoxData:)"))) __attribute__((objc_designated_initializer));
- (NSString *)builder __attribute__((swift_name("builder()")));
- (void)setBubbleSizeBubbleSize:(float)bubbleSize __attribute__((swift_name("setBubbleSize(bubbleSize:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ButtonBuilder")))
@interface SharedButtonBuilder : SharedBase
- (instancetype)initWithMButtonData:(NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> *)mButtonData __attribute__((swift_name("init(mButtonData:)"))) __attribute__((objc_designated_initializer));
- (NSString *)builder __attribute__((swift_name("builder()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FillerBuilder")))
@interface SharedFillerBuilder : SharedBase
- (instancetype)initWithMFillerData:(NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> *)mFillerData __attribute__((swift_name("init(mFillerData:)"))) __attribute__((objc_designated_initializer));
- (NSString *)builder __attribute__((swift_name("builder()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IconBuilder")))
@interface SharedIconBuilder : SharedBase
- (instancetype)initWithMIconData:(NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> *)mIconData __attribute__((swift_name("init(mIconData:)"))) __attribute__((objc_designated_initializer));
- (NSString *)builder __attribute__((swift_name("builder()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ImageBuilder")))
@interface SharedImageBuilder : SharedBase
- (instancetype)initWithMImageData:(NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> *)mImageData __attribute__((swift_name("init(mImageData:)"))) __attribute__((objc_designated_initializer));
- (NSString *)builder __attribute__((swift_name("builder()")));
- (void)setBubbleSizeBubbleSize:(float)bubbleSize __attribute__((swift_name("setBubbleSize(bubbleSize:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SeparatorBuilder")))
@interface SharedSeparatorBuilder : SharedBase
- (instancetype)initWithMSeparatorData:(NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> *)mSeparatorData __attribute__((swift_name("init(mSeparatorData:)"))) __attribute__((objc_designated_initializer));
- (NSString *)builder __attribute__((swift_name("builder()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SpacerBuilder")))
@interface SharedSpacerBuilder : SharedBase
- (instancetype)initWithMSpacerData:(NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> *)mSpacerData __attribute__((swift_name("init(mSpacerData:)"))) __attribute__((objc_designated_initializer));
- (NSString *)builder __attribute__((swift_name("builder()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SpanBuilder")))
@interface SharedSpanBuilder : SharedBase
- (instancetype)initWithMSpanData:(NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> *)mSpanData __attribute__((swift_name("init(mSpanData:)"))) __attribute__((objc_designated_initializer));
- (NSString *)builder __attribute__((swift_name("builder()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TextBuilder")))
@interface SharedTextBuilder : SharedBase
- (instancetype)initWithMTextData:(NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> *)mTextData __attribute__((swift_name("init(mTextData:)"))) __attribute__((objc_designated_initializer));
- (NSString *)builder __attribute__((swift_name("builder()")));
- (void)setBubbleSizeBubbleSize:(float)bubbleSize __attribute__((swift_name("setBubbleSize(bubbleSize:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Blocks")))
@interface SharedBlocks : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)blocks __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedBlocks *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Blocks.Container")))
@interface SharedBlocksContainer : SharedKotlinEnum<SharedBlocksContainer *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedBlocksContainer *header __attribute__((swift_name("header")));
@property (class, readonly) SharedBlocksContainer *hero __attribute__((swift_name("hero")));
@property (class, readonly) SharedBlocksContainer *body __attribute__((swift_name("body")));
@property (class, readonly) SharedBlocksContainer *footer __attribute__((swift_name("footer")));
+ (SharedKotlinArray<SharedBlocksContainer *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Blocks.Types")))
@interface SharedBlocksTypes : SharedKotlinEnum<SharedBlocksTypes *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedBlocksTypes *header __attribute__((swift_name("header")));
@property (class, readonly) SharedBlocksTypes *hero __attribute__((swift_name("hero")));
@property (class, readonly) SharedBlocksTypes *body __attribute__((swift_name("body")));
@property (class, readonly) SharedBlocksTypes *footer __attribute__((swift_name("footer")));
+ (SharedKotlinArray<SharedBlocksTypes *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Bubble")))
@interface SharedBubble : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)bubble __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedBubble *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Bubble.ImageSize")))
@interface SharedBubbleImageSize : SharedKotlinEnum<SharedBubbleImageSize *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedBubbleImageSize *xxs __attribute__((swift_name("xxs")));
@property (class, readonly) SharedBubbleImageSize *xs __attribute__((swift_name("xs")));
@property (class, readonly) SharedBubbleImageSize *sm __attribute__((swift_name("sm")));
@property (class, readonly) SharedBubbleImageSize *md __attribute__((swift_name("md")));
@property (class, readonly) SharedBubbleImageSize *lg __attribute__((swift_name("lg")));
@property (class, readonly) SharedBubbleImageSize *xl __attribute__((swift_name("xl")));
@property (class, readonly) SharedBubbleImageSize *xxl __attribute__((swift_name("xxl")));
@property (class, readonly) SharedBubbleImageSize *x3xl __attribute__((swift_name("x3xl")));
@property (class, readonly) SharedBubbleImageSize *x4xl __attribute__((swift_name("x4xl")));
@property (class, readonly) SharedBubbleImageSize *x5xl __attribute__((swift_name("x5xl")));
@property (class, readonly) SharedBubbleImageSize *full __attribute__((swift_name("full")));
+ (SharedKotlinArray<SharedBubbleImageSize *> *)values __attribute__((swift_name("values()")));
@property (readonly) double value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Bubble.Size")))
@interface SharedBubbleSize : SharedKotlinEnum<SharedBubbleSize *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedBubbleSize *giga __attribute__((swift_name("giga")));
@property (class, readonly) SharedBubbleSize *mega __attribute__((swift_name("mega")));
@property (class, readonly) SharedBubbleSize *kilo __attribute__((swift_name("kilo")));
@property (class, readonly) SharedBubbleSize *micro __attribute__((swift_name("micro")));
@property (class, readonly) SharedBubbleSize *nano __attribute__((swift_name("nano")));
+ (SharedKotlinArray<SharedBubbleSize *> *)values __attribute__((swift_name("values()")));
@property (readonly) double value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Bubble.Spacing")))
@interface SharedBubbleSpacing : SharedKotlinEnum<SharedBubbleSpacing *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedBubbleSpacing *xs __attribute__((swift_name("xs")));
@property (class, readonly) SharedBubbleSpacing *sm __attribute__((swift_name("sm")));
@property (class, readonly) SharedBubbleSpacing *md __attribute__((swift_name("md")));
@property (class, readonly) SharedBubbleSpacing *lg __attribute__((swift_name("lg")));
@property (class, readonly) SharedBubbleSpacing *xl __attribute__((swift_name("xl")));
@property (class, readonly) SharedBubbleSpacing *xxl __attribute__((swift_name("xxl")));
+ (SharedKotlinArray<SharedBubbleSpacing *> *)values __attribute__((swift_name("values()")));
@property (readonly) double value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass")))
@interface SharedCSSClass : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)cSSClass __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedCSSClass *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.Align")))
@interface SharedCSSClassAlign : SharedKotlinEnum<SharedCSSClassAlign *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassAlign *alignstart __attribute__((swift_name("alignstart")));
@property (class, readonly) SharedCSSClassAlign *alignend __attribute__((swift_name("alignend")));
@property (class, readonly) SharedCSSClassAlign *aligncenter __attribute__((swift_name("aligncenter")));
+ (SharedKotlinArray<SharedCSSClassAlign *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.AlignItems")))
@interface SharedCSSClassAlignItems : SharedKotlinEnum<SharedCSSClassAlignItems *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassAlignItems *alignitemsstart __attribute__((swift_name("alignitemsstart")));
@property (class, readonly) SharedCSSClassAlignItems *alignitemsend __attribute__((swift_name("alignitemsend")));
@property (class, readonly) SharedCSSClassAlignItems *alignitemscenter __attribute__((swift_name("alignitemscenter")));
@property (class, readonly) SharedCSSClassAlignItems *alignitemsbaseline __attribute__((swift_name("alignitemsbaseline")));
@property (class, readonly) SharedCSSClassAlignItems *alignitemsstretch __attribute__((swift_name("alignitemsstretch")));
+ (SharedKotlinArray<SharedCSSClassAlignItems *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.AspectMode")))
@interface SharedCSSClassAspectMode : SharedKotlinEnum<SharedCSSClassAspectMode *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassAspectMode *aspectmodefit __attribute__((swift_name("aspectmodefit")));
@property (class, readonly) SharedCSSClassAspectMode *aspectmodecover __attribute__((swift_name("aspectmodecover")));
+ (SharedKotlinArray<SharedCSSClassAspectMode *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.Base")))
@interface SharedCSSClassBase : SharedKotlinEnum<SharedCSSClassBase *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassBase *flexcontainer __attribute__((swift_name("flexcontainer")));
@property (class, readonly) SharedCSSClassBase *hasfooter __attribute__((swift_name("hasfooter")));
@property (class, readonly) SharedCSSClassBase *imagesizefull __attribute__((swift_name("imagesizefull")));
+ (SharedKotlinArray<SharedCSSClassBase *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.Block")))
@interface SharedCSSClassBlock : SharedKotlinEnum<SharedCSSClassBlock *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassBlock *blockheader __attribute__((swift_name("blockheader")));
@property (class, readonly) SharedCSSClassBlock *blockhero __attribute__((swift_name("blockhero")));
@property (class, readonly) SharedCSSClassBlock *blockbody __attribute__((swift_name("blockbody")));
@property (class, readonly) SharedCSSClassBlock *blockfooter __attribute__((swift_name("blockfooter")));
+ (SharedKotlinArray<SharedCSSClassBlock *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.BoxTypeProperties")))
@interface SharedCSSClassBoxTypeProperties : SharedKotlinEnum<SharedCSSClassBoxTypeProperties *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassBoxTypeProperties *boxtypemargin __attribute__((swift_name("boxtypemargin")));
@property (class, readonly) SharedCSSClassBoxTypeProperties *boxtypespacing __attribute__((swift_name("boxtypespacing")));
+ (SharedKotlinArray<SharedCSSClassBoxTypeProperties *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.BoxTypePropertiesValue")))
@interface SharedCSSClassBoxTypePropertiesValue : SharedKotlinEnum<SharedCSSClassBoxTypePropertiesValue *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassBoxTypePropertiesValue *boxtypemargin __attribute__((swift_name("boxtypemargin")));
@property (class, readonly) SharedCSSClassBoxTypePropertiesValue *boxtypespacing __attribute__((swift_name("boxtypespacing")));
+ (SharedKotlinArray<SharedCSSClassBoxTypePropertiesValue *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.Button")))
@interface SharedCSSClassButton : SharedKotlinEnum<SharedCSSClassButton *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassButton *heightsm __attribute__((swift_name("heightsm")));
@property (class, readonly) SharedCSSClassButton *heightmd __attribute__((swift_name("heightmd")));
@property (class, readonly) SharedCSSClassButton *buttonstyleprimary __attribute__((swift_name("buttonstyleprimary")));
@property (class, readonly) SharedCSSClassButton *buttonstylesecondary __attribute__((swift_name("buttonstylesecondary")));
@property (class, readonly) SharedCSSClassButton *buttonstylelink __attribute__((swift_name("buttonstylelink")));
+ (SharedKotlinArray<SharedCSSClassButton *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.ButtonTypeProperties")))
@interface SharedCSSClassButtonTypeProperties : SharedKotlinEnum<SharedCSSClassButtonTypeProperties *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassButtonTypeProperties *buttontypemargin __attribute__((swift_name("buttontypemargin")));
+ (SharedKotlinArray<SharedCSSClassButtonTypeProperties *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.ButtonTypePropertiesValue")))
@interface SharedCSSClassButtonTypePropertiesValue : SharedKotlinEnum<SharedCSSClassButtonTypePropertiesValue *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassButtonTypePropertiesValue *buttontypemargin __attribute__((swift_name("buttontypemargin")));
+ (SharedKotlinArray<SharedCSSClassButtonTypePropertiesValue *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.CarouselClass")))
@interface SharedCSSClassCarouselClass : SharedKotlinEnum<SharedCSSClassCarouselClass *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassCarouselClass *carousel __attribute__((swift_name("carousel")));
@property (class, readonly) SharedCSSClassCarouselClass *carouselinner __attribute__((swift_name("carouselinner")));
@property (class, readonly) SharedCSSClassCarouselClass *carouselitem __attribute__((swift_name("carouselitem")));
+ (SharedKotlinArray<SharedCSSClassCarouselClass *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.Components")))
@interface SharedCSSClassComponents : SharedKotlinEnum<SharedCSSClassComponents *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassComponents *boxtype __attribute__((swift_name("boxtype")));
@property (class, readonly) SharedCSSClassComponents *texttype __attribute__((swift_name("texttype")));
@property (class, readonly) SharedCSSClassComponents *imagetype __attribute__((swift_name("imagetype")));
@property (class, readonly) SharedCSSClassComponents *spantype __attribute__((swift_name("spantype")));
@property (class, readonly) SharedCSSClassComponents *icontype __attribute__((swift_name("icontype")));
@property (class, readonly) SharedCSSClassComponents *buttontype __attribute__((swift_name("buttontype")));
@property (class, readonly) SharedCSSClassComponents *fillertype __attribute__((swift_name("fillertype")));
@property (class, readonly) SharedCSSClassComponents *spacertype __attribute__((swift_name("spacertype")));
@property (class, readonly) SharedCSSClassComponents *separatortype __attribute__((swift_name("separatortype")));
+ (SharedKotlinArray<SharedCSSClassComponents *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.Direction")))
@interface SharedCSSClassDirection : SharedKotlinEnum<SharedCSSClassDirection *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassDirection *flexltr __attribute__((swift_name("flexltr")));
@property (class, readonly) SharedCSSClassDirection *flexrtl __attribute__((swift_name("flexrtl")));
@property (class, readonly) SharedCSSClassDirection *ltr __attribute__((swift_name("ltr")));
@property (class, readonly) SharedCSSClassDirection *rtl __attribute__((swift_name("rtl")));
+ (SharedKotlinArray<SharedCSSClassDirection *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.Gravity")))
@interface SharedCSSClassGravity : SharedKotlinEnum<SharedCSSClassGravity *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassGravity *gravitytop __attribute__((swift_name("gravitytop")));
@property (class, readonly) SharedCSSClassGravity *gravitycenter __attribute__((swift_name("gravitycenter")));
@property (class, readonly) SharedCSSClassGravity *gravitybottom __attribute__((swift_name("gravitybottom")));
+ (SharedKotlinArray<SharedCSSClassGravity *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.IconTypeProperties")))
@interface SharedCSSClassIconTypeProperties : SharedKotlinEnum<SharedCSSClassIconTypeProperties *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassIconTypeProperties *icontypemargin __attribute__((swift_name("icontypemargin")));
@property (class, readonly) SharedCSSClassIconTypeProperties *icontypesize __attribute__((swift_name("icontypesize")));
+ (SharedKotlinArray<SharedCSSClassIconTypeProperties *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.IconTypePropertiesValue")))
@interface SharedCSSClassIconTypePropertiesValue : SharedKotlinEnum<SharedCSSClassIconTypePropertiesValue *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassIconTypePropertiesValue *icontypemargin __attribute__((swift_name("icontypemargin")));
@property (class, readonly) SharedCSSClassIconTypePropertiesValue *icontypesize __attribute__((swift_name("icontypesize")));
+ (SharedKotlinArray<SharedCSSClassIconTypePropertiesValue *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.ImageTypeProperties")))
@interface SharedCSSClassImageTypeProperties : SharedKotlinEnum<SharedCSSClassImageTypeProperties *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassImageTypeProperties *imagetypemargin __attribute__((swift_name("imagetypemargin")));
@property (class, readonly) SharedCSSClassImageTypeProperties *imagetypesizefull __attribute__((swift_name("imagetypesizefull")));
+ (SharedKotlinArray<SharedCSSClassImageTypeProperties *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.ImageTypePropertiesValue")))
@interface SharedCSSClassImageTypePropertiesValue : SharedKotlinEnum<SharedCSSClassImageTypePropertiesValue *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassImageTypePropertiesValue *imagetypemargin __attribute__((swift_name("imagetypemargin")));
+ (SharedKotlinArray<SharedCSSClassImageTypePropertiesValue *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.JustifyContent")))
@interface SharedCSSClassJustifyContent : SharedKotlinEnum<SharedCSSClassJustifyContent *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassJustifyContent *justifycontentstart __attribute__((swift_name("justifycontentstart")));
@property (class, readonly) SharedCSSClassJustifyContent *justifycontentend __attribute__((swift_name("justifycontentend")));
@property (class, readonly) SharedCSSClassJustifyContent *justifycontentcenter __attribute__((swift_name("justifycontentcenter")));
@property (class, readonly) SharedCSSClassJustifyContent *justifycontentspacebetween __attribute__((swift_name("justifycontentspacebetween")));
@property (class, readonly) SharedCSSClassJustifyContent *justifycontentspacearound __attribute__((swift_name("justifycontentspacearound")));
@property (class, readonly) SharedCSSClassJustifyContent *justifycontentspaceevenly __attribute__((swift_name("justifycontentspaceevenly")));
+ (SharedKotlinArray<SharedCSSClassJustifyContent *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.Layout")))
@interface SharedCSSClassLayout : SharedKotlinEnum<SharedCSSClassLayout *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassLayout *horizontal __attribute__((swift_name("horizontal")));
@property (class, readonly) SharedCSSClassLayout *vertical __attribute__((swift_name("vertical")));
@property (class, readonly) SharedCSSClassLayout *baseline __attribute__((swift_name("baseline")));
+ (SharedKotlinArray<SharedCSSClassLayout *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.Position")))
@interface SharedCSSClassPosition : SharedKotlinEnum<SharedCSSClassPosition *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassPosition *positionrelative __attribute__((swift_name("positionrelative")));
@property (class, readonly) SharedCSSClassPosition *positionabsolute __attribute__((swift_name("positionabsolute")));
+ (SharedKotlinArray<SharedCSSClassPosition *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.SeparatorTypeProperties")))
@interface SharedCSSClassSeparatorTypeProperties : SharedKotlinEnum<SharedCSSClassSeparatorTypeProperties *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassSeparatorTypeProperties *separatortypemargin __attribute__((swift_name("separatortypemargin")));
+ (SharedKotlinArray<SharedCSSClassSeparatorTypeProperties *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.SeparatorTypePropertiesValue")))
@interface SharedCSSClassSeparatorTypePropertiesValue : SharedKotlinEnum<SharedCSSClassSeparatorTypePropertiesValue *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassSeparatorTypePropertiesValue *separatortypemargin __attribute__((swift_name("separatortypemargin")));
+ (SharedKotlinArray<SharedCSSClassSeparatorTypePropertiesValue *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.Size")))
@interface SharedCSSClassSize : SharedKotlinEnum<SharedCSSClassSize *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassSize *flexsizegiga __attribute__((swift_name("flexsizegiga")));
@property (class, readonly) SharedCSSClassSize *flexsizemega __attribute__((swift_name("flexsizemega")));
@property (class, readonly) SharedCSSClassSize *flexsizekilo __attribute__((swift_name("flexsizekilo")));
@property (class, readonly) SharedCSSClassSize *flexsizemicro __attribute__((swift_name("flexsizemicro")));
@property (class, readonly) SharedCSSClassSize *flexsizenano __attribute__((swift_name("flexsizenano")));
+ (SharedKotlinArray<SharedCSSClassSize *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.SpacerTypeProperties")))
@interface SharedCSSClassSpacerTypeProperties : SharedKotlinEnum<SharedCSSClassSpacerTypeProperties *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassSpacerTypeProperties *spacertypesize __attribute__((swift_name("spacertypesize")));
+ (SharedKotlinArray<SharedCSSClassSpacerTypeProperties *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.SpacerTypePropertiesValue")))
@interface SharedCSSClassSpacerTypePropertiesValue : SharedKotlinEnum<SharedCSSClassSpacerTypePropertiesValue *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassSpacerTypePropertiesValue *spacertypesize __attribute__((swift_name("spacertypesize")));
+ (SharedKotlinArray<SharedCSSClassSpacerTypePropertiesValue *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.SpanTypeProperties")))
@interface SharedCSSClassSpanTypeProperties : SharedKotlinEnum<SharedCSSClassSpanTypeProperties *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassSpanTypeProperties *spantypesize __attribute__((swift_name("spantypesize")));
+ (SharedKotlinArray<SharedCSSClassSpanTypeProperties *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.SpanTypePropertiesValue")))
@interface SharedCSSClassSpanTypePropertiesValue : SharedKotlinEnum<SharedCSSClassSpanTypePropertiesValue *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassSpanTypePropertiesValue *spantypesize __attribute__((swift_name("spantypesize")));
+ (SharedKotlinArray<SharedCSSClassSpanTypePropertiesValue *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.TextAlign")))
@interface SharedCSSClassTextAlign : SharedKotlinEnum<SharedCSSClassTextAlign *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassTextAlign *textalignstart __attribute__((swift_name("textalignstart")));
@property (class, readonly) SharedCSSClassTextAlign *textaligncenter __attribute__((swift_name("textaligncenter")));
@property (class, readonly) SharedCSSClassTextAlign *textalignend __attribute__((swift_name("textalignend")));
+ (SharedKotlinArray<SharedCSSClassTextAlign *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.TextTypeProperties")))
@interface SharedCSSClassTextTypeProperties : SharedKotlinEnum<SharedCSSClassTextTypeProperties *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassTextTypeProperties *texttypemargin __attribute__((swift_name("texttypemargin")));
@property (class, readonly) SharedCSSClassTextTypeProperties *texttypemaxline __attribute__((swift_name("texttypemaxline")));
@property (class, readonly) SharedCSSClassTextTypeProperties *texttypewrap __attribute__((swift_name("texttypewrap")));
@property (class, readonly) SharedCSSClassTextTypeProperties *texttypesize __attribute__((swift_name("texttypesize")));
+ (SharedKotlinArray<SharedCSSClassTextTypeProperties *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CSSClass.TextTypePropertiesValue")))
@interface SharedCSSClassTextTypePropertiesValue : SharedKotlinEnum<SharedCSSClassTextTypePropertiesValue *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedCSSClassTextTypePropertiesValue *texttypemargin __attribute__((swift_name("texttypemargin")));
@property (class, readonly) SharedCSSClassTextTypePropertiesValue *texttypemaxline __attribute__((swift_name("texttypemaxline")));
@property (class, readonly) SharedCSSClassTextTypePropertiesValue *texttypesize __attribute__((swift_name("texttypesize")));
+ (SharedKotlinArray<SharedCSSClassTextTypePropertiesValue *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Components")))
@interface SharedComponents : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)components __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedComponents *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Components.Types")))
@interface SharedComponentsTypes : SharedKotlinEnum<SharedComponentsTypes *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedComponentsTypes *box __attribute__((swift_name("box")));
@property (class, readonly) SharedComponentsTypes *button __attribute__((swift_name("button")));
@property (class, readonly) SharedComponentsTypes *image __attribute__((swift_name("image")));
@property (class, readonly) SharedComponentsTypes *icon __attribute__((swift_name("icon")));
@property (class, readonly) SharedComponentsTypes *text __attribute__((swift_name("text")));
@property (class, readonly) SharedComponentsTypes *span __attribute__((swift_name("span")));
@property (class, readonly) SharedComponentsTypes *separator __attribute__((swift_name("separator")));
@property (class, readonly) SharedComponentsTypes *spacer __attribute__((swift_name("spacer")));
@property (class, readonly) SharedComponentsTypes *filler __attribute__((swift_name("filler")));
+ (SharedKotlinArray<SharedComponentsTypes *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Components.Views")))
@interface SharedComponentsViews : SharedKotlinEnum<SharedComponentsViews *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedComponentsViews *box __attribute__((swift_name("box")));
@property (class, readonly) SharedComponentsViews *button __attribute__((swift_name("button")));
@property (class, readonly) SharedComponentsViews *image __attribute__((swift_name("image")));
@property (class, readonly) SharedComponentsViews *icon __attribute__((swift_name("icon")));
@property (class, readonly) SharedComponentsViews *text __attribute__((swift_name("text")));
@property (class, readonly) SharedComponentsViews *span __attribute__((swift_name("span")));
@property (class, readonly) SharedComponentsViews *separator __attribute__((swift_name("separator")));
@property (class, readonly) SharedComponentsViews *spacer __attribute__((swift_name("spacer")));
@property (class, readonly) SharedComponentsViews *filler __attribute__((swift_name("filler")));
+ (SharedKotlinArray<SharedComponentsViews *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MapperObject")))
@interface SharedMapperObject : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)mapperObject __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMapperObject *shared __attribute__((swift_name("shared")));
- (NSMutableArray<NSDictionary<NSString *, NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> *> *> *)getJson:(NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> *)json __attribute__((swift_name("get(json:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Messages")))
@interface SharedMessages : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)messages __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedMessages *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Messages.Views")))
@interface SharedMessagesViews : SharedKotlinEnum<SharedMessagesViews *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedMessagesViews *text __attribute__((swift_name("text")));
@property (class, readonly) SharedMessagesViews *sticker __attribute__((swift_name("sticker")));
@property (class, readonly) SharedMessagesViews *video __attribute__((swift_name("video")));
@property (class, readonly) SharedMessagesViews *audio __attribute__((swift_name("audio")));
@property (class, readonly) SharedMessagesViews *image __attribute__((swift_name("image")));
@property (class, readonly) SharedMessagesViews *location __attribute__((swift_name("location")));
@property (class, readonly) SharedMessagesViews *flex __attribute__((swift_name("flex")));
@property (class, readonly) SharedMessagesViews *carousel __attribute__((swift_name("carousel")));
+ (SharedKotlinArray<SharedMessagesViews *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Messages.ViewsType")))
@interface SharedMessagesViewsType : SharedKotlinEnum<SharedMessagesViewsType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedMessagesViewsType *text __attribute__((swift_name("text")));
@property (class, readonly) SharedMessagesViewsType *sticker __attribute__((swift_name("sticker")));
@property (class, readonly) SharedMessagesViewsType *video __attribute__((swift_name("video")));
@property (class, readonly) SharedMessagesViewsType *audio __attribute__((swift_name("audio")));
@property (class, readonly) SharedMessagesViewsType *image __attribute__((swift_name("image")));
@property (class, readonly) SharedMessagesViewsType *location __attribute__((swift_name("location")));
@property (class, readonly) SharedMessagesViewsType *flex __attribute__((swift_name("flex")));
@property (class, readonly) SharedMessagesViewsType *carousel __attribute__((swift_name("carousel")));
+ (SharedKotlinArray<SharedMessagesViewsType *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties")))
@interface SharedProperties : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)properties __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedProperties *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.Key")))
@interface SharedPropertiesKey : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)key __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPropertiesKey *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.KeyBackground")))
@interface SharedPropertiesKeyBackground : SharedKotlinEnum<SharedPropertiesKeyBackground *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesKeyBackground *angle __attribute__((swift_name("angle")));
@property (class, readonly) SharedPropertiesKeyBackground *endcolor __attribute__((swift_name("endcolor")));
@property (class, readonly) SharedPropertiesKeyBackground *startcolor __attribute__((swift_name("startcolor")));
@property (class, readonly) SharedPropertiesKeyBackground *centercolor __attribute__((swift_name("centercolor")));
@property (class, readonly) SharedPropertiesKeyBackground *centerposition __attribute__((swift_name("centerposition")));
+ (SharedKotlinArray<SharedPropertiesKeyBackground *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.KeyBase")))
@interface SharedPropertiesKeyBase : SharedKotlinEnum<SharedPropertiesKeyBase *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesKeyBase *direction __attribute__((swift_name("direction")));
@property (class, readonly) SharedPropertiesKeyBase *size __attribute__((swift_name("size")));
@property (class, readonly) SharedPropertiesKeyBase *type __attribute__((swift_name("type")));
@property (class, readonly) SharedPropertiesKeyBase *text __attribute__((swift_name("text")));
@property (class, readonly) SharedPropertiesKeyBase *action __attribute__((swift_name("action")));
@property (class, readonly) SharedPropertiesKeyBase *contents __attribute__((swift_name("contents")));
@property (class, readonly) SharedPropertiesKeyBase *layout __attribute__((swift_name("layout")));
@property (class, readonly) SharedPropertiesKeyBase *flex __attribute__((swift_name("flex")));
@property (class, readonly) SharedPropertiesKeyBase *width __attribute__((swift_name("width")));
@property (class, readonly) SharedPropertiesKeyBase *height __attribute__((swift_name("height")));
@property (class, readonly) SharedPropertiesKeyBase *spacing __attribute__((swift_name("spacing")));
@property (class, readonly) SharedPropertiesKeyBase *position __attribute__((swift_name("position")));
@property (class, readonly) SharedPropertiesKeyBase *color __attribute__((swift_name("color")));
@property (class, readonly) SharedPropertiesKeyBase *style __attribute__((swift_name("style")));
@property (class, readonly) SharedPropertiesKeyBase *weight __attribute__((swift_name("weight")));
@property (class, readonly) SharedPropertiesKeyBase *decoration __attribute__((swift_name("decoration")));
@property (class, readonly) SharedPropertiesKeyBase *margin __attribute__((swift_name("margin")));
@property (class, readonly) SharedPropertiesKeyBase *maxlines __attribute__((swift_name("maxlines")));
@property (class, readonly) SharedPropertiesKeyBase *justifycontent __attribute__((swift_name("justifycontent")));
@property (class, readonly) SharedPropertiesKeyBase *alignitems __attribute__((swift_name("alignitems")));
@property (class, readonly) SharedPropertiesKeyBase *adjustmode __attribute__((swift_name("adjustmode")));
@property (class, readonly) SharedPropertiesKeyBase *align __attribute__((swift_name("align")));
@property (class, readonly) SharedPropertiesKeyBase *gravity __attribute__((swift_name("gravity")));
@property (class, readonly) SharedPropertiesKeyBase *background __attribute__((swift_name("background")));
+ (SharedKotlinArray<SharedPropertiesKeyBase *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.KeyBubble")))
@interface SharedPropertiesKeyBubble : SharedKotlinEnum<SharedPropertiesKeyBubble *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesKeyBubble *header __attribute__((swift_name("header")));
@property (class, readonly) SharedPropertiesKeyBubble *hero __attribute__((swift_name("hero")));
@property (class, readonly) SharedPropertiesKeyBubble *body __attribute__((swift_name("body")));
@property (class, readonly) SharedPropertiesKeyBubble *footer __attribute__((swift_name("footer")));
@property (class, readonly) SharedPropertiesKeyBubble *styles __attribute__((swift_name("styles")));
+ (SharedKotlinArray<SharedPropertiesKeyBubble *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.KeyButton")))
@interface SharedPropertiesKeyButton : SharedKotlinEnum<SharedPropertiesKeyButton *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesKeyButton *label __attribute__((swift_name("label")));
+ (SharedKotlinArray<SharedPropertiesKeyButton *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.KeyImage")))
@interface SharedPropertiesKeyImage : SharedKotlinEnum<SharedPropertiesKeyImage *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesKeyImage *url __attribute__((swift_name("url")));
@property (class, readonly) SharedPropertiesKeyImage *aspectmode __attribute__((swift_name("aspectmode")));
@property (class, readonly) SharedPropertiesKeyImage *aspectratio __attribute__((swift_name("aspectratio")));
@property (class, readonly) SharedPropertiesKeyImage *originalcontenturl __attribute__((swift_name("originalcontenturl")));
@property (class, readonly) SharedPropertiesKeyImage *previewimageurl __attribute__((swift_name("previewimageurl")));
+ (SharedKotlinArray<SharedPropertiesKeyImage *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.KeyOffset")))
@interface SharedPropertiesKeyOffset : SharedKotlinEnum<SharedPropertiesKeyOffset *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesKeyOffset *top __attribute__((swift_name("top")));
@property (class, readonly) SharedPropertiesKeyOffset *bottom __attribute__((swift_name("bottom")));
@property (class, readonly) SharedPropertiesKeyOffset *start __attribute__((swift_name("start")));
@property (class, readonly) SharedPropertiesKeyOffset *end __attribute__((swift_name("end")));
+ (SharedKotlinArray<SharedPropertiesKeyOffset *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.KeyPadding")))
@interface SharedPropertiesKeyPadding : SharedKotlinEnum<SharedPropertiesKeyPadding *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesKeyPadding *paddingall __attribute__((swift_name("paddingall")));
@property (class, readonly) SharedPropertiesKeyPadding *paddingtop __attribute__((swift_name("paddingtop")));
@property (class, readonly) SharedPropertiesKeyPadding *paddingbottom __attribute__((swift_name("paddingbottom")));
@property (class, readonly) SharedPropertiesKeyPadding *paddingstart __attribute__((swift_name("paddingstart")));
@property (class, readonly) SharedPropertiesKeyPadding *paddingend __attribute__((swift_name("paddingend")));
+ (SharedKotlinArray<SharedPropertiesKeyPadding *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.KeyStyle")))
@interface SharedPropertiesKeyStyle : SharedKotlinEnum<SharedPropertiesKeyStyle *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesKeyStyle *borderwidth __attribute__((swift_name("borderwidth")));
@property (class, readonly) SharedPropertiesKeyStyle *bordercolor __attribute__((swift_name("bordercolor")));
@property (class, readonly) SharedPropertiesKeyStyle *backgroundcolor __attribute__((swift_name("backgroundcolor")));
@property (class, readonly) SharedPropertiesKeyStyle *cornerradius __attribute__((swift_name("cornerradius")));
@property (class, readonly) SharedPropertiesKeyStyle *separator __attribute__((swift_name("separator")));
@property (class, readonly) SharedPropertiesKeyStyle *separatorcolor __attribute__((swift_name("separatorcolor")));
+ (SharedKotlinArray<SharedPropertiesKeyStyle *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.KeyText")))
@interface SharedPropertiesKeyText : SharedKotlinEnum<SharedPropertiesKeyText *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesKeyText *weight __attribute__((swift_name("weight")));
@property (class, readonly) SharedPropertiesKeyText *gravity __attribute__((swift_name("gravity")));
@property (class, readonly) SharedPropertiesKeyText *wrap __attribute__((swift_name("wrap")));
+ (SharedKotlinArray<SharedPropertiesKeyText *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.Value")))
@interface SharedPropertiesValue : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)value __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedPropertiesValue *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueAlign")))
@interface SharedPropertiesValueAlign : SharedKotlinEnum<SharedPropertiesValueAlign *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueAlign *start __attribute__((swift_name("start")));
@property (class, readonly) SharedPropertiesValueAlign *center __attribute__((swift_name("center")));
@property (class, readonly) SharedPropertiesValueAlign *end __attribute__((swift_name("end")));
+ (SharedKotlinArray<SharedPropertiesValueAlign *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueAlignItems")))
@interface SharedPropertiesValueAlignItems : SharedKotlinEnum<SharedPropertiesValueAlignItems *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueAlignItems *center __attribute__((swift_name("center")));
@property (class, readonly) SharedPropertiesValueAlignItems *flexstart __attribute__((swift_name("flexstart")));
@property (class, readonly) SharedPropertiesValueAlignItems *flexend __attribute__((swift_name("flexend")));
+ (SharedKotlinArray<SharedPropertiesValueAlignItems *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueAspectMode")))
@interface SharedPropertiesValueAspectMode : SharedKotlinEnum<SharedPropertiesValueAspectMode *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueAspectMode *cover __attribute__((swift_name("cover")));
@property (class, readonly) SharedPropertiesValueAspectMode *fit __attribute__((swift_name("fit")));
+ (SharedKotlinArray<SharedPropertiesValueAspectMode *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueBackgroundType")))
@interface SharedPropertiesValueBackgroundType : SharedKotlinEnum<SharedPropertiesValueBackgroundType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueBackgroundType *lineargradient __attribute__((swift_name("lineargradient")));
+ (SharedKotlinArray<SharedPropertiesValueBackgroundType *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueBackgroundValue")))
@interface SharedPropertiesValueBackgroundValue : SharedKotlinEnum<SharedPropertiesValueBackgroundValue *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueBackgroundValue *lineargradient __attribute__((swift_name("lineargradient")));
+ (SharedKotlinArray<SharedPropertiesValueBackgroundValue *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueBubbleSize")))
@interface SharedPropertiesValueBubbleSize : SharedKotlinEnum<SharedPropertiesValueBubbleSize *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueBubbleSize *nano __attribute__((swift_name("nano")));
@property (class, readonly) SharedPropertiesValueBubbleSize *micro __attribute__((swift_name("micro")));
@property (class, readonly) SharedPropertiesValueBubbleSize *kilo __attribute__((swift_name("kilo")));
@property (class, readonly) SharedPropertiesValueBubbleSize *mega __attribute__((swift_name("mega")));
@property (class, readonly) SharedPropertiesValueBubbleSize *giga __attribute__((swift_name("giga")));
+ (SharedKotlinArray<SharedPropertiesValueBubbleSize *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueButtonHeight")))
@interface SharedPropertiesValueButtonHeight : SharedKotlinEnum<SharedPropertiesValueButtonHeight *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueButtonHeight *sm __attribute__((swift_name("sm")));
@property (class, readonly) SharedPropertiesValueButtonHeight *md __attribute__((swift_name("md")));
+ (SharedKotlinArray<SharedPropertiesValueButtonHeight *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueButtonStyle")))
@interface SharedPropertiesValueButtonStyle : SharedKotlinEnum<SharedPropertiesValueButtonStyle *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueButtonStyle *primary __attribute__((swift_name("primary")));
@property (class, readonly) SharedPropertiesValueButtonStyle *secondary __attribute__((swift_name("secondary")));
+ (SharedKotlinArray<SharedPropertiesValueButtonStyle *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueComponents")))
@interface SharedPropertiesValueComponents : SharedKotlinEnum<SharedPropertiesValueComponents *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueComponents *box __attribute__((swift_name("box")));
@property (class, readonly) SharedPropertiesValueComponents *button __attribute__((swift_name("button")));
@property (class, readonly) SharedPropertiesValueComponents *image __attribute__((swift_name("image")));
@property (class, readonly) SharedPropertiesValueComponents *icon __attribute__((swift_name("icon")));
@property (class, readonly) SharedPropertiesValueComponents *text __attribute__((swift_name("text")));
@property (class, readonly) SharedPropertiesValueComponents *span __attribute__((swift_name("span")));
@property (class, readonly) SharedPropertiesValueComponents *separator __attribute__((swift_name("separator")));
@property (class, readonly) SharedPropertiesValueComponents *spacer __attribute__((swift_name("spacer")));
@property (class, readonly) SharedPropertiesValueComponents *filler __attribute__((swift_name("filler")));
+ (SharedKotlinArray<SharedPropertiesValueComponents *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueDecoration")))
@interface SharedPropertiesValueDecoration : SharedKotlinEnum<SharedPropertiesValueDecoration *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueDecoration *none __attribute__((swift_name("none")));
@property (class, readonly) SharedPropertiesValueDecoration *underline __attribute__((swift_name("underline")));
@property (class, readonly) SharedPropertiesValueDecoration *linethrough __attribute__((swift_name("linethrough")));
+ (SharedKotlinArray<SharedPropertiesValueDecoration *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueDirection")))
@interface SharedPropertiesValueDirection : SharedKotlinEnum<SharedPropertiesValueDirection *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueDirection *rtl __attribute__((swift_name("rtl")));
@property (class, readonly) SharedPropertiesValueDirection *ltr __attribute__((swift_name("ltr")));
+ (SharedKotlinArray<SharedPropertiesValueDirection *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueGravity")))
@interface SharedPropertiesValueGravity : SharedKotlinEnum<SharedPropertiesValueGravity *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueGravity *top __attribute__((swift_name("top")));
@property (class, readonly) SharedPropertiesValueGravity *center __attribute__((swift_name("center")));
@property (class, readonly) SharedPropertiesValueGravity *bottom __attribute__((swift_name("bottom")));
+ (SharedKotlinArray<SharedPropertiesValueGravity *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueImageSize")))
@interface SharedPropertiesValueImageSize : SharedKotlinEnum<SharedPropertiesValueImageSize *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueImageSize *xxs __attribute__((swift_name("xxs")));
@property (class, readonly) SharedPropertiesValueImageSize *xs __attribute__((swift_name("xs")));
@property (class, readonly) SharedPropertiesValueImageSize *sm __attribute__((swift_name("sm")));
@property (class, readonly) SharedPropertiesValueImageSize *md __attribute__((swift_name("md")));
@property (class, readonly) SharedPropertiesValueImageSize *lg __attribute__((swift_name("lg")));
@property (class, readonly) SharedPropertiesValueImageSize *xl __attribute__((swift_name("xl")));
@property (class, readonly) SharedPropertiesValueImageSize *xxl __attribute__((swift_name("xxl")));
@property (class, readonly) SharedPropertiesValueImageSize *x3xl __attribute__((swift_name("x3xl")));
@property (class, readonly) SharedPropertiesValueImageSize *x4xl __attribute__((swift_name("x4xl")));
@property (class, readonly) SharedPropertiesValueImageSize *x5xl __attribute__((swift_name("x5xl")));
@property (class, readonly) SharedPropertiesValueImageSize *full __attribute__((swift_name("full")));
+ (SharedKotlinArray<SharedPropertiesValueImageSize *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueImageSizeValue")))
@interface SharedPropertiesValueImageSizeValue : SharedKotlinEnum<SharedPropertiesValueImageSizeValue *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueImageSizeValue *xxs __attribute__((swift_name("xxs")));
@property (class, readonly) SharedPropertiesValueImageSizeValue *xs __attribute__((swift_name("xs")));
@property (class, readonly) SharedPropertiesValueImageSizeValue *sm __attribute__((swift_name("sm")));
@property (class, readonly) SharedPropertiesValueImageSizeValue *md __attribute__((swift_name("md")));
@property (class, readonly) SharedPropertiesValueImageSizeValue *lg __attribute__((swift_name("lg")));
@property (class, readonly) SharedPropertiesValueImageSizeValue *xl __attribute__((swift_name("xl")));
@property (class, readonly) SharedPropertiesValueImageSizeValue *xxl __attribute__((swift_name("xxl")));
@property (class, readonly) SharedPropertiesValueImageSizeValue *x3xl __attribute__((swift_name("x3xl")));
@property (class, readonly) SharedPropertiesValueImageSizeValue *x4xl __attribute__((swift_name("x4xl")));
@property (class, readonly) SharedPropertiesValueImageSizeValue *x5xl __attribute__((swift_name("x5xl")));
@property (class, readonly) SharedPropertiesValueImageSizeValue *full __attribute__((swift_name("full")));
+ (SharedKotlinArray<SharedPropertiesValueImageSizeValue *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueJustifyContent")))
@interface SharedPropertiesValueJustifyContent : SharedKotlinEnum<SharedPropertiesValueJustifyContent *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueJustifyContent *center __attribute__((swift_name("center")));
@property (class, readonly) SharedPropertiesValueJustifyContent *flexstart __attribute__((swift_name("flexstart")));
@property (class, readonly) SharedPropertiesValueJustifyContent *flexend __attribute__((swift_name("flexend")));
@property (class, readonly) SharedPropertiesValueJustifyContent *spacebetween __attribute__((swift_name("spacebetween")));
@property (class, readonly) SharedPropertiesValueJustifyContent *spacearound __attribute__((swift_name("spacearound")));
@property (class, readonly) SharedPropertiesValueJustifyContent *spaceevenly __attribute__((swift_name("spaceevenly")));
+ (SharedKotlinArray<SharedPropertiesValueJustifyContent *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueLayout")))
@interface SharedPropertiesValueLayout : SharedKotlinEnum<SharedPropertiesValueLayout *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueLayout *vertical __attribute__((swift_name("vertical")));
@property (class, readonly) SharedPropertiesValueLayout *horizontal __attribute__((swift_name("horizontal")));
@property (class, readonly) SharedPropertiesValueLayout *baseline __attribute__((swift_name("baseline")));
+ (SharedKotlinArray<SharedPropertiesValueLayout *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueMargin")))
@interface SharedPropertiesValueMargin : SharedKotlinEnum<SharedPropertiesValueMargin *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueMargin *none __attribute__((swift_name("none")));
@property (class, readonly) SharedPropertiesValueMargin *xs __attribute__((swift_name("xs")));
@property (class, readonly) SharedPropertiesValueMargin *sm __attribute__((swift_name("sm")));
@property (class, readonly) SharedPropertiesValueMargin *md __attribute__((swift_name("md")));
@property (class, readonly) SharedPropertiesValueMargin *lg __attribute__((swift_name("lg")));
@property (class, readonly) SharedPropertiesValueMargin *xl __attribute__((swift_name("xl")));
@property (class, readonly) SharedPropertiesValueMargin *xxl __attribute__((swift_name("xxl")));
+ (SharedKotlinArray<SharedPropertiesValueMargin *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueMarginValue")))
@interface SharedPropertiesValueMarginValue : SharedKotlinEnum<SharedPropertiesValueMarginValue *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueMarginValue *none __attribute__((swift_name("none")));
@property (class, readonly) SharedPropertiesValueMarginValue *xs __attribute__((swift_name("xs")));
@property (class, readonly) SharedPropertiesValueMarginValue *sm __attribute__((swift_name("sm")));
@property (class, readonly) SharedPropertiesValueMarginValue *md __attribute__((swift_name("md")));
@property (class, readonly) SharedPropertiesValueMarginValue *lg __attribute__((swift_name("lg")));
@property (class, readonly) SharedPropertiesValueMarginValue *xl __attribute__((swift_name("xl")));
@property (class, readonly) SharedPropertiesValueMarginValue *xxl __attribute__((swift_name("xxl")));
+ (SharedKotlinArray<SharedPropertiesValueMarginValue *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValuePosition")))
@interface SharedPropertiesValuePosition : SharedKotlinEnum<SharedPropertiesValuePosition *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValuePosition *relative __attribute__((swift_name("relative")));
@property (class, readonly) SharedPropertiesValuePosition *absolute __attribute__((swift_name("absolute")));
+ (SharedKotlinArray<SharedPropertiesValuePosition *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueSpacerSize")))
@interface SharedPropertiesValueSpacerSize : SharedKotlinEnum<SharedPropertiesValueSpacerSize *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueSpacerSize *xs __attribute__((swift_name("xs")));
@property (class, readonly) SharedPropertiesValueSpacerSize *sm __attribute__((swift_name("sm")));
@property (class, readonly) SharedPropertiesValueSpacerSize *md __attribute__((swift_name("md")));
@property (class, readonly) SharedPropertiesValueSpacerSize *lg __attribute__((swift_name("lg")));
@property (class, readonly) SharedPropertiesValueSpacerSize *xl __attribute__((swift_name("xl")));
@property (class, readonly) SharedPropertiesValueSpacerSize *xxl __attribute__((swift_name("xxl")));
+ (SharedKotlinArray<SharedPropertiesValueSpacerSize *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueSpacerSizeValue")))
@interface SharedPropertiesValueSpacerSizeValue : SharedKotlinEnum<SharedPropertiesValueSpacerSizeValue *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueSpacerSizeValue *xs __attribute__((swift_name("xs")));
@property (class, readonly) SharedPropertiesValueSpacerSizeValue *sm __attribute__((swift_name("sm")));
@property (class, readonly) SharedPropertiesValueSpacerSizeValue *md __attribute__((swift_name("md")));
@property (class, readonly) SharedPropertiesValueSpacerSizeValue *lg __attribute__((swift_name("lg")));
@property (class, readonly) SharedPropertiesValueSpacerSizeValue *xl __attribute__((swift_name("xl")));
@property (class, readonly) SharedPropertiesValueSpacerSizeValue *xxl __attribute__((swift_name("xxl")));
+ (SharedKotlinArray<SharedPropertiesValueSpacerSizeValue *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueSpacing")))
@interface SharedPropertiesValueSpacing : SharedKotlinEnum<SharedPropertiesValueSpacing *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueSpacing *none __attribute__((swift_name("none")));
@property (class, readonly) SharedPropertiesValueSpacing *xs __attribute__((swift_name("xs")));
@property (class, readonly) SharedPropertiesValueSpacing *sm __attribute__((swift_name("sm")));
@property (class, readonly) SharedPropertiesValueSpacing *md __attribute__((swift_name("md")));
@property (class, readonly) SharedPropertiesValueSpacing *lg __attribute__((swift_name("lg")));
@property (class, readonly) SharedPropertiesValueSpacing *xl __attribute__((swift_name("xl")));
@property (class, readonly) SharedPropertiesValueSpacing *xxl __attribute__((swift_name("xxl")));
+ (SharedKotlinArray<SharedPropertiesValueSpacing *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueSpacingValue")))
@interface SharedPropertiesValueSpacingValue : SharedKotlinEnum<SharedPropertiesValueSpacingValue *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueSpacingValue *none __attribute__((swift_name("none")));
@property (class, readonly) SharedPropertiesValueSpacingValue *xs __attribute__((swift_name("xs")));
@property (class, readonly) SharedPropertiesValueSpacingValue *sm __attribute__((swift_name("sm")));
@property (class, readonly) SharedPropertiesValueSpacingValue *md __attribute__((swift_name("md")));
@property (class, readonly) SharedPropertiesValueSpacingValue *lg __attribute__((swift_name("lg")));
@property (class, readonly) SharedPropertiesValueSpacingValue *xl __attribute__((swift_name("xl")));
@property (class, readonly) SharedPropertiesValueSpacingValue *xxl __attribute__((swift_name("xxl")));
+ (SharedKotlinArray<SharedPropertiesValueSpacingValue *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueSpanSize")))
@interface SharedPropertiesValueSpanSize : SharedKotlinEnum<SharedPropertiesValueSpanSize *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueSpanSize *xxs __attribute__((swift_name("xxs")));
@property (class, readonly) SharedPropertiesValueSpanSize *xs __attribute__((swift_name("xs")));
@property (class, readonly) SharedPropertiesValueSpanSize *sm __attribute__((swift_name("sm")));
@property (class, readonly) SharedPropertiesValueSpanSize *md __attribute__((swift_name("md")));
@property (class, readonly) SharedPropertiesValueSpanSize *lg __attribute__((swift_name("lg")));
@property (class, readonly) SharedPropertiesValueSpanSize *xl __attribute__((swift_name("xl")));
@property (class, readonly) SharedPropertiesValueSpanSize *xxl __attribute__((swift_name("xxl")));
@property (class, readonly) SharedPropertiesValueSpanSize *x3xl __attribute__((swift_name("x3xl")));
@property (class, readonly) SharedPropertiesValueSpanSize *x4xl __attribute__((swift_name("x4xl")));
@property (class, readonly) SharedPropertiesValueSpanSize *x5xl __attribute__((swift_name("x5xl")));
+ (SharedKotlinArray<SharedPropertiesValueSpanSize *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueSpanSizeValue")))
@interface SharedPropertiesValueSpanSizeValue : SharedKotlinEnum<SharedPropertiesValueSpanSizeValue *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueSpanSizeValue *xxs __attribute__((swift_name("xxs")));
@property (class, readonly) SharedPropertiesValueSpanSizeValue *xs __attribute__((swift_name("xs")));
@property (class, readonly) SharedPropertiesValueSpanSizeValue *sm __attribute__((swift_name("sm")));
@property (class, readonly) SharedPropertiesValueSpanSizeValue *md __attribute__((swift_name("md")));
@property (class, readonly) SharedPropertiesValueSpanSizeValue *lg __attribute__((swift_name("lg")));
@property (class, readonly) SharedPropertiesValueSpanSizeValue *xl __attribute__((swift_name("xl")));
@property (class, readonly) SharedPropertiesValueSpanSizeValue *xxl __attribute__((swift_name("xxl")));
@property (class, readonly) SharedPropertiesValueSpanSizeValue *x3xl __attribute__((swift_name("x3xl")));
@property (class, readonly) SharedPropertiesValueSpanSizeValue *x4xl __attribute__((swift_name("x4xl")));
@property (class, readonly) SharedPropertiesValueSpanSizeValue *x5xl __attribute__((swift_name("x5xl")));
+ (SharedKotlinArray<SharedPropertiesValueSpanSizeValue *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueStyle")))
@interface SharedPropertiesValueStyle : SharedKotlinEnum<SharedPropertiesValueStyle *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueStyle *normal __attribute__((swift_name("normal")));
@property (class, readonly) SharedPropertiesValueStyle *italic __attribute__((swift_name("italic")));
+ (SharedKotlinArray<SharedPropertiesValueStyle *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueTextSize")))
@interface SharedPropertiesValueTextSize : SharedKotlinEnum<SharedPropertiesValueTextSize *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueTextSize *xxs __attribute__((swift_name("xxs")));
@property (class, readonly) SharedPropertiesValueTextSize *xs __attribute__((swift_name("xs")));
@property (class, readonly) SharedPropertiesValueTextSize *sm __attribute__((swift_name("sm")));
@property (class, readonly) SharedPropertiesValueTextSize *md __attribute__((swift_name("md")));
@property (class, readonly) SharedPropertiesValueTextSize *lg __attribute__((swift_name("lg")));
@property (class, readonly) SharedPropertiesValueTextSize *xl __attribute__((swift_name("xl")));
@property (class, readonly) SharedPropertiesValueTextSize *xxl __attribute__((swift_name("xxl")));
@property (class, readonly) SharedPropertiesValueTextSize *x3xl __attribute__((swift_name("x3xl")));
@property (class, readonly) SharedPropertiesValueTextSize *x4xl __attribute__((swift_name("x4xl")));
@property (class, readonly) SharedPropertiesValueTextSize *x5xl __attribute__((swift_name("x5xl")));
+ (SharedKotlinArray<SharedPropertiesValueTextSize *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueTextSizeValue")))
@interface SharedPropertiesValueTextSizeValue : SharedKotlinEnum<SharedPropertiesValueTextSizeValue *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueTextSizeValue *xxs __attribute__((swift_name("xxs")));
@property (class, readonly) SharedPropertiesValueTextSizeValue *xs __attribute__((swift_name("xs")));
@property (class, readonly) SharedPropertiesValueTextSizeValue *sm __attribute__((swift_name("sm")));
@property (class, readonly) SharedPropertiesValueTextSizeValue *md __attribute__((swift_name("md")));
@property (class, readonly) SharedPropertiesValueTextSizeValue *lg __attribute__((swift_name("lg")));
@property (class, readonly) SharedPropertiesValueTextSizeValue *xl __attribute__((swift_name("xl")));
@property (class, readonly) SharedPropertiesValueTextSizeValue *xxl __attribute__((swift_name("xxl")));
@property (class, readonly) SharedPropertiesValueTextSizeValue *x3xl __attribute__((swift_name("x3xl")));
@property (class, readonly) SharedPropertiesValueTextSizeValue *x4xl __attribute__((swift_name("x4xl")));
@property (class, readonly) SharedPropertiesValueTextSizeValue *x5xl __attribute__((swift_name("x5xl")));
+ (SharedKotlinArray<SharedPropertiesValueTextSizeValue *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Properties.ValueWeight")))
@interface SharedPropertiesValueWeight : SharedKotlinEnum<SharedPropertiesValueWeight *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedPropertiesValueWeight *regular __attribute__((swift_name("regular")));
@property (class, readonly) SharedPropertiesValueWeight *bold __attribute__((swift_name("bold")));
+ (SharedKotlinArray<SharedPropertiesValueWeight *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebUtils")))
@interface SharedWebUtils : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)webUtils __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedWebUtils *shared __attribute__((swift_name("shared")));
- (NSString *)header __attribute__((swift_name("header()")));
- (NSString *)script __attribute__((swift_name("script()")));
- (NSString *)scriptIOS __attribute__((swift_name("scriptIOS()")));
- (NSString *)style __attribute__((swift_name("style()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StartChatSocketMapper")))
@interface SharedStartChatSocketMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedStartChatSocket *)mapInput:(SharedStartChatSocketEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TriggerExtendChatTimeSocketMapper")))
@interface SharedTriggerExtendChatTimeSocketMapper : SharedBase <SharedMapper>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedTriggerExtendChatTimeSocket *)mapInput:(SharedTriggerExtendChatTimeSocketEntity *)input __attribute__((swift_name("map(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BubbleBuilder")))
@interface SharedBubbleBuilder : SharedBase
- (instancetype)initWithMBlocks:(NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> *)mBlocks __attribute__((swift_name("init(mBlocks:)"))) __attribute__((objc_designated_initializer));
- (NSString *)builder __attribute__((swift_name("builder()")));
- (float)getBubbleSize __attribute__((swift_name("getBubbleSize()")));
- (NSString *)getBubbleSizeType __attribute__((swift_name("getBubbleSizeType()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ComponentBuilder")))
@interface SharedComponentBuilder : SharedBase
- (instancetype)initWithMContents:(NSArray<SharedKotlinx_serialization_jsonJsonElement *> * _Nullable)mContents mBubbleSize:(float)mBubbleSize __attribute__((swift_name("init(mContents:mBubbleSize:)"))) __attribute__((objc_designated_initializer));
- (NSString *)builder __attribute__((swift_name("builder()")));
@end

@interface SharedNetworkResponse (Extensions)
- (id _Nullable)getSuccessOrNull __attribute__((swift_name("getSuccessOrNull()")));
- (SharedNetworkResponse<id, id> *)mapOnSuccessMap:(id (^)(id))map __attribute__((swift_name("mapOnSuccess(map:)")));
@end

@interface SharedHeader (Extensions)
- (SharedMutableDictionary<NSString *, NSString *> *)getHeadersMap __attribute__((swift_name("getHeadersMap()")));
- (SharedMutableDictionary<NSString *, NSString *> *)getHeadersMapTokenLink:(NSString *)tokenLink __attribute__((swift_name("getHeadersMap(tokenLink:)")));
@end

@interface SharedChatMessageEntityMessageSentEntity (Extensions)
- (SharedGetChatMessageResultMessageSent *)mappingToMessageSent __attribute__((swift_name("mappingToMessageSent()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PlatformKt")))
@interface SharedPlatformKt : SharedBase
+ (SharedPlatform *)getPlatform __attribute__((swift_name("getPlatform()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DomainModuleKt")))
@interface SharedDomainModuleKt : SharedBase
@property (class, readonly) SharedKoin_coreModule *domainModule __attribute__((swift_name("domainModule")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KoinModuleKt")))
@interface SharedKoinModuleKt : SharedBase
+ (SharedKoin_coreKoinApplication *)doInitKoinAppDeclaration:(void (^)(SharedKoin_coreKoinApplication *))appDeclaration __attribute__((swift_name("doInitKoin(appDeclaration:)")));
+ (SharedKoin_coreKoinApplication *)doInitKoinIos __attribute__((swift_name("doInitKoinIos()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DataModuleKt")))
@interface SharedDataModuleKt : SharedBase
@property (class, readonly) SharedKoin_coreModule *dataModule __attribute__((swift_name("dataModule")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ObjectExtensionKt")))
@interface SharedObjectExtensionKt : SharedBase
+ (SharedContentFileDataBody * _Nullable)ConvertFileToContentFileName:(NSString *)fileName filePath:(NSString *)filePath fileUnitType:(NSString *)fileUnitType fileSizeUnit:(NSString *)fileSizeUnit __attribute__((swift_name("ConvertFileToContent(fileName:filePath:fileUnitType:fileSizeUnit:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StringExtensionKt")))
@interface SharedStringExtensionKt : SharedBase
+ (NSString *)firstCharacterUpperCase:(NSString * _Nullable)receiver __attribute__((swift_name("firstCharacterUpperCase(_:)")));
+ (NSString *)getUserEmailFromToken:(NSString * _Nullable)receiver __attribute__((swift_name("getUserEmailFromToken(_:)")));
+ (NSString *)getUserIDFromToken:(NSString * _Nullable)receiver __attribute__((swift_name("getUserIDFromToken(_:)")));
+ (SharedUserProfileInfo *)getUserInfoFromToken:(NSString * _Nullable)receiver __attribute__((swift_name("getUserInfoFromToken(_:)")));
+ (BOOL)isUsernameValid:(NSString *)receiver __attribute__((swift_name("isUsernameValid(_:)")));
+ (BOOL)isValidBase64:(NSString * _Nullable)receiver __attribute__((swift_name("isValidBase64(_:)")));
+ (id _Nullable)parse:(NSString *)receiver __attribute__((swift_name("parse(_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonExtensionKt")))
@interface SharedJsonExtensionKt : SharedBase
+ (SharedKotlinPair<SharedFloat *, SharedFloat *> *)getAspectRatio:(NSString * _Nullable)receiver __attribute__((swift_name("getAspectRatio(_:)")));
+ (BOOL)optBoolean:(NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> *)receiver key:(NSString *)key defaultValue:(BOOL)defaultValue __attribute__((swift_name("optBoolean(_:key:defaultValue:)")));
+ (double)optDouble:(NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> *)receiver key:(NSString *)key defaultValue:(double)defaultValue __attribute__((swift_name("optDouble(_:key:defaultValue:)")));
+ (int32_t)optInt:(NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> *)receiver key:(NSString *)key defaultValue:(int32_t)defaultValue __attribute__((swift_name("optInt(_:key:defaultValue:)")));
+ (NSArray<SharedKotlinx_serialization_jsonJsonElement *> *)optJSONArray:(NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> *)receiver key:(NSString *)key defaultValue:(NSArray<SharedKotlinx_serialization_jsonJsonElement *> *)defaultValue __attribute__((swift_name("optJSONArray(_:key:defaultValue:)")));
+ (NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> * _Nullable)optJSONObject:(NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> *)receiver key:(NSString *)key defaultValue:(NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> * _Nullable)defaultValue __attribute__((swift_name("optJSONObject(_:key:defaultValue:)")));
+ (NSString *)optString:(NSDictionary<NSString *, SharedKotlinx_serialization_jsonJsonElement *> *)receiver key:(NSString *)key defaultValue:(NSString *)defaultValue __attribute__((swift_name("optString(_:key:defaultValue:)")));
+ (SharedKotlinTriple<SharedLong *, SharedLong *, SharedLong *> *)time:(int64_t)receiver __attribute__((swift_name("time(_:)")));
@end

__attribute__((swift_name("Kotlinx_serialization_jsonJsonElement")))
@interface SharedKotlinx_serialization_jsonJsonElement : SharedBase
@property (class, readonly, getter=companion) SharedKotlinx_serialization_jsonJsonElementCompanion *companion __attribute__((swift_name("companion")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinEnumCompanion")))
@interface SharedKotlinEnumCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinEnumCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinArray")))
@interface SharedKotlinArray<T> : SharedBase
+ (instancetype)arrayWithSize:(int32_t)size init:(T _Nullable (^)(SharedInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (T _Nullable)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (id<SharedKotlinIterator>)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(T _Nullable)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

__attribute__((swift_name("KotlinThrowable")))
@interface SharedKotlinThrowable : SharedBase
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (SharedKotlinArray<NSString *> *)getStackTrace __attribute__((swift_name("getStackTrace()")));
- (void)printStackTrace __attribute__((swift_name("printStackTrace()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedKotlinThrowable * _Nullable cause __attribute__((swift_name("cause")));
@property (readonly) NSString * _Nullable message __attribute__((swift_name("message")));
- (NSError *)asError __attribute__((swift_name("asError()")));
@end

__attribute__((swift_name("KotlinException")))
@interface SharedKotlinException : SharedKotlinThrowable
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((swift_name("KotlinRuntimeException")))
@interface SharedKotlinRuntimeException : SharedKotlinException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((swift_name("KotlinIllegalStateException")))
@interface SharedKotlinIllegalStateException : SharedKotlinRuntimeException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.4")
*/
__attribute__((swift_name("KotlinCancellationException")))
@interface SharedKotlinCancellationException : SharedKotlinIllegalStateException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinPair")))
@interface SharedKotlinPair<__covariant A, __covariant B> : SharedBase
- (instancetype)initWithFirst:(A _Nullable)first second:(B _Nullable)second __attribute__((swift_name("init(first:second:)"))) __attribute__((objc_designated_initializer));
- (SharedKotlinPair<A, B> *)doCopyFirst:(A _Nullable)first second:(B _Nullable)second __attribute__((swift_name("doCopy(first:second:)")));
- (BOOL)equalsOther:(id _Nullable)other __attribute__((swift_name("equals(other:)")));
- (int32_t)hashCode __attribute__((swift_name("hashCode()")));
- (NSString *)toString __attribute__((swift_name("toString()")));
@property (readonly) A _Nullable first __attribute__((swift_name("first")));
@property (readonly) B _Nullable second __attribute__((swift_name("second")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreCoroutineScope")))
@protocol SharedKotlinx_coroutines_coreCoroutineScope
@required
@property (readonly) id<SharedKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end

__attribute__((swift_name("Ktor_ioCloseable")))
@protocol SharedKtor_ioCloseable
@required
- (void)close __attribute__((swift_name("close()")));
@end

__attribute__((swift_name("Ktor_client_coreHttpClientEngine")))
@protocol SharedKtor_client_coreHttpClientEngine <SharedKotlinx_coroutines_coreCoroutineScope, SharedKtor_ioCloseable>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)executeData:(SharedKtor_client_coreHttpRequestData *)data completionHandler:(void (^)(SharedKtor_client_coreHttpResponseData * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("execute(data:completionHandler:)")));
- (void)installClient:(SharedKtor_client_coreHttpClient *)client __attribute__((swift_name("install(client:)")));
@property (readonly) SharedKtor_client_coreHttpClientEngineConfig *config __attribute__((swift_name("config")));
@property (readonly) SharedKotlinx_coroutines_coreCoroutineDispatcher *dispatcher __attribute__((swift_name("dispatcher")));
@property (readonly) NSSet<id<SharedKtor_client_coreHttpClientEngineCapability>> *supportedCapabilities __attribute__((swift_name("supportedCapabilities")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinNothing")))
@interface SharedKotlinNothing : SharedBase
@end

__attribute__((swift_name("Kotlinx_serialization_coreSerializationStrategy")))
@protocol SharedKotlinx_serialization_coreSerializationStrategy
@required
- (void)serializeEncoder:(id<SharedKotlinx_serialization_coreEncoder>)encoder value:(id _Nullable)value __attribute__((swift_name("serialize(encoder:value:)")));
@property (readonly) id<SharedKotlinx_serialization_coreSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreDeserializationStrategy")))
@protocol SharedKotlinx_serialization_coreDeserializationStrategy
@required
- (id _Nullable)deserializeDecoder:(id<SharedKotlinx_serialization_coreDecoder>)decoder __attribute__((swift_name("deserialize(decoder:)")));
@property (readonly) id<SharedKotlinx_serialization_coreSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreKSerializer")))
@protocol SharedKotlinx_serialization_coreKSerializer <SharedKotlinx_serialization_coreSerializationStrategy, SharedKotlinx_serialization_coreDeserializationStrategy>
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Koin_coreKoin")))
@interface SharedKoin_coreKoin : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)close __attribute__((swift_name("close()")));
- (void)createEagerInstances __attribute__((swift_name("createEagerInstances()")));
- (SharedKoin_coreScope *)createScopeT:(id<SharedKoin_coreKoinScopeComponent>)t __attribute__((swift_name("createScope(t:)")));
- (SharedKoin_coreScope *)createScopeScopeId:(NSString *)scopeId __attribute__((swift_name("createScope(scopeId:)")));
- (SharedKoin_coreScope *)createScopeScopeId:(NSString *)scopeId source:(id _Nullable)source __attribute__((swift_name("createScope(scopeId:source:)")));
- (SharedKoin_coreScope *)createScopeScopeId:(NSString *)scopeId qualifier:(id<SharedKoin_coreQualifier>)qualifier source:(id _Nullable)source __attribute__((swift_name("createScope(scopeId:qualifier:source:)")));
- (void)declareInstance:(id _Nullable)instance qualifier:(id<SharedKoin_coreQualifier> _Nullable)qualifier secondaryTypes:(NSArray<id<SharedKotlinKClass>> *)secondaryTypes allowOverride:(BOOL)allowOverride __attribute__((swift_name("declare(instance:qualifier:secondaryTypes:allowOverride:)")));
- (void)deletePropertyKey:(NSString *)key __attribute__((swift_name("deleteProperty(key:)")));
- (void)deleteScopeScopeId:(NSString *)scopeId __attribute__((swift_name("deleteScope(scopeId:)")));
- (id _Nullable)getClazz:(id<SharedKotlinKClass>)clazz qualifier:(id<SharedKoin_coreQualifier> _Nullable)qualifier parameters:(SharedKoin_coreParametersHolder *(^ _Nullable)(void))parameters __attribute__((swift_name("get(clazz:qualifier:parameters:)")));
- (id)getQualifier:(id<SharedKoin_coreQualifier> _Nullable)qualifier parameters:(SharedKoin_coreParametersHolder *(^ _Nullable)(void))parameters __attribute__((swift_name("get(qualifier:parameters:)")));
- (NSArray<id> *)getAll __attribute__((swift_name("getAll()")));
- (SharedKoin_coreScope *)getOrCreateScopeScopeId:(NSString *)scopeId __attribute__((swift_name("getOrCreateScope(scopeId:)")));
- (SharedKoin_coreScope *)getOrCreateScopeScopeId:(NSString *)scopeId qualifier:(id<SharedKoin_coreQualifier>)qualifier source:(id _Nullable)source __attribute__((swift_name("getOrCreateScope(scopeId:qualifier:source:)")));
- (id _Nullable)getOrNullClazz:(id<SharedKotlinKClass>)clazz qualifier:(id<SharedKoin_coreQualifier> _Nullable)qualifier parameters:(SharedKoin_coreParametersHolder *(^ _Nullable)(void))parameters __attribute__((swift_name("getOrNull(clazz:qualifier:parameters:)")));
- (id _Nullable)getOrNullQualifier:(id<SharedKoin_coreQualifier> _Nullable)qualifier parameters:(SharedKoin_coreParametersHolder *(^ _Nullable)(void))parameters __attribute__((swift_name("getOrNull(qualifier:parameters:)")));
- (id _Nullable)getPropertyKey:(NSString *)key __attribute__((swift_name("getProperty(key:)")));
- (id)getPropertyKey:(NSString *)key defaultValue:(id)defaultValue __attribute__((swift_name("getProperty(key:defaultValue:)")));
- (SharedKoin_coreScope *)getScopeScopeId:(NSString *)scopeId __attribute__((swift_name("getScope(scopeId:)")));
- (SharedKoin_coreScope * _Nullable)getScopeOrNullScopeId:(NSString *)scopeId __attribute__((swift_name("getScopeOrNull(scopeId:)")));
- (id<SharedKotlinLazy>)injectQualifier:(id<SharedKoin_coreQualifier> _Nullable)qualifier mode:(SharedKotlinLazyThreadSafetyMode *)mode parameters:(SharedKoin_coreParametersHolder *(^ _Nullable)(void))parameters __attribute__((swift_name("inject(qualifier:mode:parameters:)")));
- (id<SharedKotlinLazy>)injectOrNullQualifier:(id<SharedKoin_coreQualifier> _Nullable)qualifier mode:(SharedKotlinLazyThreadSafetyMode *)mode parameters:(SharedKoin_coreParametersHolder *(^ _Nullable)(void))parameters __attribute__((swift_name("injectOrNull(qualifier:mode:parameters:)")));
- (void)loadModulesModules:(NSArray<SharedKoin_coreModule *> *)modules allowOverride:(BOOL)allowOverride __attribute__((swift_name("loadModules(modules:allowOverride:)")));
- (void)setPropertyKey:(NSString *)key value:(id)value __attribute__((swift_name("setProperty(key:value:)")));
- (void)setupLoggerLogger:(SharedKoin_coreLogger *)logger __attribute__((swift_name("setupLogger(logger:)")));
- (void)unloadModulesModules:(NSArray<SharedKoin_coreModule *> *)modules __attribute__((swift_name("unloadModules(modules:)")));
@property (readonly) SharedKoin_coreInstanceRegistry *instanceRegistry __attribute__((swift_name("instanceRegistry")));
@property (readonly) SharedKoin_coreLogger *logger __attribute__((swift_name("logger")));
@property (readonly) SharedKoin_corePropertyRegistry *propertyRegistry __attribute__((swift_name("propertyRegistry")));
@property (readonly) SharedKoin_coreScopeRegistry *scopeRegistry __attribute__((swift_name("scopeRegistry")));
@end

__attribute__((swift_name("Ktor_httpHttpMessage")))
@protocol SharedKtor_httpHttpMessage
@required
@property (readonly) id<SharedKtor_httpHeaders> headers __attribute__((swift_name("headers")));
@end

__attribute__((swift_name("Ktor_client_coreHttpResponse")))
@interface SharedKtor_client_coreHttpResponse : SharedBase <SharedKtor_httpHttpMessage, SharedKotlinx_coroutines_coreCoroutineScope>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedKtor_client_coreHttpClientCall *call __attribute__((swift_name("call")));
@property (readonly) id<SharedKtor_ioByteReadChannel> content __attribute__((swift_name("content")));
@property (readonly) SharedKtor_utilsGMTDate *requestTime __attribute__((swift_name("requestTime")));
@property (readonly) SharedKtor_utilsGMTDate *responseTime __attribute__((swift_name("responseTime")));
@property (readonly) SharedKtor_httpHttpStatusCode *status __attribute__((swift_name("status")));
@property (readonly) SharedKtor_httpHttpProtocolVersion *version __attribute__((swift_name("version")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpClient")))
@interface SharedKtor_client_coreHttpClient : SharedBase <SharedKotlinx_coroutines_coreCoroutineScope, SharedKtor_ioCloseable>
- (instancetype)initWithEngine:(id<SharedKtor_client_coreHttpClientEngine>)engine userConfig:(SharedKtor_client_coreHttpClientConfig<SharedKtor_client_coreHttpClientEngineConfig *> *)userConfig __attribute__((swift_name("init(engine:userConfig:)"))) __attribute__((objc_designated_initializer));
- (void)close __attribute__((swift_name("close()")));
- (SharedKtor_client_coreHttpClient *)configBlock:(void (^)(SharedKtor_client_coreHttpClientConfig<id> *))block __attribute__((swift_name("config(block:)")));
- (BOOL)isSupportedCapability:(id<SharedKtor_client_coreHttpClientEngineCapability>)capability __attribute__((swift_name("isSupported(capability:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<SharedKtor_utilsAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) id<SharedKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@property (readonly) id<SharedKtor_client_coreHttpClientEngine> engine __attribute__((swift_name("engine")));
@property (readonly) SharedKtor_client_coreHttpClientEngineConfig *engineConfig __attribute__((swift_name("engineConfig")));
@property (readonly) SharedKtor_eventsEvents *monitor __attribute__((swift_name("monitor")));
@property (readonly) SharedKtor_client_coreHttpReceivePipeline *receivePipeline __attribute__((swift_name("receivePipeline")));
@property (readonly) SharedKtor_client_coreHttpRequestPipeline *requestPipeline __attribute__((swift_name("requestPipeline")));
@property (readonly) SharedKtor_client_coreHttpResponsePipeline *responsePipeline __attribute__((swift_name("responsePipeline")));
@property (readonly) SharedKtor_client_coreHttpSendPipeline *sendPipeline __attribute__((swift_name("sendPipeline")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinTriple")))
@interface SharedKotlinTriple<__covariant A, __covariant B, __covariant C> : SharedBase
- (instancetype)initWithFirst:(A _Nullable)first second:(B _Nullable)second third:(C _Nullable)third __attribute__((swift_name("init(first:second:third:)"))) __attribute__((objc_designated_initializer));
- (SharedKotlinTriple<A, B, C> *)doCopyFirst:(A _Nullable)first second:(B _Nullable)second third:(C _Nullable)third __attribute__((swift_name("doCopy(first:second:third:)")));
- (BOOL)equalsOther:(id _Nullable)other __attribute__((swift_name("equals(other:)")));
- (int32_t)hashCode __attribute__((swift_name("hashCode()")));
- (NSString *)toString __attribute__((swift_name("toString()")));
@property (readonly) A _Nullable first __attribute__((swift_name("first")));
@property (readonly) B _Nullable second __attribute__((swift_name("second")));
@property (readonly) C _Nullable third __attribute__((swift_name("third")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Koin_coreModule")))
@interface SharedKoin_coreModule : SharedBase
- (instancetype)initWith_createdAtStart:(BOOL)_createdAtStart __attribute__((swift_name("init(_createdAtStart:)"))) __attribute__((objc_designated_initializer));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (SharedKotlinPair<SharedKoin_coreModule *, SharedKoin_coreInstanceFactory<id> *> *)factoryQualifier:(id<SharedKoin_coreQualifier> _Nullable)qualifier definition:(id _Nullable (^)(SharedKoin_coreScope *, SharedKoin_coreParametersHolder *))definition __attribute__((swift_name("factory(qualifier:definition:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (void)includesModule:(SharedKotlinArray<SharedKoin_coreModule *> *)module __attribute__((swift_name("includes(module:)")));
- (void)includesModule_:(NSArray<SharedKoin_coreModule *> *)module __attribute__((swift_name("includes(module_:)")));
- (NSArray<SharedKoin_coreModule *> *)plusModules:(NSArray<SharedKoin_coreModule *> *)modules __attribute__((swift_name("plus(modules:)")));
- (NSArray<SharedKoin_coreModule *> *)plusModule:(SharedKoin_coreModule *)module __attribute__((swift_name("plus(module:)")));
- (void)scopeQualifier:(id<SharedKoin_coreQualifier>)qualifier scopeSet:(void (^)(SharedKoin_coreScopeDSL *))scopeSet __attribute__((swift_name("scope(qualifier:scopeSet:)")));
- (void)scopeScopeSet:(void (^)(SharedKoin_coreScopeDSL *))scopeSet __attribute__((swift_name("scope(scopeSet:)")));
- (SharedKotlinPair<SharedKoin_coreModule *, SharedKoin_coreInstanceFactory<id> *> *)singleQualifier:(id<SharedKoin_coreQualifier> _Nullable)qualifier createdAtStart:(BOOL)createdAtStart definition:(id _Nullable (^)(SharedKoin_coreScope *, SharedKoin_coreParametersHolder *))definition __attribute__((swift_name("single(qualifier:createdAtStart:definition:)")));
@property (readonly) SharedMutableSet<SharedKoin_coreSingleInstanceFactory<id> *> *eagerInstances __attribute__((swift_name("eagerInstances")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) BOOL isLoaded __attribute__((swift_name("isLoaded")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Koin_coreKoinApplication")))
@interface SharedKoin_coreKoinApplication : SharedBase
@property (class, readonly, getter=companion) SharedKoin_coreKoinApplicationCompanion *companion __attribute__((swift_name("companion")));
- (void)allowOverrideOverride:(BOOL)override __attribute__((swift_name("allowOverride(override:)")));
- (void)close __attribute__((swift_name("close()")));
- (void)createEagerInstances __attribute__((swift_name("createEagerInstances()")));
- (SharedKoin_coreKoinApplication *)loggerLogger:(SharedKoin_coreLogger *)logger __attribute__((swift_name("logger(logger:)")));
- (SharedKoin_coreKoinApplication *)modulesModules:(SharedKotlinArray<SharedKoin_coreModule *> *)modules __attribute__((swift_name("modules(modules:)")));
- (SharedKoin_coreKoinApplication *)modulesModules_:(NSArray<SharedKoin_coreModule *> *)modules __attribute__((swift_name("modules(modules_:)")));
- (SharedKoin_coreKoinApplication *)modulesModules__:(SharedKoin_coreModule *)modules __attribute__((swift_name("modules(modules__:)")));
- (SharedKoin_coreKoinApplication *)printLoggerLevel:(SharedKoin_coreLevel *)level __attribute__((swift_name("printLogger(level:)")));
- (SharedKoin_coreKoinApplication *)propertiesValues:(NSDictionary<NSString *, id> *)values __attribute__((swift_name("properties(values:)")));
- (void)unloadModulesModules:(NSArray<SharedKoin_coreModule *> *)modules __attribute__((swift_name("unloadModules(modules:)")));
- (void)unloadModulesModule:(SharedKoin_coreModule *)module __attribute__((swift_name("unloadModules(module:)")));
@property (readonly) SharedKoin_coreKoin *koin __attribute__((swift_name("koin")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_serialization_jsonJsonElement.Companion")))
@interface SharedKotlinx_serialization_jsonJsonElementCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinx_serialization_jsonJsonElementCompanion *shared __attribute__((swift_name("shared")));
- (id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((swift_name("KotlinIterator")))
@protocol SharedKotlinIterator
@required
- (BOOL)hasNext __attribute__((swift_name("hasNext()")));
- (id _Nullable)next __attribute__((swift_name("next()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpRequestData")))
@interface SharedKtor_client_coreHttpRequestData : SharedBase
- (instancetype)initWithUrl:(SharedKtor_httpUrl *)url method:(SharedKtor_httpHttpMethod *)method headers:(id<SharedKtor_httpHeaders>)headers body:(SharedKtor_httpOutgoingContent *)body executionContext:(id<SharedKotlinx_coroutines_coreJob>)executionContext attributes:(id<SharedKtor_utilsAttributes>)attributes __attribute__((swift_name("init(url:method:headers:body:executionContext:attributes:)"))) __attribute__((objc_designated_initializer));
- (id _Nullable)getCapabilityOrNullKey:(id<SharedKtor_client_coreHttpClientEngineCapability>)key __attribute__((swift_name("getCapabilityOrNull(key:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<SharedKtor_utilsAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) SharedKtor_httpOutgoingContent *body __attribute__((swift_name("body")));
@property (readonly) id<SharedKotlinx_coroutines_coreJob> executionContext __attribute__((swift_name("executionContext")));
@property (readonly) id<SharedKtor_httpHeaders> headers __attribute__((swift_name("headers")));
@property (readonly) SharedKtor_httpHttpMethod *method __attribute__((swift_name("method")));
@property (readonly) SharedKtor_httpUrl *url __attribute__((swift_name("url")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpResponseData")))
@interface SharedKtor_client_coreHttpResponseData : SharedBase
- (instancetype)initWithStatusCode:(SharedKtor_httpHttpStatusCode *)statusCode requestTime:(SharedKtor_utilsGMTDate *)requestTime headers:(id<SharedKtor_httpHeaders>)headers version:(SharedKtor_httpHttpProtocolVersion *)version body:(id)body callContext:(id<SharedKotlinCoroutineContext>)callContext __attribute__((swift_name("init(statusCode:requestTime:headers:version:body:callContext:)"))) __attribute__((objc_designated_initializer));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id body __attribute__((swift_name("body")));
@property (readonly) id<SharedKotlinCoroutineContext> callContext __attribute__((swift_name("callContext")));
@property (readonly) id<SharedKtor_httpHeaders> headers __attribute__((swift_name("headers")));
@property (readonly) SharedKtor_utilsGMTDate *requestTime __attribute__((swift_name("requestTime")));
@property (readonly) SharedKtor_utilsGMTDate *responseTime __attribute__((swift_name("responseTime")));
@property (readonly) SharedKtor_httpHttpStatusCode *statusCode __attribute__((swift_name("statusCode")));
@property (readonly) SharedKtor_httpHttpProtocolVersion *version __attribute__((swift_name("version")));
@end

__attribute__((swift_name("Ktor_client_coreHttpClientEngineConfig")))
@interface SharedKtor_client_coreHttpClientEngineConfig : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property BOOL pipelining __attribute__((swift_name("pipelining")));
@property SharedKtor_client_coreProxyConfig * _Nullable proxy __attribute__((swift_name("proxy")));
@property int32_t threadsCount __attribute__((swift_name("threadsCount")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
__attribute__((swift_name("KotlinCoroutineContext")))
@protocol SharedKotlinCoroutineContext
@required
- (id _Nullable)foldInitial:(id _Nullable)initial operation:(id _Nullable (^)(id _Nullable, id<SharedKotlinCoroutineContextElement>))operation __attribute__((swift_name("fold(initial:operation:)")));
- (id<SharedKotlinCoroutineContextElement> _Nullable)getKey:(id<SharedKotlinCoroutineContextKey>)key __attribute__((swift_name("get(key:)")));
- (id<SharedKotlinCoroutineContext>)minusKeyKey:(id<SharedKotlinCoroutineContextKey>)key __attribute__((swift_name("minusKey(key:)")));
- (id<SharedKotlinCoroutineContext>)plusContext:(id<SharedKotlinCoroutineContext>)context __attribute__((swift_name("plus(context:)")));
@end

__attribute__((swift_name("KotlinCoroutineContextElement")))
@protocol SharedKotlinCoroutineContextElement <SharedKotlinCoroutineContext>
@required
@property (readonly) id<SharedKotlinCoroutineContextKey> key __attribute__((swift_name("key")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
__attribute__((swift_name("KotlinAbstractCoroutineContextElement")))
@interface SharedKotlinAbstractCoroutineContextElement : SharedBase <SharedKotlinCoroutineContextElement>
- (instancetype)initWithKey:(id<SharedKotlinCoroutineContextKey>)key __attribute__((swift_name("init(key:)"))) __attribute__((objc_designated_initializer));
@property (readonly) id<SharedKotlinCoroutineContextKey> key __attribute__((swift_name("key")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
__attribute__((swift_name("KotlinContinuationInterceptor")))
@protocol SharedKotlinContinuationInterceptor <SharedKotlinCoroutineContextElement>
@required
- (id<SharedKotlinContinuation>)interceptContinuationContinuation:(id<SharedKotlinContinuation>)continuation __attribute__((swift_name("interceptContinuation(continuation:)")));
- (void)releaseInterceptedContinuationContinuation:(id<SharedKotlinContinuation>)continuation __attribute__((swift_name("releaseInterceptedContinuation(continuation:)")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreCoroutineDispatcher")))
@interface SharedKotlinx_coroutines_coreCoroutineDispatcher : SharedKotlinAbstractCoroutineContextElement <SharedKotlinContinuationInterceptor>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithKey:(id<SharedKotlinCoroutineContextKey>)key __attribute__((swift_name("init(key:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedKotlinx_coroutines_coreCoroutineDispatcherKey *companion __attribute__((swift_name("companion")));
- (void)dispatchContext:(id<SharedKotlinCoroutineContext>)context block:(id<SharedKotlinx_coroutines_coreRunnable>)block __attribute__((swift_name("dispatch(context:block:)")));
- (void)dispatchYieldContext:(id<SharedKotlinCoroutineContext>)context block:(id<SharedKotlinx_coroutines_coreRunnable>)block __attribute__((swift_name("dispatchYield(context:block:)")));
- (id<SharedKotlinContinuation>)interceptContinuationContinuation:(id<SharedKotlinContinuation>)continuation __attribute__((swift_name("interceptContinuation(continuation:)")));
- (BOOL)isDispatchNeededContext:(id<SharedKotlinCoroutineContext>)context __attribute__((swift_name("isDispatchNeeded(context:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
- (SharedKotlinx_coroutines_coreCoroutineDispatcher *)limitedParallelismParallelism:(int32_t)parallelism __attribute__((swift_name("limitedParallelism(parallelism:)")));
- (SharedKotlinx_coroutines_coreCoroutineDispatcher *)plusOther:(SharedKotlinx_coroutines_coreCoroutineDispatcher *)other __attribute__((swift_name("plus(other:)"))) __attribute__((unavailable("Operator '+' on two CoroutineDispatcher objects is meaningless. CoroutineDispatcher is a coroutine context element and `+` is a set-sum operator for coroutine contexts. The dispatcher to the right of `+` just replaces the dispatcher to the left.")));
- (void)releaseInterceptedContinuationContinuation:(id<SharedKotlinContinuation>)continuation __attribute__((swift_name("releaseInterceptedContinuation(continuation:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((swift_name("Ktor_client_coreHttpClientEngineCapability")))
@protocol SharedKtor_client_coreHttpClientEngineCapability
@required
@end

__attribute__((swift_name("Kotlinx_serialization_coreEncoder")))
@protocol SharedKotlinx_serialization_coreEncoder
@required
- (id<SharedKotlinx_serialization_coreCompositeEncoder>)beginCollectionDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor collectionSize:(int32_t)collectionSize __attribute__((swift_name("beginCollection(descriptor:collectionSize:)")));
- (id<SharedKotlinx_serialization_coreCompositeEncoder>)beginStructureDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("beginStructure(descriptor:)")));
- (void)encodeBooleanValue:(BOOL)value __attribute__((swift_name("encodeBoolean(value:)")));
- (void)encodeByteValue:(int8_t)value __attribute__((swift_name("encodeByte(value:)")));
- (void)encodeCharValue:(unichar)value __attribute__((swift_name("encodeChar(value:)")));
- (void)encodeDoubleValue:(double)value __attribute__((swift_name("encodeDouble(value:)")));
- (void)encodeEnumEnumDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)enumDescriptor index:(int32_t)index __attribute__((swift_name("encodeEnum(enumDescriptor:index:)")));
- (void)encodeFloatValue:(float)value __attribute__((swift_name("encodeFloat(value:)")));
- (id<SharedKotlinx_serialization_coreEncoder>)encodeInlineInlineDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)inlineDescriptor __attribute__((swift_name("encodeInline(inlineDescriptor:)")));
- (void)encodeIntValue:(int32_t)value __attribute__((swift_name("encodeInt(value:)")));
- (void)encodeLongValue:(int64_t)value __attribute__((swift_name("encodeLong(value:)")));
- (void)encodeNotNullMark __attribute__((swift_name("encodeNotNullMark()")));
- (void)encodeNull __attribute__((swift_name("encodeNull()")));
- (void)encodeNullableSerializableValueSerializer:(id<SharedKotlinx_serialization_coreSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeNullableSerializableValue(serializer:value:)")));
- (void)encodeSerializableValueSerializer:(id<SharedKotlinx_serialization_coreSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeSerializableValue(serializer:value:)")));
- (void)encodeShortValue:(int16_t)value __attribute__((swift_name("encodeShort(value:)")));
- (void)encodeStringValue:(NSString *)value __attribute__((swift_name("encodeString(value:)")));
@property (readonly) SharedKotlinx_serialization_coreSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreSerialDescriptor")))
@protocol SharedKotlinx_serialization_coreSerialDescriptor
@required
- (NSArray<id<SharedKotlinAnnotation>> *)getElementAnnotationsIndex:(int32_t)index __attribute__((swift_name("getElementAnnotations(index:)")));
- (id<SharedKotlinx_serialization_coreSerialDescriptor>)getElementDescriptorIndex:(int32_t)index __attribute__((swift_name("getElementDescriptor(index:)")));
- (int32_t)getElementIndexName:(NSString *)name __attribute__((swift_name("getElementIndex(name:)")));
- (NSString *)getElementNameIndex:(int32_t)index __attribute__((swift_name("getElementName(index:)")));
- (BOOL)isElementOptionalIndex:(int32_t)index __attribute__((swift_name("isElementOptional(index:)")));
@property (readonly) NSArray<id<SharedKotlinAnnotation>> *annotations __attribute__((swift_name("annotations")));
@property (readonly) int32_t elementsCount __attribute__((swift_name("elementsCount")));
@property (readonly) BOOL isInline __attribute__((swift_name("isInline")));
@property (readonly) BOOL isNullable __attribute__((swift_name("isNullable")));
@property (readonly) SharedKotlinx_serialization_coreSerialKind *kind __attribute__((swift_name("kind")));
@property (readonly) NSString *serialName __attribute__((swift_name("serialName")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreDecoder")))
@protocol SharedKotlinx_serialization_coreDecoder
@required
- (id<SharedKotlinx_serialization_coreCompositeDecoder>)beginStructureDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("beginStructure(descriptor:)")));
- (BOOL)decodeBoolean __attribute__((swift_name("decodeBoolean()")));
- (int8_t)decodeByte __attribute__((swift_name("decodeByte()")));
- (unichar)decodeChar __attribute__((swift_name("decodeChar()")));
- (double)decodeDouble __attribute__((swift_name("decodeDouble()")));
- (int32_t)decodeEnumEnumDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)enumDescriptor __attribute__((swift_name("decodeEnum(enumDescriptor:)")));
- (float)decodeFloat __attribute__((swift_name("decodeFloat()")));
- (id<SharedKotlinx_serialization_coreDecoder>)decodeInlineInlineDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)inlineDescriptor __attribute__((swift_name("decodeInline(inlineDescriptor:)")));
- (int32_t)decodeInt __attribute__((swift_name("decodeInt()")));
- (int64_t)decodeLong __attribute__((swift_name("decodeLong()")));
- (BOOL)decodeNotNullMark __attribute__((swift_name("decodeNotNullMark()")));
- (SharedKotlinNothing * _Nullable)decodeNull __attribute__((swift_name("decodeNull()")));
- (id _Nullable)decodeNullableSerializableValueDeserializer:(id<SharedKotlinx_serialization_coreDeserializationStrategy>)deserializer __attribute__((swift_name("decodeNullableSerializableValue(deserializer:)")));
- (id _Nullable)decodeSerializableValueDeserializer:(id<SharedKotlinx_serialization_coreDeserializationStrategy>)deserializer __attribute__((swift_name("decodeSerializableValue(deserializer:)")));
- (int16_t)decodeShort __attribute__((swift_name("decodeShort()")));
- (NSString *)decodeString __attribute__((swift_name("decodeString()")));
@property (readonly) SharedKotlinx_serialization_coreSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end

__attribute__((swift_name("Koin_coreLockable")))
@interface SharedKoin_coreLockable : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Koin_coreScope")))
@interface SharedKoin_coreScope : SharedKoin_coreLockable
- (instancetype)initWithScopeQualifier:(id<SharedKoin_coreQualifier>)scopeQualifier id:(NSString *)id isRoot:(BOOL)isRoot _koin:(SharedKoin_coreKoin *)_koin __attribute__((swift_name("init(scopeQualifier:id:isRoot:_koin:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (void)close __attribute__((swift_name("close()")));
- (SharedKoin_coreScope *)doCopyScopeQualifier:(id<SharedKoin_coreQualifier>)scopeQualifier id:(NSString *)id isRoot:(BOOL)isRoot _koin:(SharedKoin_coreKoin *)_koin __attribute__((swift_name("doCopy(scopeQualifier:id:isRoot:_koin:)")));
- (void)declareInstance:(id _Nullable)instance qualifier:(id<SharedKoin_coreQualifier> _Nullable)qualifier secondaryTypes:(NSArray<id<SharedKotlinKClass>> *)secondaryTypes allowOverride:(BOOL)allowOverride __attribute__((swift_name("declare(instance:qualifier:secondaryTypes:allowOverride:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (id _Nullable)getClazz:(id<SharedKotlinKClass>)clazz qualifier:(id<SharedKoin_coreQualifier> _Nullable)qualifier parameters:(SharedKoin_coreParametersHolder *(^ _Nullable)(void))parameters __attribute__((swift_name("get(clazz:qualifier:parameters:)")));
- (id)getQualifier:(id<SharedKoin_coreQualifier> _Nullable)qualifier parameters:(SharedKoin_coreParametersHolder *(^ _Nullable)(void))parameters __attribute__((swift_name("get(qualifier:parameters:)")));
- (NSArray<id> *)getAll __attribute__((swift_name("getAll()")));
- (NSArray<id> *)getAllClazz:(id<SharedKotlinKClass>)clazz __attribute__((swift_name("getAll(clazz:)")));
- (SharedKoin_coreKoin *)getKoin __attribute__((swift_name("getKoin()")));
- (id _Nullable)getOrNullClazz:(id<SharedKotlinKClass>)clazz qualifier:(id<SharedKoin_coreQualifier> _Nullable)qualifier parameters:(SharedKoin_coreParametersHolder *(^ _Nullable)(void))parameters __attribute__((swift_name("getOrNull(clazz:qualifier:parameters:)")));
- (id _Nullable)getOrNullQualifier:(id<SharedKoin_coreQualifier> _Nullable)qualifier parameters:(SharedKoin_coreParametersHolder *(^ _Nullable)(void))parameters __attribute__((swift_name("getOrNull(qualifier:parameters:)")));
- (id)getPropertyKey:(NSString *)key __attribute__((swift_name("getProperty(key:)")));
- (id)getPropertyKey:(NSString *)key defaultValue:(id)defaultValue __attribute__((swift_name("getProperty(key:defaultValue:)")));
- (id _Nullable)getPropertyOrNullKey:(NSString *)key __attribute__((swift_name("getPropertyOrNull(key:)")));
- (SharedKoin_coreScope *)getScopeScopeID:(NSString *)scopeID __attribute__((swift_name("getScope(scopeID:)")));
- (id _Nullable)getSource __attribute__((swift_name("getSource()"))) __attribute__((deprecated("No need to use getSource(). You can an use get() directly.")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (id<SharedKotlinLazy>)injectQualifier:(id<SharedKoin_coreQualifier> _Nullable)qualifier mode:(SharedKotlinLazyThreadSafetyMode *)mode parameters:(SharedKoin_coreParametersHolder *(^ _Nullable)(void))parameters __attribute__((swift_name("inject(qualifier:mode:parameters:)")));
- (id<SharedKotlinLazy>)injectOrNullQualifier:(id<SharedKoin_coreQualifier> _Nullable)qualifier mode:(SharedKotlinLazyThreadSafetyMode *)mode parameters:(SharedKoin_coreParametersHolder *(^ _Nullable)(void))parameters __attribute__((swift_name("injectOrNull(qualifier:mode:parameters:)")));
- (BOOL)isNotClosed __attribute__((swift_name("isNotClosed()")));
- (void)linkToScopes:(SharedKotlinArray<SharedKoin_coreScope *> *)scopes __attribute__((swift_name("linkTo(scopes:)")));
- (void)refreshScopeInstanceClazz:(id<SharedKotlinKClass>)clazz qualifier:(id<SharedKoin_coreQualifier> _Nullable)qualifier instance:(id)instance __attribute__((swift_name("refreshScopeInstance(clazz:qualifier:instance:)")));
- (void)registerCallbackCallback:(id<SharedKoin_coreScopeCallback>)callback __attribute__((swift_name("registerCallback(callback:)")));
- (NSString *)description __attribute__((swift_name("description()")));
- (void)unlinkScopes:(SharedKotlinArray<SharedKoin_coreScope *> *)scopes __attribute__((swift_name("unlink(scopes:)")));
@property (readonly) NSMutableArray<SharedKoin_coreParametersHolder *> *_parameterStack __attribute__((swift_name("_parameterStack")));
@property id _Nullable _source __attribute__((swift_name("_source")));
@property (readonly) BOOL closed __attribute__((swift_name("closed")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) BOOL isRoot __attribute__((swift_name("isRoot")));
@property (readonly) SharedKoin_coreLogger *logger __attribute__((swift_name("logger")));
@property (readonly) id<SharedKoin_coreQualifier> scopeQualifier __attribute__((swift_name("scopeQualifier")));
@end

__attribute__((swift_name("Koin_coreKoinScopeComponent")))
@protocol SharedKoin_coreKoinScopeComponent <SharedKoin_coreKoinComponent>
@required
- (void)closeScope __attribute__((swift_name("closeScope()")));
@property (readonly) SharedKoin_coreScope *scope __attribute__((swift_name("scope")));
@end

__attribute__((swift_name("Koin_coreQualifier")))
@protocol SharedKoin_coreQualifier
@required
@property (readonly) NSString *value_ __attribute__((swift_name("value_")));
@end

__attribute__((swift_name("KotlinKDeclarationContainer")))
@protocol SharedKotlinKDeclarationContainer
@required
@end

__attribute__((swift_name("KotlinKAnnotatedElement")))
@protocol SharedKotlinKAnnotatedElement
@required
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
__attribute__((swift_name("KotlinKClassifier")))
@protocol SharedKotlinKClassifier
@required
@end

__attribute__((swift_name("KotlinKClass")))
@protocol SharedKotlinKClass <SharedKotlinKDeclarationContainer, SharedKotlinKAnnotatedElement, SharedKotlinKClassifier>
@required

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
- (BOOL)isInstanceValue:(id _Nullable)value __attribute__((swift_name("isInstance(value:)")));
@property (readonly) NSString * _Nullable qualifiedName __attribute__((swift_name("qualifiedName")));
@property (readonly) NSString * _Nullable simpleName __attribute__((swift_name("simpleName")));
@end

__attribute__((swift_name("Koin_coreParametersHolder")))
@interface SharedKoin_coreParametersHolder : SharedBase
- (instancetype)initWith_values:(NSMutableArray<id> *)_values __attribute__((swift_name("init(_values:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedKoin_coreParametersHolderCompanion *companion __attribute__((swift_name("companion")));
- (SharedKoin_coreParametersHolder *)addValue:(id)value __attribute__((swift_name("add(value:)")));
- (id _Nullable)component1 __attribute__((swift_name("component1()")));
- (id _Nullable)component2 __attribute__((swift_name("component2()")));
- (id _Nullable)component3 __attribute__((swift_name("component3()")));
- (id _Nullable)component4 __attribute__((swift_name("component4()")));
- (id _Nullable)component5 __attribute__((swift_name("component5()")));
- (id _Nullable)elementAtI:(int32_t)i clazz:(id<SharedKotlinKClass>)clazz __attribute__((swift_name("elementAt(i:clazz:)")));
- (id)get __attribute__((swift_name("get()")));
- (id _Nullable)getI:(int32_t)i __attribute__((swift_name("get(i:)")));
- (id _Nullable)getOrNull __attribute__((swift_name("getOrNull()")));
- (id _Nullable)getOrNullClazz:(id<SharedKotlinKClass>)clazz __attribute__((swift_name("getOrNull(clazz:)")));
- (SharedKoin_coreParametersHolder *)insertIndex:(int32_t)index value:(id)value __attribute__((swift_name("insert(index:value:)")));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
- (BOOL)isNotEmpty __attribute__((swift_name("isNotEmpty()")));
- (void)setI:(int32_t)i t:(id _Nullable)t __attribute__((swift_name("set(i:t:)")));
- (int32_t)size __attribute__((swift_name("size()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<id> *values __attribute__((swift_name("values")));
@end

__attribute__((swift_name("KotlinLazy")))
@protocol SharedKotlinLazy
@required
- (BOOL)isInitialized __attribute__((swift_name("isInitialized()")));
@property (readonly) id _Nullable value_ __attribute__((swift_name("value_")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinLazyThreadSafetyMode")))
@interface SharedKotlinLazyThreadSafetyMode : SharedKotlinEnum<SharedKotlinLazyThreadSafetyMode *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedKotlinLazyThreadSafetyMode *synchronized __attribute__((swift_name("synchronized")));
@property (class, readonly) SharedKotlinLazyThreadSafetyMode *publication __attribute__((swift_name("publication")));
@property (class, readonly) SharedKotlinLazyThreadSafetyMode *none __attribute__((swift_name("none")));
+ (SharedKotlinArray<SharedKotlinLazyThreadSafetyMode *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((swift_name("Koin_coreLogger")))
@interface SharedKoin_coreLogger : SharedBase
- (instancetype)initWithLevel:(SharedKoin_coreLevel *)level __attribute__((swift_name("init(level:)"))) __attribute__((objc_designated_initializer));
- (void)debugMsg:(NSString *)msg __attribute__((swift_name("debug(msg:)")));
- (void)errorMsg:(NSString *)msg __attribute__((swift_name("error(msg:)")));
- (void)infoMsg:(NSString *)msg __attribute__((swift_name("info(msg:)")));
- (BOOL)isAtLvl:(SharedKoin_coreLevel *)lvl __attribute__((swift_name("isAt(lvl:)")));
- (void)logLvl:(SharedKoin_coreLevel *)lvl msg:(NSString *(^)(void))msg __attribute__((swift_name("log(lvl:msg:)")));
- (void)logLevel:(SharedKoin_coreLevel *)level msg:(NSString *)msg __attribute__((swift_name("log(level:msg:)")));
@property SharedKoin_coreLevel *level __attribute__((swift_name("level")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Koin_coreInstanceRegistry")))
@interface SharedKoin_coreInstanceRegistry : SharedBase
- (instancetype)initWith_koin:(SharedKoin_coreKoin *)_koin __attribute__((swift_name("init(_koin:)"))) __attribute__((objc_designated_initializer));
- (void)saveMappingAllowOverride:(BOOL)allowOverride mapping:(NSString *)mapping factory:(SharedKoin_coreInstanceFactory<id> *)factory logWarning:(BOOL)logWarning __attribute__((swift_name("saveMapping(allowOverride:mapping:factory:logWarning:)")));
- (int32_t)size __attribute__((swift_name("size()")));
@property (readonly) SharedKoin_coreKoin *_koin __attribute__((swift_name("_koin")));
@property (readonly) NSDictionary<NSString *, SharedKoin_coreInstanceFactory<id> *> *instances __attribute__((swift_name("instances")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Koin_corePropertyRegistry")))
@interface SharedKoin_corePropertyRegistry : SharedBase
- (instancetype)initWith_koin:(SharedKoin_coreKoin *)_koin __attribute__((swift_name("init(_koin:)"))) __attribute__((objc_designated_initializer));
- (void)close __attribute__((swift_name("close()")));
- (void)deletePropertyKey:(NSString *)key __attribute__((swift_name("deleteProperty(key:)")));
- (id _Nullable)getPropertyKey:(NSString *)key __attribute__((swift_name("getProperty(key:)")));
- (void)savePropertiesProperties:(NSDictionary<NSString *, id> *)properties __attribute__((swift_name("saveProperties(properties:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Koin_coreScopeRegistry")))
@interface SharedKoin_coreScopeRegistry : SharedBase
- (instancetype)initWith_koin:(SharedKoin_coreKoin *)_koin __attribute__((swift_name("init(_koin:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedKoin_coreScopeRegistryCompanion *companion __attribute__((swift_name("companion")));
- (void)loadScopesModules:(NSSet<SharedKoin_coreModule *> *)modules __attribute__((swift_name("loadScopes(modules:)")));
@property (readonly) SharedKoin_coreScope *rootScope __attribute__((swift_name("rootScope")));
@property (readonly) NSSet<id<SharedKoin_coreQualifier>> *scopeDefinitions __attribute__((swift_name("scopeDefinitions")));
@end

__attribute__((swift_name("Ktor_utilsStringValues")))
@protocol SharedKtor_utilsStringValues
@required
- (BOOL)containsName:(NSString *)name __attribute__((swift_name("contains(name:)")));
- (BOOL)containsName:(NSString *)name value:(NSString *)value __attribute__((swift_name("contains(name:value:)")));
- (NSSet<id<SharedKotlinMapEntry>> *)entries __attribute__((swift_name("entries()")));
- (void)forEachBody:(void (^)(NSString *, NSArray<NSString *> *))body __attribute__((swift_name("forEach(body:)")));
- (NSString * _Nullable)getName:(NSString *)name __attribute__((swift_name("get(name:)")));
- (NSArray<NSString *> * _Nullable)getAllName:(NSString *)name __attribute__((swift_name("getAll(name:)")));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
- (NSSet<NSString *> *)names __attribute__((swift_name("names()")));
@property (readonly) BOOL caseInsensitiveName __attribute__((swift_name("caseInsensitiveName")));
@end

__attribute__((swift_name("Ktor_httpHeaders")))
@protocol SharedKtor_httpHeaders <SharedKtor_utilsStringValues>
@required
@end

__attribute__((swift_name("Ktor_client_coreHttpClientCall")))
@interface SharedKtor_client_coreHttpClientCall : SharedBase <SharedKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithClient:(SharedKtor_client_coreHttpClient *)client requestData:(SharedKtor_client_coreHttpRequestData *)requestData responseData:(SharedKtor_client_coreHttpResponseData *)responseData __attribute__((swift_name("init(client:requestData:responseData:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithClient:(SharedKtor_client_coreHttpClient *)client __attribute__((swift_name("init(client:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedKtor_client_coreHttpClientCallCompanion *companion __attribute__((swift_name("companion")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)bodyInfo:(SharedKtor_utilsTypeInfo *)info completionHandler:(void (^)(id _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("body(info:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)bodyNullableInfo:(SharedKtor_utilsTypeInfo *)info completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("bodyNullable(info:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)getResponseContentWithCompletionHandler:(void (^)(id<SharedKtor_ioByteReadChannel> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getResponseContent(completionHandler:)")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) BOOL allowDoubleReceive __attribute__((swift_name("allowDoubleReceive")));
@property (readonly) id<SharedKtor_utilsAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) SharedKtor_client_coreHttpClient *client __attribute__((swift_name("client")));
@property (readonly) id<SharedKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@property id<SharedKtor_client_coreHttpRequest> request __attribute__((swift_name("request")));
@property SharedKtor_client_coreHttpResponse *response __attribute__((swift_name("response")));
@end

__attribute__((swift_name("Ktor_ioByteReadChannel")))
@protocol SharedKtor_ioByteReadChannel
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)awaitContentWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("awaitContent(completionHandler:)")));
- (BOOL)cancelCause:(SharedKotlinThrowable * _Nullable)cause __attribute__((swift_name("cancel(cause:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)discardMax:(int64_t)max completionHandler:(void (^)(SharedLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("discard(max:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)peekToDestination:(SharedKtor_ioMemory *)destination destinationOffset:(int64_t)destinationOffset offset:(int64_t)offset min:(int64_t)min max:(int64_t)max completionHandler:(void (^)(SharedLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("peekTo(destination:destinationOffset:offset:min:max:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readAvailableDst:(SharedKtor_ioChunkBuffer *)dst completionHandler:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAvailable(dst:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readAvailableDst:(SharedKotlinByteArray *)dst offset:(int32_t)offset length:(int32_t)length completionHandler:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAvailable(dst:offset:length:completionHandler:)")));
- (int32_t)readAvailableMin:(int32_t)min block:(void (^)(SharedKtor_ioBuffer *))block __attribute__((swift_name("readAvailable(min:block:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readAvailableDst:(void *)dst offset:(int32_t)offset length:(int32_t)length completionHandler_:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAvailable(dst:offset:length:completionHandler_:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readAvailableDst:(void *)dst offset:(int64_t)offset length:(int64_t)length completionHandler__:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAvailable(dst:offset:length:completionHandler__:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readBooleanWithCompletionHandler:(void (^)(SharedBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readBoolean(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readByteWithCompletionHandler:(void (^)(SharedByte * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readByte(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readDoubleWithCompletionHandler:(void (^)(SharedDouble * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readDouble(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFloatWithCompletionHandler:(void (^)(SharedFloat * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readFloat(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFullyDst:(SharedKtor_ioChunkBuffer *)dst n:(int32_t)n completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(dst:n:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFullyDst:(SharedKotlinByteArray *)dst offset:(int32_t)offset length:(int32_t)length completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(dst:offset:length:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFullyDst:(void *)dst offset:(int32_t)offset length:(int32_t)length completionHandler_:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(dst:offset:length:completionHandler_:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFullyDst:(void *)dst offset:(int64_t)offset length:(int64_t)length completionHandler__:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(dst:offset:length:completionHandler__:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readIntWithCompletionHandler:(void (^)(SharedInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readInt(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readLongWithCompletionHandler:(void (^)(SharedLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readLong(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readPacketSize:(int32_t)size completionHandler:(void (^)(SharedKtor_ioByteReadPacket * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readPacket(size:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readRemainingLimit:(int64_t)limit completionHandler:(void (^)(SharedKtor_ioByteReadPacket * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readRemaining(limit:completionHandler:)")));
- (void)readSessionConsumer:(void (^)(id<SharedKtor_ioReadSession>))consumer __attribute__((swift_name("readSession(consumer:)"))) __attribute__((deprecated("Use read { } instead.")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readShortWithCompletionHandler:(void (^)(SharedShort * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readShort(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readSuspendableSessionConsumer:(id<SharedKotlinSuspendFunction1>)consumer completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("readSuspendableSession(consumer:completionHandler:)"))) __attribute__((deprecated("Use read { } instead.")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readUTF8LineLimit:(int32_t)limit completionHandler:(void (^)(NSString * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("readUTF8Line(limit:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readUTF8LineToOut:(id<SharedKotlinAppendable>)out limit:(int32_t)limit completionHandler:(void (^)(SharedBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readUTF8LineTo(out:limit:completionHandler:)")));
@property (readonly) int32_t availableForRead __attribute__((swift_name("availableForRead")));
@property (readonly) SharedKotlinThrowable * _Nullable closedCause __attribute__((swift_name("closedCause")));
@property (readonly) BOOL isClosedForRead __attribute__((swift_name("isClosedForRead")));
@property (readonly) BOOL isClosedForWrite __attribute__((swift_name("isClosedForWrite")));
@property (readonly) int64_t totalBytesRead __attribute__((swift_name("totalBytesRead")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsGMTDate")))
@interface SharedKtor_utilsGMTDate : SharedBase <SharedKotlinComparable>
@property (class, readonly, getter=companion) SharedKtor_utilsGMTDateCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)compareToOther:(SharedKtor_utilsGMTDate *)other __attribute__((swift_name("compareTo(other:)")));
- (SharedKtor_utilsGMTDate *)doCopySeconds:(int32_t)seconds minutes:(int32_t)minutes hours:(int32_t)hours dayOfWeek:(SharedKtor_utilsWeekDay *)dayOfWeek dayOfMonth:(int32_t)dayOfMonth dayOfYear:(int32_t)dayOfYear month:(SharedKtor_utilsMonth *)month year:(int32_t)year timestamp:(int64_t)timestamp __attribute__((swift_name("doCopy(seconds:minutes:hours:dayOfWeek:dayOfMonth:dayOfYear:month:year:timestamp:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t dayOfMonth __attribute__((swift_name("dayOfMonth")));
@property (readonly) SharedKtor_utilsWeekDay *dayOfWeek __attribute__((swift_name("dayOfWeek")));
@property (readonly) int32_t dayOfYear __attribute__((swift_name("dayOfYear")));
@property (readonly) int32_t hours __attribute__((swift_name("hours")));
@property (readonly) int32_t minutes __attribute__((swift_name("minutes")));
@property (readonly) SharedKtor_utilsMonth *month __attribute__((swift_name("month")));
@property (readonly) int32_t seconds __attribute__((swift_name("seconds")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@property (readonly) int32_t year __attribute__((swift_name("year")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHttpStatusCode")))
@interface SharedKtor_httpHttpStatusCode : SharedBase
- (instancetype)initWithValue:(int32_t)value description:(NSString *)description __attribute__((swift_name("init(value:description:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedKtor_httpHttpStatusCodeCompanion *companion __attribute__((swift_name("companion")));
- (SharedKtor_httpHttpStatusCode *)doCopyValue:(int32_t)value description:(NSString *)description __attribute__((swift_name("doCopy(value:description:)")));
- (SharedKtor_httpHttpStatusCode *)descriptionValue:(NSString *)value __attribute__((swift_name("description(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHttpProtocolVersion")))
@interface SharedKtor_httpHttpProtocolVersion : SharedBase
- (instancetype)initWithName:(NSString *)name major:(int32_t)major minor:(int32_t)minor __attribute__((swift_name("init(name:major:minor:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedKtor_httpHttpProtocolVersionCompanion *companion __attribute__((swift_name("companion")));
- (SharedKtor_httpHttpProtocolVersion *)doCopyName:(NSString *)name major:(int32_t)major minor:(int32_t)minor __attribute__((swift_name("doCopy(name:major:minor:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t major __attribute__((swift_name("major")));
@property (readonly) int32_t minor __attribute__((swift_name("minor")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpClientConfig")))
@interface SharedKtor_client_coreHttpClientConfig<T> : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedKtor_client_coreHttpClientConfig<T> *)clone __attribute__((swift_name("clone()")));
- (void)engineBlock:(void (^)(T))block __attribute__((swift_name("engine(block:)")));
- (void)installClient:(SharedKtor_client_coreHttpClient *)client __attribute__((swift_name("install(client:)")));
- (void)installPlugin:(id<SharedKtor_client_coreHttpClientPlugin>)plugin configure:(void (^)(id))configure __attribute__((swift_name("install(plugin:configure:)")));
- (void)installKey:(NSString *)key block:(void (^)(SharedKtor_client_coreHttpClient *))block __attribute__((swift_name("install(key:block:)")));
- (void)plusAssignOther:(SharedKtor_client_coreHttpClientConfig<T> *)other __attribute__((swift_name("plusAssign(other:)")));
@property BOOL developmentMode __attribute__((swift_name("developmentMode")));
@property BOOL expectSuccess __attribute__((swift_name("expectSuccess")));
@property BOOL followRedirects __attribute__((swift_name("followRedirects")));
@property BOOL useDefaultTransformers __attribute__((swift_name("useDefaultTransformers")));
@end

__attribute__((swift_name("Ktor_utilsAttributes")))
@protocol SharedKtor_utilsAttributes
@required
- (id)computeIfAbsentKey:(SharedKtor_utilsAttributeKey<id> *)key block:(id (^)(void))block __attribute__((swift_name("computeIfAbsent(key:block:)")));
- (BOOL)containsKey:(SharedKtor_utilsAttributeKey<id> *)key __attribute__((swift_name("contains(key:)")));
- (id)getKey_:(SharedKtor_utilsAttributeKey<id> *)key __attribute__((swift_name("get(key_:)")));
- (id _Nullable)getOrNullKey:(SharedKtor_utilsAttributeKey<id> *)key __attribute__((swift_name("getOrNull(key:)")));
- (void)putKey:(SharedKtor_utilsAttributeKey<id> *)key value:(id)value __attribute__((swift_name("put(key:value:)")));
- (void)removeKey:(SharedKtor_utilsAttributeKey<id> *)key __attribute__((swift_name("remove(key:)")));
- (id)takeKey:(SharedKtor_utilsAttributeKey<id> *)key __attribute__((swift_name("take(key:)")));
- (id _Nullable)takeOrNullKey:(SharedKtor_utilsAttributeKey<id> *)key __attribute__((swift_name("takeOrNull(key:)")));
@property (readonly) NSArray<SharedKtor_utilsAttributeKey<id> *> *allKeys __attribute__((swift_name("allKeys")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_eventsEvents")))
@interface SharedKtor_eventsEvents : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)raiseDefinition:(SharedKtor_eventsEventDefinition<id> *)definition value:(id _Nullable)value __attribute__((swift_name("raise(definition:value:)")));
- (id<SharedKotlinx_coroutines_coreDisposableHandle>)subscribeDefinition:(SharedKtor_eventsEventDefinition<id> *)definition handler:(void (^)(id _Nullable))handler __attribute__((swift_name("subscribe(definition:handler:)")));
- (void)unsubscribeDefinition:(SharedKtor_eventsEventDefinition<id> *)definition handler:(void (^)(id _Nullable))handler __attribute__((swift_name("unsubscribe(definition:handler:)")));
@end

__attribute__((swift_name("Ktor_utilsPipeline")))
@interface SharedKtor_utilsPipeline<TSubject, TContext> : SharedBase
- (instancetype)initWithPhase:(SharedKtor_utilsPipelinePhase *)phase interceptors:(NSArray<id<SharedKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhases:(SharedKotlinArray<SharedKtor_utilsPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer));
- (void)addPhasePhase:(SharedKtor_utilsPipelinePhase *)phase __attribute__((swift_name("addPhase(phase:)")));
- (void)afterIntercepted __attribute__((swift_name("afterIntercepted()")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)executeContext:(TContext)context subject:(TSubject)subject completionHandler:(void (^)(TSubject _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("execute(context:subject:completionHandler:)")));
- (void)insertPhaseAfterReference:(SharedKtor_utilsPipelinePhase *)reference phase:(SharedKtor_utilsPipelinePhase *)phase __attribute__((swift_name("insertPhaseAfter(reference:phase:)")));
- (void)insertPhaseBeforeReference:(SharedKtor_utilsPipelinePhase *)reference phase:(SharedKtor_utilsPipelinePhase *)phase __attribute__((swift_name("insertPhaseBefore(reference:phase:)")));
- (void)interceptPhase:(SharedKtor_utilsPipelinePhase *)phase block:(id<SharedKotlinSuspendFunction2>)block __attribute__((swift_name("intercept(phase:block:)")));
- (NSArray<id<SharedKotlinSuspendFunction2>> *)interceptorsForPhasePhase:(SharedKtor_utilsPipelinePhase *)phase __attribute__((swift_name("interceptorsForPhase(phase:)")));
- (void)mergeFrom:(SharedKtor_utilsPipeline<TSubject, TContext> *)from __attribute__((swift_name("merge(from:)")));
- (void)mergePhasesFrom:(SharedKtor_utilsPipeline<TSubject, TContext> *)from __attribute__((swift_name("mergePhases(from:)")));
- (void)resetFromFrom:(SharedKtor_utilsPipeline<TSubject, TContext> *)from __attribute__((swift_name("resetFrom(from:)")));
@property (readonly) id<SharedKtor_utilsAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@property (readonly, getter=isEmpty_) BOOL isEmpty __attribute__((swift_name("isEmpty")));
@property (readonly) NSArray<SharedKtor_utilsPipelinePhase *> *items __attribute__((swift_name("items")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpReceivePipeline")))
@interface SharedKtor_client_coreHttpReceivePipeline : SharedKtor_utilsPipeline<SharedKtor_client_coreHttpResponse *, SharedKotlinUnit *>
- (instancetype)initWithDevelopmentMode:(BOOL)developmentMode __attribute__((swift_name("init(developmentMode:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhase:(SharedKtor_utilsPipelinePhase *)phase interceptors:(NSArray<id<SharedKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithPhases:(SharedKotlinArray<SharedKtor_utilsPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedKtor_client_coreHttpReceivePipelinePhases *companion __attribute__((swift_name("companion")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpRequestPipeline")))
@interface SharedKtor_client_coreHttpRequestPipeline : SharedKtor_utilsPipeline<id, SharedKtor_client_coreHttpRequestBuilder *>
- (instancetype)initWithDevelopmentMode:(BOOL)developmentMode __attribute__((swift_name("init(developmentMode:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhase:(SharedKtor_utilsPipelinePhase *)phase interceptors:(NSArray<id<SharedKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithPhases:(SharedKotlinArray<SharedKtor_utilsPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedKtor_client_coreHttpRequestPipelinePhases *companion __attribute__((swift_name("companion")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpResponsePipeline")))
@interface SharedKtor_client_coreHttpResponsePipeline : SharedKtor_utilsPipeline<SharedKtor_client_coreHttpResponseContainer *, SharedKtor_client_coreHttpClientCall *>
- (instancetype)initWithDevelopmentMode:(BOOL)developmentMode __attribute__((swift_name("init(developmentMode:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhase:(SharedKtor_utilsPipelinePhase *)phase interceptors:(NSArray<id<SharedKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithPhases:(SharedKotlinArray<SharedKtor_utilsPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedKtor_client_coreHttpResponsePipelinePhases *companion __attribute__((swift_name("companion")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpSendPipeline")))
@interface SharedKtor_client_coreHttpSendPipeline : SharedKtor_utilsPipeline<id, SharedKtor_client_coreHttpRequestBuilder *>
- (instancetype)initWithDevelopmentMode:(BOOL)developmentMode __attribute__((swift_name("init(developmentMode:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhase:(SharedKtor_utilsPipelinePhase *)phase interceptors:(NSArray<id<SharedKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithPhases:(SharedKotlinArray<SharedKtor_utilsPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedKtor_client_coreHttpSendPipelinePhases *companion __attribute__((swift_name("companion")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@end

__attribute__((swift_name("Koin_coreInstanceFactory")))
@interface SharedKoin_coreInstanceFactory<T> : SharedKoin_coreLockable
- (instancetype)initWithBeanDefinition:(SharedKoin_coreBeanDefinition<T> *)beanDefinition __attribute__((swift_name("init(beanDefinition:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedKoin_coreInstanceFactoryCompanion *companion __attribute__((swift_name("companion")));
- (T _Nullable)createContext:(SharedKoin_coreInstanceContext *)context __attribute__((swift_name("create(context:)")));
- (void)dropScope:(SharedKoin_coreScope * _Nullable)scope __attribute__((swift_name("drop(scope:)")));
- (void)dropAll __attribute__((swift_name("dropAll()")));
- (T _Nullable)getContext:(SharedKoin_coreInstanceContext *)context __attribute__((swift_name("get(context:)")));
- (BOOL)isCreatedContext:(SharedKoin_coreInstanceContext * _Nullable)context __attribute__((swift_name("isCreated(context:)")));
@property (readonly) SharedKoin_coreBeanDefinition<T> *beanDefinition __attribute__((swift_name("beanDefinition")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Koin_coreScopeDSL")))
@interface SharedKoin_coreScopeDSL : SharedBase
- (instancetype)initWithScopeQualifier:(id<SharedKoin_coreQualifier>)scopeQualifier module:(SharedKoin_coreModule *)module __attribute__((swift_name("init(scopeQualifier:module:)"))) __attribute__((objc_designated_initializer));
- (SharedKotlinPair<SharedKoin_coreModule *, SharedKoin_coreInstanceFactory<id> *> *)factoryQualifier:(id<SharedKoin_coreQualifier> _Nullable)qualifier definition:(id _Nullable (^)(SharedKoin_coreScope *, SharedKoin_coreParametersHolder *))definition __attribute__((swift_name("factory(qualifier:definition:)")));
- (SharedKotlinPair<SharedKoin_coreModule *, SharedKoin_coreInstanceFactory<id> *> *)scopedQualifier:(id<SharedKoin_coreQualifier> _Nullable)qualifier definition:(id _Nullable (^)(SharedKoin_coreScope *, SharedKoin_coreParametersHolder *))definition __attribute__((swift_name("scoped(qualifier:definition:)")));
- (SharedKotlinPair<SharedKoin_coreModule *, SharedKoin_coreInstanceFactory<id> *> *)singleQualifier:(id<SharedKoin_coreQualifier> _Nullable)qualifier definition:(id _Nullable (^)(SharedKoin_coreScope *, SharedKoin_coreParametersHolder *))definition __attribute__((swift_name("single(qualifier:definition:)"))) __attribute__((unavailable("Can't use Single in a scope. Use Scoped instead")));
@property (readonly) SharedKoin_coreModule *module __attribute__((swift_name("module")));
@property (readonly) id<SharedKoin_coreQualifier> scopeQualifier __attribute__((swift_name("scopeQualifier")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Koin_coreSingleInstanceFactory")))
@interface SharedKoin_coreSingleInstanceFactory<T> : SharedKoin_coreInstanceFactory<T>
- (instancetype)initWithBeanDefinition:(SharedKoin_coreBeanDefinition<T> *)beanDefinition __attribute__((swift_name("init(beanDefinition:)"))) __attribute__((objc_designated_initializer));
- (T _Nullable)createContext:(SharedKoin_coreInstanceContext *)context __attribute__((swift_name("create(context:)")));
- (void)dropScope:(SharedKoin_coreScope * _Nullable)scope __attribute__((swift_name("drop(scope:)")));
- (void)dropAll __attribute__((swift_name("dropAll()")));
- (T _Nullable)getContext:(SharedKoin_coreInstanceContext *)context __attribute__((swift_name("get(context:)")));
- (BOOL)isCreatedContext:(SharedKoin_coreInstanceContext * _Nullable)context __attribute__((swift_name("isCreated(context:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Koin_coreKoinApplication.Companion")))
@interface SharedKoin_coreKoinApplicationCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKoin_coreKoinApplicationCompanion *shared __attribute__((swift_name("shared")));
- (SharedKoin_coreKoinApplication *)doInit __attribute__((swift_name("doInit()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Koin_coreLevel")))
@interface SharedKoin_coreLevel : SharedKotlinEnum<SharedKoin_coreLevel *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedKoin_coreLevel *debug __attribute__((swift_name("debug")));
@property (class, readonly) SharedKoin_coreLevel *info __attribute__((swift_name("info")));
@property (class, readonly) SharedKoin_coreLevel *error __attribute__((swift_name("error")));
@property (class, readonly) SharedKoin_coreLevel *none __attribute__((swift_name("none")));
+ (SharedKotlinArray<SharedKoin_coreLevel *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpUrl")))
@interface SharedKtor_httpUrl : SharedBase
@property (class, readonly, getter=companion) SharedKtor_httpUrlCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *encodedFragment __attribute__((swift_name("encodedFragment")));
@property (readonly) NSString * _Nullable encodedPassword __attribute__((swift_name("encodedPassword")));
@property (readonly) NSString *encodedPath __attribute__((swift_name("encodedPath")));
@property (readonly) NSString *encodedPathAndQuery __attribute__((swift_name("encodedPathAndQuery")));
@property (readonly) NSString *encodedQuery __attribute__((swift_name("encodedQuery")));
@property (readonly) NSString * _Nullable encodedUser __attribute__((swift_name("encodedUser")));
@property (readonly) NSString *fragment __attribute__((swift_name("fragment")));
@property (readonly) NSString *host __attribute__((swift_name("host")));
@property (readonly) id<SharedKtor_httpParameters> parameters __attribute__((swift_name("parameters")));
@property (readonly) NSString * _Nullable password __attribute__((swift_name("password")));
@property (readonly) NSArray<NSString *> *pathSegments __attribute__((swift_name("pathSegments")));
@property (readonly) int32_t port __attribute__((swift_name("port")));
@property (readonly) SharedKtor_httpURLProtocol *protocol __attribute__((swift_name("protocol")));
@property (readonly) int32_t specifiedPort __attribute__((swift_name("specifiedPort")));
@property (readonly) BOOL trailingQuery __attribute__((swift_name("trailingQuery")));
@property (readonly) NSString * _Nullable user __attribute__((swift_name("user")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHttpMethod")))
@interface SharedKtor_httpHttpMethod : SharedBase
- (instancetype)initWithValue:(NSString *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedKtor_httpHttpMethodCompanion *companion __attribute__((swift_name("companion")));
- (SharedKtor_httpHttpMethod *)doCopyValue:(NSString *)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((swift_name("Ktor_httpOutgoingContent")))
@interface SharedKtor_httpOutgoingContent : SharedBase
- (id _Nullable)getPropertyKey:(SharedKtor_utilsAttributeKey<id> *)key __attribute__((swift_name("getProperty(key:)")));
- (void)setPropertyKey:(SharedKtor_utilsAttributeKey<id> *)key value:(id _Nullable)value __attribute__((swift_name("setProperty(key:value:)")));
- (id<SharedKtor_httpHeaders> _Nullable)trailers __attribute__((swift_name("trailers()")));
@property (readonly) SharedLong * _Nullable contentLength __attribute__((swift_name("contentLength")));
@property (readonly) SharedKtor_httpContentType * _Nullable contentType __attribute__((swift_name("contentType")));
@property (readonly) id<SharedKtor_httpHeaders> headers __attribute__((swift_name("headers")));
@property (readonly) SharedKtor_httpHttpStatusCode * _Nullable status __attribute__((swift_name("status")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreJob")))
@protocol SharedKotlinx_coroutines_coreJob <SharedKotlinCoroutineContextElement>
@required
- (id<SharedKotlinx_coroutines_coreChildHandle>)attachChildChild:(id<SharedKotlinx_coroutines_coreChildJob>)child __attribute__((swift_name("attachChild(child:)")));
- (void)cancelCause_:(SharedKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancel(cause_:)")));
- (SharedKotlinCancellationException *)getCancellationException __attribute__((swift_name("getCancellationException()")));
- (id<SharedKotlinx_coroutines_coreDisposableHandle>)invokeOnCompletionOnCancelling:(BOOL)onCancelling invokeImmediately:(BOOL)invokeImmediately handler:(void (^)(SharedKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnCompletion(onCancelling:invokeImmediately:handler:)")));
- (id<SharedKotlinx_coroutines_coreDisposableHandle>)invokeOnCompletionHandler:(void (^)(SharedKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnCompletion(handler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)joinWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("join(completionHandler:)")));
- (id<SharedKotlinx_coroutines_coreJob>)plusOther_:(id<SharedKotlinx_coroutines_coreJob>)other __attribute__((swift_name("plus(other_:)"))) __attribute__((unavailable("Operator '+' on two Job objects is meaningless. Job is a coroutine context element and `+` is a set-sum operator for coroutine contexts. The job to the right of `+` just replaces the job the left of `+`.")));
- (BOOL)start __attribute__((swift_name("start()")));
@property (readonly) id<SharedKotlinSequence> children __attribute__((swift_name("children")));
@property (readonly) BOOL isActive __attribute__((swift_name("isActive")));
@property (readonly) BOOL isCancelled __attribute__((swift_name("isCancelled")));
@property (readonly) BOOL isCompleted __attribute__((swift_name("isCompleted")));
@property (readonly) id<SharedKotlinx_coroutines_coreSelectClause0> onJoin __attribute__((swift_name("onJoin")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreProxyConfig")))
@interface SharedKtor_client_coreProxyConfig : SharedBase
- (instancetype)initWithUrl:(SharedKtor_httpUrl *)url __attribute__((swift_name("init(url:)"))) __attribute__((objc_designated_initializer));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedKtor_httpUrl *url __attribute__((swift_name("url")));
@end

__attribute__((swift_name("KotlinCoroutineContextKey")))
@protocol SharedKotlinCoroutineContextKey
@required
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
__attribute__((swift_name("KotlinContinuation")))
@protocol SharedKotlinContinuation
@required
- (void)resumeWithResult:(id _Nullable)result __attribute__((swift_name("resumeWith(result:)")));
@property (readonly) id<SharedKotlinCoroutineContext> context __attribute__((swift_name("context")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
 *   kotlin.ExperimentalStdlibApi
*/
__attribute__((swift_name("KotlinAbstractCoroutineContextKey")))
@interface SharedKotlinAbstractCoroutineContextKey<B, E> : SharedBase <SharedKotlinCoroutineContextKey>
- (instancetype)initWithBaseKey:(id<SharedKotlinCoroutineContextKey>)baseKey safeCast:(E _Nullable (^)(id<SharedKotlinCoroutineContextElement>))safeCast __attribute__((swift_name("init(baseKey:safeCast:)"))) __attribute__((objc_designated_initializer));
@end


/**
 * @note annotations
 *   kotlin.ExperimentalStdlibApi
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_coroutines_coreCoroutineDispatcher.Key")))
@interface SharedKotlinx_coroutines_coreCoroutineDispatcherKey : SharedKotlinAbstractCoroutineContextKey<id<SharedKotlinContinuationInterceptor>, SharedKotlinx_coroutines_coreCoroutineDispatcher *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithBaseKey:(id<SharedKotlinCoroutineContextKey>)baseKey safeCast:(id<SharedKotlinCoroutineContextElement> _Nullable (^)(id<SharedKotlinCoroutineContextElement>))safeCast __attribute__((swift_name("init(baseKey:safeCast:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)key __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinx_coroutines_coreCoroutineDispatcherKey *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreRunnable")))
@protocol SharedKotlinx_coroutines_coreRunnable
@required
- (void)run __attribute__((swift_name("run()")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreCompositeEncoder")))
@protocol SharedKotlinx_serialization_coreCompositeEncoder
@required
- (void)encodeBooleanElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(BOOL)value __attribute__((swift_name("encodeBooleanElement(descriptor:index:value:)")));
- (void)encodeByteElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(int8_t)value __attribute__((swift_name("encodeByteElement(descriptor:index:value:)")));
- (void)encodeCharElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(unichar)value __attribute__((swift_name("encodeCharElement(descriptor:index:value:)")));
- (void)encodeDoubleElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(double)value __attribute__((swift_name("encodeDoubleElement(descriptor:index:value:)")));
- (void)encodeFloatElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(float)value __attribute__((swift_name("encodeFloatElement(descriptor:index:value:)")));
- (id<SharedKotlinx_serialization_coreEncoder>)encodeInlineElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("encodeInlineElement(descriptor:index:)")));
- (void)encodeIntElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(int32_t)value __attribute__((swift_name("encodeIntElement(descriptor:index:value:)")));
- (void)encodeLongElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(int64_t)value __attribute__((swift_name("encodeLongElement(descriptor:index:value:)")));
- (void)encodeNullableSerializableElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index serializer:(id<SharedKotlinx_serialization_coreSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeNullableSerializableElement(descriptor:index:serializer:value:)")));
- (void)encodeSerializableElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index serializer:(id<SharedKotlinx_serialization_coreSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeSerializableElement(descriptor:index:serializer:value:)")));
- (void)encodeShortElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(int16_t)value __attribute__((swift_name("encodeShortElement(descriptor:index:value:)")));
- (void)encodeStringElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(NSString *)value __attribute__((swift_name("encodeStringElement(descriptor:index:value:)")));
- (void)endStructureDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("endStructure(descriptor:)")));
- (BOOL)shouldEncodeElementDefaultDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("shouldEncodeElementDefault(descriptor:index:)")));
@property (readonly) SharedKotlinx_serialization_coreSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreSerializersModule")))
@interface SharedKotlinx_serialization_coreSerializersModule : SharedBase
- (void)dumpToCollector:(id<SharedKotlinx_serialization_coreSerializersModuleCollector>)collector __attribute__((swift_name("dumpTo(collector:)")));
- (id<SharedKotlinx_serialization_coreKSerializer> _Nullable)getContextualKClass:(id<SharedKotlinKClass>)kClass typeArgumentsSerializers:(NSArray<id<SharedKotlinx_serialization_coreKSerializer>> *)typeArgumentsSerializers __attribute__((swift_name("getContextual(kClass:typeArgumentsSerializers:)")));
- (id<SharedKotlinx_serialization_coreSerializationStrategy> _Nullable)getPolymorphicBaseClass:(id<SharedKotlinKClass>)baseClass value:(id)value __attribute__((swift_name("getPolymorphic(baseClass:value:)")));
- (id<SharedKotlinx_serialization_coreDeserializationStrategy> _Nullable)getPolymorphicBaseClass:(id<SharedKotlinKClass>)baseClass serializedClassName:(NSString * _Nullable)serializedClassName __attribute__((swift_name("getPolymorphic(baseClass:serializedClassName:)")));
@end

__attribute__((swift_name("KotlinAnnotation")))
@protocol SharedKotlinAnnotation
@required
@end

__attribute__((swift_name("Kotlinx_serialization_coreSerialKind")))
@interface SharedKotlinx_serialization_coreSerialKind : SharedBase
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreCompositeDecoder")))
@protocol SharedKotlinx_serialization_coreCompositeDecoder
@required
- (BOOL)decodeBooleanElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeBooleanElement(descriptor:index:)")));
- (int8_t)decodeByteElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeByteElement(descriptor:index:)")));
- (unichar)decodeCharElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeCharElement(descriptor:index:)")));
- (int32_t)decodeCollectionSizeDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("decodeCollectionSize(descriptor:)")));
- (double)decodeDoubleElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeDoubleElement(descriptor:index:)")));
- (int32_t)decodeElementIndexDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("decodeElementIndex(descriptor:)")));
- (float)decodeFloatElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeFloatElement(descriptor:index:)")));
- (id<SharedKotlinx_serialization_coreDecoder>)decodeInlineElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeInlineElement(descriptor:index:)")));
- (int32_t)decodeIntElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeIntElement(descriptor:index:)")));
- (int64_t)decodeLongElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeLongElement(descriptor:index:)")));
- (id _Nullable)decodeNullableSerializableElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index deserializer:(id<SharedKotlinx_serialization_coreDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeNullableSerializableElement(descriptor:index:deserializer:previousValue:)")));
- (BOOL)decodeSequentially __attribute__((swift_name("decodeSequentially()")));
- (id _Nullable)decodeSerializableElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index deserializer:(id<SharedKotlinx_serialization_coreDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeSerializableElement(descriptor:index:deserializer:previousValue:)")));
- (int16_t)decodeShortElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeShortElement(descriptor:index:)")));
- (NSString *)decodeStringElementDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeStringElement(descriptor:index:)")));
- (void)endStructureDescriptor:(id<SharedKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("endStructure(descriptor:)")));
@property (readonly) SharedKotlinx_serialization_coreSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end

__attribute__((swift_name("Koin_coreScopeCallback")))
@protocol SharedKoin_coreScopeCallback
@required
- (void)onScopeCloseScope:(SharedKoin_coreScope *)scope __attribute__((swift_name("onScopeClose(scope:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Koin_coreParametersHolder.Companion")))
@interface SharedKoin_coreParametersHolderCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKoin_coreParametersHolderCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) int32_t MAX_PARAMS __attribute__((swift_name("MAX_PARAMS")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Koin_coreScopeRegistry.Companion")))
@interface SharedKoin_coreScopeRegistryCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKoin_coreScopeRegistryCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("KotlinMapEntry")))
@protocol SharedKotlinMapEntry
@required
@property (readonly) id _Nullable key __attribute__((swift_name("key")));
@property (readonly) id _Nullable value_ __attribute__((swift_name("value_")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpClientCall.Companion")))
@interface SharedKtor_client_coreHttpClientCallCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKtor_client_coreHttpClientCallCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) SharedKtor_utilsAttributeKey<id> *CustomResponse __attribute__((swift_name("CustomResponse"))) __attribute__((unavailable("This is going to be removed. Please file a ticket with clarification why and what for do you need it.")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsTypeInfo")))
@interface SharedKtor_utilsTypeInfo : SharedBase
- (instancetype)initWithType:(id<SharedKotlinKClass>)type reifiedType:(id<SharedKotlinKType>)reifiedType kotlinType:(id<SharedKotlinKType> _Nullable)kotlinType __attribute__((swift_name("init(type:reifiedType:kotlinType:)"))) __attribute__((objc_designated_initializer));
- (SharedKtor_utilsTypeInfo *)doCopyType:(id<SharedKotlinKClass>)type reifiedType:(id<SharedKotlinKType>)reifiedType kotlinType:(id<SharedKotlinKType> _Nullable)kotlinType __attribute__((swift_name("doCopy(type:reifiedType:kotlinType:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<SharedKotlinKType> _Nullable kotlinType __attribute__((swift_name("kotlinType")));
@property (readonly) id<SharedKotlinKType> reifiedType __attribute__((swift_name("reifiedType")));
@property (readonly) id<SharedKotlinKClass> type __attribute__((swift_name("type")));
@end

__attribute__((swift_name("Ktor_client_coreHttpRequest")))
@protocol SharedKtor_client_coreHttpRequest <SharedKtor_httpHttpMessage, SharedKotlinx_coroutines_coreCoroutineScope>
@required
@property (readonly) id<SharedKtor_utilsAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) SharedKtor_client_coreHttpClientCall *call __attribute__((swift_name("call")));
@property (readonly) SharedKtor_httpOutgoingContent *content __attribute__((swift_name("content")));
@property (readonly) SharedKtor_httpHttpMethod *method __attribute__((swift_name("method")));
@property (readonly) SharedKtor_httpUrl *url __attribute__((swift_name("url")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_ioMemory")))
@interface SharedKtor_ioMemory : SharedBase
- (instancetype)initWithPointer:(void *)pointer size:(int64_t)size __attribute__((swift_name("init(pointer:size:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedKtor_ioMemoryCompanion *companion __attribute__((swift_name("companion")));
- (void)doCopyToDestination:(SharedKtor_ioMemory *)destination offset:(int32_t)offset length:(int32_t)length destinationOffset:(int32_t)destinationOffset __attribute__((swift_name("doCopyTo(destination:offset:length:destinationOffset:)")));
- (void)doCopyToDestination:(SharedKtor_ioMemory *)destination offset:(int64_t)offset length:(int64_t)length destinationOffset_:(int64_t)destinationOffset __attribute__((swift_name("doCopyTo(destination:offset:length:destinationOffset_:)")));
- (int8_t)loadAtIndex:(int32_t)index __attribute__((swift_name("loadAt(index:)")));
- (int8_t)loadAtIndex_:(int64_t)index __attribute__((swift_name("loadAt(index_:)")));
- (SharedKtor_ioMemory *)sliceOffset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("slice(offset:length:)")));
- (SharedKtor_ioMemory *)sliceOffset:(int64_t)offset length_:(int64_t)length __attribute__((swift_name("slice(offset:length_:)")));
- (void)storeAtIndex:(int32_t)index value:(int8_t)value __attribute__((swift_name("storeAt(index:value:)")));
- (void)storeAtIndex:(int64_t)index value_:(int8_t)value __attribute__((swift_name("storeAt(index:value_:)")));
@property (readonly) void *pointer __attribute__((swift_name("pointer")));
@property (readonly) int64_t size __attribute__((swift_name("size")));
@property (readonly) int32_t size32 __attribute__((swift_name("size32")));
@end

__attribute__((swift_name("Ktor_ioBuffer")))
@interface SharedKtor_ioBuffer : SharedBase
- (instancetype)initWithMemory:(SharedKtor_ioMemory *)memory __attribute__((swift_name("init(memory:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedKtor_ioBufferCompanion *companion __attribute__((swift_name("companion")));
- (void)commitWrittenCount:(int32_t)count __attribute__((swift_name("commitWritten(count:)")));
- (void)discardExactCount:(int32_t)count __attribute__((swift_name("discardExact(count:)")));
- (SharedKtor_ioBuffer *)duplicate __attribute__((swift_name("duplicate()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)duplicateToCopy:(SharedKtor_ioBuffer *)copy __attribute__((swift_name("duplicateTo(copy:)")));
- (int8_t)readByte __attribute__((swift_name("readByte()")));
- (void)reserveEndGapEndGap:(int32_t)endGap __attribute__((swift_name("reserveEndGap(endGap:)")));
- (void)reserveStartGapStartGap:(int32_t)startGap __attribute__((swift_name("reserveStartGap(startGap:)")));
- (void)reset __attribute__((swift_name("reset()")));
- (void)resetForRead __attribute__((swift_name("resetForRead()")));
- (void)resetForWrite __attribute__((swift_name("resetForWrite()")));
- (void)resetForWriteLimit:(int32_t)limit __attribute__((swift_name("resetForWrite(limit:)")));
- (void)rewindCount:(int32_t)count __attribute__((swift_name("rewind(count:)")));
- (NSString *)description __attribute__((swift_name("description()")));
- (int32_t)tryPeekByte __attribute__((swift_name("tryPeekByte()")));
- (int32_t)tryReadByte __attribute__((swift_name("tryReadByte()")));
- (void)writeByteValue:(int8_t)value __attribute__((swift_name("writeByte(value:)")));
@property (readonly) int32_t capacity __attribute__((swift_name("capacity")));
@property (readonly) int32_t endGap __attribute__((swift_name("endGap")));
@property (readonly) int32_t limit __attribute__((swift_name("limit")));
@property (readonly) SharedKtor_ioMemory *memory __attribute__((swift_name("memory")));
@property (readonly) int32_t readPosition __attribute__((swift_name("readPosition")));
@property (readonly) int32_t readRemaining __attribute__((swift_name("readRemaining")));
@property (readonly) int32_t startGap __attribute__((swift_name("startGap")));
@property (readonly) int32_t writePosition __attribute__((swift_name("writePosition")));
@property (readonly) int32_t writeRemaining __attribute__((swift_name("writeRemaining")));
@end

__attribute__((swift_name("Ktor_ioChunkBuffer")))
@interface SharedKtor_ioChunkBuffer : SharedKtor_ioBuffer
- (instancetype)initWithMemory:(SharedKtor_ioMemory *)memory origin:(SharedKtor_ioChunkBuffer * _Nullable)origin parentPool:(id<SharedKtor_ioObjectPool> _Nullable)parentPool __attribute__((swift_name("init(memory:origin:parentPool:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMemory:(SharedKtor_ioMemory *)memory __attribute__((swift_name("init(memory:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedKtor_ioChunkBufferCompanion *companion __attribute__((swift_name("companion")));
- (SharedKtor_ioChunkBuffer * _Nullable)cleanNext __attribute__((swift_name("cleanNext()")));
- (SharedKtor_ioChunkBuffer *)duplicate __attribute__((swift_name("duplicate()")));
- (void)releasePool:(id<SharedKtor_ioObjectPool>)pool __attribute__((swift_name("release(pool:)")));
- (void)reset __attribute__((swift_name("reset()")));
@property (getter=next_) SharedKtor_ioChunkBuffer * _Nullable next __attribute__((swift_name("next")));
@property (readonly) SharedKtor_ioChunkBuffer * _Nullable origin __attribute__((swift_name("origin")));
@property (readonly) int32_t referenceCount __attribute__((swift_name("referenceCount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinByteArray")))
@interface SharedKotlinByteArray : SharedBase
+ (instancetype)arrayWithSize:(int32_t)size __attribute__((swift_name("init(size:)")));
+ (instancetype)arrayWithSize:(int32_t)size init:(SharedByte *(^)(SharedInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (int8_t)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (SharedKotlinByteIterator *)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(int8_t)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

__attribute__((swift_name("Ktor_ioInput")))
@interface SharedKtor_ioInput : SharedBase <SharedKtor_ioCloseable>
- (instancetype)initWithHead:(SharedKtor_ioChunkBuffer *)head remaining:(int64_t)remaining pool:(id<SharedKtor_ioObjectPool>)pool __attribute__((swift_name("init(head:remaining:pool:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedKtor_ioInputCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)canRead __attribute__((swift_name("canRead()")));
- (void)close __attribute__((swift_name("close()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)closeSource __attribute__((swift_name("closeSource()")));
- (int32_t)discardN:(int32_t)n __attribute__((swift_name("discard(n:)")));
- (int64_t)discardN_:(int64_t)n __attribute__((swift_name("discard(n_:)")));
- (void)discardExactN:(int32_t)n __attribute__((swift_name("discardExact(n:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (SharedKtor_ioChunkBuffer * _Nullable)fill __attribute__((swift_name("fill()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (int32_t)fillDestination:(SharedKtor_ioMemory *)destination offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("fill(destination:offset:length:)")));
- (BOOL)hasBytesN:(int32_t)n __attribute__((swift_name("hasBytes(n:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)markNoMoreChunksAvailable __attribute__((swift_name("markNoMoreChunksAvailable()")));
- (int64_t)peekToDestination:(SharedKtor_ioMemory *)destination destinationOffset:(int64_t)destinationOffset offset:(int64_t)offset min:(int64_t)min max:(int64_t)max __attribute__((swift_name("peekTo(destination:destinationOffset:offset:min:max:)")));
- (int32_t)peekToBuffer:(SharedKtor_ioChunkBuffer *)buffer __attribute__((swift_name("peekTo(buffer:)")));
- (int8_t)readByte __attribute__((swift_name("readByte()")));
- (NSString *)readTextMin:(int32_t)min max:(int32_t)max __attribute__((swift_name("readText(min:max:)")));
- (int32_t)readTextOut:(id<SharedKotlinAppendable>)out min:(int32_t)min max:(int32_t)max __attribute__((swift_name("readText(out:min:max:)")));
- (NSString *)readTextExactExactCharacters:(int32_t)exactCharacters __attribute__((swift_name("readTextExact(exactCharacters:)")));
- (void)readTextExactOut:(id<SharedKotlinAppendable>)out exactCharacters:(int32_t)exactCharacters __attribute__((swift_name("readTextExact(out:exactCharacters:)")));
- (void)release_ __attribute__((swift_name("release()")));
- (int32_t)tryPeek __attribute__((swift_name("tryPeek()")));
@property (readonly) BOOL endOfInput __attribute__((swift_name("endOfInput")));
@property (readonly) id<SharedKtor_ioObjectPool> pool __attribute__((swift_name("pool")));
@property (readonly) int64_t remaining __attribute__((swift_name("remaining")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_ioByteReadPacket")))
@interface SharedKtor_ioByteReadPacket : SharedKtor_ioInput
- (instancetype)initWithHead:(SharedKtor_ioChunkBuffer *)head pool:(id<SharedKtor_ioObjectPool>)pool __attribute__((swift_name("init(head:pool:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithHead:(SharedKtor_ioChunkBuffer *)head remaining:(int64_t)remaining pool:(id<SharedKtor_ioObjectPool>)pool __attribute__((swift_name("init(head:remaining:pool:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedKtor_ioByteReadPacketCompanion *companion __attribute__((swift_name("companion")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)closeSource __attribute__((swift_name("closeSource()")));
- (SharedKtor_ioByteReadPacket *)doCopy __attribute__((swift_name("doCopy()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (SharedKtor_ioChunkBuffer * _Nullable)fill __attribute__((swift_name("fill()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (int32_t)fillDestination:(SharedKtor_ioMemory *)destination offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("fill(destination:offset:length:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((swift_name("Ktor_ioReadSession")))
@protocol SharedKtor_ioReadSession
@required
- (int32_t)discardN:(int32_t)n __attribute__((swift_name("discard(n:)")));
- (SharedKtor_ioChunkBuffer * _Nullable)requestAtLeast:(int32_t)atLeast __attribute__((swift_name("request(atLeast:)")));
@property (readonly) int32_t availableForRead __attribute__((swift_name("availableForRead")));
@end

__attribute__((swift_name("KotlinFunction")))
@protocol SharedKotlinFunction
@required
@end

__attribute__((swift_name("KotlinSuspendFunction1")))
@protocol SharedKotlinSuspendFunction1 <SharedKotlinFunction>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:completionHandler:)")));
@end

__attribute__((swift_name("KotlinAppendable")))
@protocol SharedKotlinAppendable
@required
- (id<SharedKotlinAppendable>)appendValue:(unichar)value __attribute__((swift_name("append(value:)")));
- (id<SharedKotlinAppendable>)appendValue_:(id _Nullable)value __attribute__((swift_name("append(value_:)")));
- (id<SharedKotlinAppendable>)appendValue:(id _Nullable)value startIndex:(int32_t)startIndex endIndex:(int32_t)endIndex __attribute__((swift_name("append(value:startIndex:endIndex:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsGMTDate.Companion")))
@interface SharedKtor_utilsGMTDateCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKtor_utilsGMTDateCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) SharedKtor_utilsGMTDate *START __attribute__((swift_name("START")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsWeekDay")))
@interface SharedKtor_utilsWeekDay : SharedKotlinEnum<SharedKtor_utilsWeekDay *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedKtor_utilsWeekDayCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedKtor_utilsWeekDay *monday __attribute__((swift_name("monday")));
@property (class, readonly) SharedKtor_utilsWeekDay *tuesday __attribute__((swift_name("tuesday")));
@property (class, readonly) SharedKtor_utilsWeekDay *wednesday __attribute__((swift_name("wednesday")));
@property (class, readonly) SharedKtor_utilsWeekDay *thursday __attribute__((swift_name("thursday")));
@property (class, readonly) SharedKtor_utilsWeekDay *friday __attribute__((swift_name("friday")));
@property (class, readonly) SharedKtor_utilsWeekDay *saturday __attribute__((swift_name("saturday")));
@property (class, readonly) SharedKtor_utilsWeekDay *sunday __attribute__((swift_name("sunday")));
+ (SharedKotlinArray<SharedKtor_utilsWeekDay *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsMonth")))
@interface SharedKtor_utilsMonth : SharedKotlinEnum<SharedKtor_utilsMonth *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedKtor_utilsMonthCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) SharedKtor_utilsMonth *january __attribute__((swift_name("january")));
@property (class, readonly) SharedKtor_utilsMonth *february __attribute__((swift_name("february")));
@property (class, readonly) SharedKtor_utilsMonth *march __attribute__((swift_name("march")));
@property (class, readonly) SharedKtor_utilsMonth *april __attribute__((swift_name("april")));
@property (class, readonly) SharedKtor_utilsMonth *may __attribute__((swift_name("may")));
@property (class, readonly) SharedKtor_utilsMonth *june __attribute__((swift_name("june")));
@property (class, readonly) SharedKtor_utilsMonth *july __attribute__((swift_name("july")));
@property (class, readonly) SharedKtor_utilsMonth *august __attribute__((swift_name("august")));
@property (class, readonly) SharedKtor_utilsMonth *september __attribute__((swift_name("september")));
@property (class, readonly) SharedKtor_utilsMonth *october __attribute__((swift_name("october")));
@property (class, readonly) SharedKtor_utilsMonth *november __attribute__((swift_name("november")));
@property (class, readonly) SharedKtor_utilsMonth *december __attribute__((swift_name("december")));
+ (SharedKotlinArray<SharedKtor_utilsMonth *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHttpStatusCode.Companion")))
@interface SharedKtor_httpHttpStatusCodeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKtor_httpHttpStatusCodeCompanion *shared __attribute__((swift_name("shared")));
- (SharedKtor_httpHttpStatusCode *)fromValueValue:(int32_t)value __attribute__((swift_name("fromValue(value:)")));
@property (readonly) SharedKtor_httpHttpStatusCode *Accepted __attribute__((swift_name("Accepted")));
@property (readonly) SharedKtor_httpHttpStatusCode *BadGateway __attribute__((swift_name("BadGateway")));
@property (readonly) SharedKtor_httpHttpStatusCode *BadRequest __attribute__((swift_name("BadRequest")));
@property (readonly) SharedKtor_httpHttpStatusCode *Conflict __attribute__((swift_name("Conflict")));
@property (readonly) SharedKtor_httpHttpStatusCode *Continue __attribute__((swift_name("Continue")));
@property (readonly) SharedKtor_httpHttpStatusCode *Created __attribute__((swift_name("Created")));
@property (readonly) SharedKtor_httpHttpStatusCode *ExpectationFailed __attribute__((swift_name("ExpectationFailed")));
@property (readonly) SharedKtor_httpHttpStatusCode *FailedDependency __attribute__((swift_name("FailedDependency")));
@property (readonly) SharedKtor_httpHttpStatusCode *Forbidden __attribute__((swift_name("Forbidden")));
@property (readonly) SharedKtor_httpHttpStatusCode *Found __attribute__((swift_name("Found")));
@property (readonly) SharedKtor_httpHttpStatusCode *GatewayTimeout __attribute__((swift_name("GatewayTimeout")));
@property (readonly) SharedKtor_httpHttpStatusCode *Gone __attribute__((swift_name("Gone")));
@property (readonly) SharedKtor_httpHttpStatusCode *InsufficientStorage __attribute__((swift_name("InsufficientStorage")));
@property (readonly) SharedKtor_httpHttpStatusCode *InternalServerError __attribute__((swift_name("InternalServerError")));
@property (readonly) SharedKtor_httpHttpStatusCode *LengthRequired __attribute__((swift_name("LengthRequired")));
@property (readonly) SharedKtor_httpHttpStatusCode *Locked __attribute__((swift_name("Locked")));
@property (readonly) SharedKtor_httpHttpStatusCode *MethodNotAllowed __attribute__((swift_name("MethodNotAllowed")));
@property (readonly) SharedKtor_httpHttpStatusCode *MovedPermanently __attribute__((swift_name("MovedPermanently")));
@property (readonly) SharedKtor_httpHttpStatusCode *MultiStatus __attribute__((swift_name("MultiStatus")));
@property (readonly) SharedKtor_httpHttpStatusCode *MultipleChoices __attribute__((swift_name("MultipleChoices")));
@property (readonly) SharedKtor_httpHttpStatusCode *NoContent __attribute__((swift_name("NoContent")));
@property (readonly) SharedKtor_httpHttpStatusCode *NonAuthoritativeInformation __attribute__((swift_name("NonAuthoritativeInformation")));
@property (readonly) SharedKtor_httpHttpStatusCode *NotAcceptable __attribute__((swift_name("NotAcceptable")));
@property (readonly) SharedKtor_httpHttpStatusCode *NotFound __attribute__((swift_name("NotFound")));
@property (readonly) SharedKtor_httpHttpStatusCode *NotImplemented __attribute__((swift_name("NotImplemented")));
@property (readonly) SharedKtor_httpHttpStatusCode *NotModified __attribute__((swift_name("NotModified")));
@property (readonly) SharedKtor_httpHttpStatusCode *OK __attribute__((swift_name("OK")));
@property (readonly) SharedKtor_httpHttpStatusCode *PartialContent __attribute__((swift_name("PartialContent")));
@property (readonly) SharedKtor_httpHttpStatusCode *PayloadTooLarge __attribute__((swift_name("PayloadTooLarge")));
@property (readonly) SharedKtor_httpHttpStatusCode *PaymentRequired __attribute__((swift_name("PaymentRequired")));
@property (readonly) SharedKtor_httpHttpStatusCode *PermanentRedirect __attribute__((swift_name("PermanentRedirect")));
@property (readonly) SharedKtor_httpHttpStatusCode *PreconditionFailed __attribute__((swift_name("PreconditionFailed")));
@property (readonly) SharedKtor_httpHttpStatusCode *Processing __attribute__((swift_name("Processing")));
@property (readonly) SharedKtor_httpHttpStatusCode *ProxyAuthenticationRequired __attribute__((swift_name("ProxyAuthenticationRequired")));
@property (readonly) SharedKtor_httpHttpStatusCode *RequestHeaderFieldTooLarge __attribute__((swift_name("RequestHeaderFieldTooLarge")));
@property (readonly) SharedKtor_httpHttpStatusCode *RequestTimeout __attribute__((swift_name("RequestTimeout")));
@property (readonly) SharedKtor_httpHttpStatusCode *RequestURITooLong __attribute__((swift_name("RequestURITooLong")));
@property (readonly) SharedKtor_httpHttpStatusCode *RequestedRangeNotSatisfiable __attribute__((swift_name("RequestedRangeNotSatisfiable")));
@property (readonly) SharedKtor_httpHttpStatusCode *ResetContent __attribute__((swift_name("ResetContent")));
@property (readonly) SharedKtor_httpHttpStatusCode *SeeOther __attribute__((swift_name("SeeOther")));
@property (readonly) SharedKtor_httpHttpStatusCode *ServiceUnavailable __attribute__((swift_name("ServiceUnavailable")));
@property (readonly) SharedKtor_httpHttpStatusCode *SwitchProxy __attribute__((swift_name("SwitchProxy")));
@property (readonly) SharedKtor_httpHttpStatusCode *SwitchingProtocols __attribute__((swift_name("SwitchingProtocols")));
@property (readonly) SharedKtor_httpHttpStatusCode *TemporaryRedirect __attribute__((swift_name("TemporaryRedirect")));
@property (readonly) SharedKtor_httpHttpStatusCode *TooManyRequests __attribute__((swift_name("TooManyRequests")));
@property (readonly) SharedKtor_httpHttpStatusCode *Unauthorized __attribute__((swift_name("Unauthorized")));
@property (readonly) SharedKtor_httpHttpStatusCode *UnprocessableEntity __attribute__((swift_name("UnprocessableEntity")));
@property (readonly) SharedKtor_httpHttpStatusCode *UnsupportedMediaType __attribute__((swift_name("UnsupportedMediaType")));
@property (readonly) SharedKtor_httpHttpStatusCode *UpgradeRequired __attribute__((swift_name("UpgradeRequired")));
@property (readonly) SharedKtor_httpHttpStatusCode *UseProxy __attribute__((swift_name("UseProxy")));
@property (readonly) SharedKtor_httpHttpStatusCode *VariantAlsoNegotiates __attribute__((swift_name("VariantAlsoNegotiates")));
@property (readonly) SharedKtor_httpHttpStatusCode *VersionNotSupported __attribute__((swift_name("VersionNotSupported")));
@property (readonly) NSArray<SharedKtor_httpHttpStatusCode *> *allStatusCodes __attribute__((swift_name("allStatusCodes")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHttpProtocolVersion.Companion")))
@interface SharedKtor_httpHttpProtocolVersionCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKtor_httpHttpProtocolVersionCompanion *shared __attribute__((swift_name("shared")));
- (SharedKtor_httpHttpProtocolVersion *)fromValueName:(NSString *)name major:(int32_t)major minor:(int32_t)minor __attribute__((swift_name("fromValue(name:major:minor:)")));
- (SharedKtor_httpHttpProtocolVersion *)parseValue:(id)value __attribute__((swift_name("parse(value:)")));
@property (readonly) SharedKtor_httpHttpProtocolVersion *HTTP_1_0 __attribute__((swift_name("HTTP_1_0")));
@property (readonly) SharedKtor_httpHttpProtocolVersion *HTTP_1_1 __attribute__((swift_name("HTTP_1_1")));
@property (readonly) SharedKtor_httpHttpProtocolVersion *HTTP_2_0 __attribute__((swift_name("HTTP_2_0")));
@property (readonly) SharedKtor_httpHttpProtocolVersion *QUIC __attribute__((swift_name("QUIC")));
@property (readonly) SharedKtor_httpHttpProtocolVersion *SPDY_3 __attribute__((swift_name("SPDY_3")));
@end

__attribute__((swift_name("Ktor_client_coreHttpClientPlugin")))
@protocol SharedKtor_client_coreHttpClientPlugin
@required
- (void)installPlugin:(id)plugin scope:(SharedKtor_client_coreHttpClient *)scope __attribute__((swift_name("install(plugin:scope:)")));
- (id)prepareBlock:(void (^)(id))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) SharedKtor_utilsAttributeKey<id> *key __attribute__((swift_name("key")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsAttributeKey")))
@interface SharedKtor_utilsAttributeKey<T> : SharedBase
- (instancetype)initWithName:(NSString *)name __attribute__((swift_name("init(name:)"))) __attribute__((objc_designated_initializer));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((swift_name("Ktor_eventsEventDefinition")))
@interface SharedKtor_eventsEventDefinition<T> : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreDisposableHandle")))
@protocol SharedKotlinx_coroutines_coreDisposableHandle
@required
- (void)dispose __attribute__((swift_name("dispose()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsPipelinePhase")))
@interface SharedKtor_utilsPipelinePhase : SharedBase
- (instancetype)initWithName:(NSString *)name __attribute__((swift_name("init(name:)"))) __attribute__((objc_designated_initializer));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((swift_name("KotlinSuspendFunction2")))
@protocol SharedKotlinSuspendFunction2 <SharedKotlinFunction>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 p2:(id _Nullable)p2 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:p2:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpReceivePipeline.Phases")))
@interface SharedKtor_client_coreHttpReceivePipelinePhases : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)phases __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKtor_client_coreHttpReceivePipelinePhases *shared __attribute__((swift_name("shared")));
@property (readonly) SharedKtor_utilsPipelinePhase *After __attribute__((swift_name("After")));
@property (readonly) SharedKtor_utilsPipelinePhase *Before __attribute__((swift_name("Before")));
@property (readonly) SharedKtor_utilsPipelinePhase *State __attribute__((swift_name("State")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinUnit")))
@interface SharedKotlinUnit : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)unit __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinUnit *shared __attribute__((swift_name("shared")));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpRequestPipeline.Phases")))
@interface SharedKtor_client_coreHttpRequestPipelinePhases : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)phases __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKtor_client_coreHttpRequestPipelinePhases *shared __attribute__((swift_name("shared")));
@property (readonly) SharedKtor_utilsPipelinePhase *Before __attribute__((swift_name("Before")));
@property (readonly) SharedKtor_utilsPipelinePhase *Render __attribute__((swift_name("Render")));
@property (readonly) SharedKtor_utilsPipelinePhase *Send __attribute__((swift_name("Send")));
@property (readonly) SharedKtor_utilsPipelinePhase *State __attribute__((swift_name("State")));
@property (readonly) SharedKtor_utilsPipelinePhase *Transform __attribute__((swift_name("Transform")));
@end

__attribute__((swift_name("Ktor_httpHttpMessageBuilder")))
@protocol SharedKtor_httpHttpMessageBuilder
@required
@property (readonly) SharedKtor_httpHeadersBuilder *headers __attribute__((swift_name("headers")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpRequestBuilder")))
@interface SharedKtor_client_coreHttpRequestBuilder : SharedBase <SharedKtor_httpHttpMessageBuilder>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (class, readonly, getter=companion) SharedKtor_client_coreHttpRequestBuilderCompanion *companion __attribute__((swift_name("companion")));
- (SharedKtor_client_coreHttpRequestData *)build __attribute__((swift_name("build()")));
- (id _Nullable)getCapabilityOrNullKey:(id<SharedKtor_client_coreHttpClientEngineCapability>)key __attribute__((swift_name("getCapabilityOrNull(key:)")));
- (void)setAttributesBlock:(void (^)(id<SharedKtor_utilsAttributes>))block __attribute__((swift_name("setAttributes(block:)")));
- (void)setCapabilityKey:(id<SharedKtor_client_coreHttpClientEngineCapability>)key capability:(id)capability __attribute__((swift_name("setCapability(key:capability:)")));
- (SharedKtor_client_coreHttpRequestBuilder *)takeFromBuilder:(SharedKtor_client_coreHttpRequestBuilder *)builder __attribute__((swift_name("takeFrom(builder:)")));
- (SharedKtor_client_coreHttpRequestBuilder *)takeFromWithExecutionContextBuilder:(SharedKtor_client_coreHttpRequestBuilder *)builder __attribute__((swift_name("takeFromWithExecutionContext(builder:)")));
- (void)urlBlock:(void (^)(SharedKtor_httpURLBuilder *, SharedKtor_httpURLBuilder *))block __attribute__((swift_name("url(block:)")));
@property (readonly) id<SharedKtor_utilsAttributes> attributes __attribute__((swift_name("attributes")));
@property id body __attribute__((swift_name("body")));
@property SharedKtor_utilsTypeInfo * _Nullable bodyType __attribute__((swift_name("bodyType")));
@property (readonly) id<SharedKotlinx_coroutines_coreJob> executionContext __attribute__((swift_name("executionContext")));
@property (readonly) SharedKtor_httpHeadersBuilder *headers __attribute__((swift_name("headers")));
@property SharedKtor_httpHttpMethod *method __attribute__((swift_name("method")));
@property (readonly) SharedKtor_httpURLBuilder *url __attribute__((swift_name("url")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpResponsePipeline.Phases")))
@interface SharedKtor_client_coreHttpResponsePipelinePhases : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)phases __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKtor_client_coreHttpResponsePipelinePhases *shared __attribute__((swift_name("shared")));
@property (readonly) SharedKtor_utilsPipelinePhase *After __attribute__((swift_name("After")));
@property (readonly) SharedKtor_utilsPipelinePhase *Parse __attribute__((swift_name("Parse")));
@property (readonly) SharedKtor_utilsPipelinePhase *Receive __attribute__((swift_name("Receive")));
@property (readonly) SharedKtor_utilsPipelinePhase *State __attribute__((swift_name("State")));
@property (readonly) SharedKtor_utilsPipelinePhase *Transform __attribute__((swift_name("Transform")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpResponseContainer")))
@interface SharedKtor_client_coreHttpResponseContainer : SharedBase
- (instancetype)initWithExpectedType:(SharedKtor_utilsTypeInfo *)expectedType response:(id)response __attribute__((swift_name("init(expectedType:response:)"))) __attribute__((objc_designated_initializer));
- (SharedKtor_client_coreHttpResponseContainer *)doCopyExpectedType:(SharedKtor_utilsTypeInfo *)expectedType response:(id)response __attribute__((swift_name("doCopy(expectedType:response:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedKtor_utilsTypeInfo *expectedType __attribute__((swift_name("expectedType")));
@property (readonly) id response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpSendPipeline.Phases")))
@interface SharedKtor_client_coreHttpSendPipelinePhases : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)phases __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKtor_client_coreHttpSendPipelinePhases *shared __attribute__((swift_name("shared")));
@property (readonly) SharedKtor_utilsPipelinePhase *Before __attribute__((swift_name("Before")));
@property (readonly) SharedKtor_utilsPipelinePhase *Engine __attribute__((swift_name("Engine")));
@property (readonly) SharedKtor_utilsPipelinePhase *Monitoring __attribute__((swift_name("Monitoring")));
@property (readonly) SharedKtor_utilsPipelinePhase *Receive __attribute__((swift_name("Receive")));
@property (readonly) SharedKtor_utilsPipelinePhase *State __attribute__((swift_name("State")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Koin_coreBeanDefinition")))
@interface SharedKoin_coreBeanDefinition<T> : SharedBase
- (instancetype)initWithScopeQualifier:(id<SharedKoin_coreQualifier>)scopeQualifier primaryType:(id<SharedKotlinKClass>)primaryType qualifier:(id<SharedKoin_coreQualifier> _Nullable)qualifier definition:(T _Nullable (^)(SharedKoin_coreScope *, SharedKoin_coreParametersHolder *))definition kind:(SharedKoin_coreKind *)kind secondaryTypes:(NSArray<id<SharedKotlinKClass>> *)secondaryTypes __attribute__((swift_name("init(scopeQualifier:primaryType:qualifier:definition:kind:secondaryTypes:)"))) __attribute__((objc_designated_initializer));
- (SharedKoin_coreBeanDefinition<T> *)doCopyScopeQualifier:(id<SharedKoin_coreQualifier>)scopeQualifier primaryType:(id<SharedKotlinKClass>)primaryType qualifier:(id<SharedKoin_coreQualifier> _Nullable)qualifier definition:(T _Nullable (^)(SharedKoin_coreScope *, SharedKoin_coreParametersHolder *))definition kind:(SharedKoin_coreKind *)kind secondaryTypes:(NSArray<id<SharedKotlinKClass>> *)secondaryTypes __attribute__((swift_name("doCopy(scopeQualifier:primaryType:qualifier:definition:kind:secondaryTypes:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (BOOL)hasTypeClazz:(id<SharedKotlinKClass>)clazz __attribute__((swift_name("hasType(clazz:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)isClazz:(id<SharedKotlinKClass>)clazz qualifier:(id<SharedKoin_coreQualifier> _Nullable)qualifier scopeDefinition:(id<SharedKoin_coreQualifier>)scopeDefinition __attribute__((swift_name("is(clazz:qualifier:scopeDefinition:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property SharedKoin_coreCallbacks<T> *callbacks __attribute__((swift_name("callbacks")));
@property (readonly) T _Nullable (^definition)(SharedKoin_coreScope *, SharedKoin_coreParametersHolder *) __attribute__((swift_name("definition")));
@property (readonly) SharedKoin_coreKind *kind __attribute__((swift_name("kind")));
@property (readonly) id<SharedKotlinKClass> primaryType __attribute__((swift_name("primaryType")));
@property id<SharedKoin_coreQualifier> _Nullable qualifier __attribute__((swift_name("qualifier")));
@property (readonly) id<SharedKoin_coreQualifier> scopeQualifier __attribute__((swift_name("scopeQualifier")));
@property NSArray<id<SharedKotlinKClass>> *secondaryTypes __attribute__((swift_name("secondaryTypes")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Koin_coreInstanceFactoryCompanion")))
@interface SharedKoin_coreInstanceFactoryCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKoin_coreInstanceFactoryCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *ERROR_SEPARATOR __attribute__((swift_name("ERROR_SEPARATOR")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Koin_coreInstanceContext")))
@interface SharedKoin_coreInstanceContext : SharedBase
- (instancetype)initWithKoin:(SharedKoin_coreKoin *)koin scope:(SharedKoin_coreScope *)scope parameters:(SharedKoin_coreParametersHolder * _Nullable)parameters __attribute__((swift_name("init(koin:scope:parameters:)"))) __attribute__((objc_designated_initializer));
@property (readonly) SharedKoin_coreKoin *koin __attribute__((swift_name("koin")));
@property (readonly) SharedKoin_coreParametersHolder * _Nullable parameters __attribute__((swift_name("parameters")));
@property (readonly) SharedKoin_coreScope *scope __attribute__((swift_name("scope")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpUrl.Companion")))
@interface SharedKtor_httpUrlCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKtor_httpUrlCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("Ktor_httpParameters")))
@protocol SharedKtor_httpParameters <SharedKtor_utilsStringValues>
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpURLProtocol")))
@interface SharedKtor_httpURLProtocol : SharedBase
- (instancetype)initWithName:(NSString *)name defaultPort:(int32_t)defaultPort __attribute__((swift_name("init(name:defaultPort:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedKtor_httpURLProtocolCompanion *companion __attribute__((swift_name("companion")));
- (SharedKtor_httpURLProtocol *)doCopyName:(NSString *)name defaultPort:(int32_t)defaultPort __attribute__((swift_name("doCopy(name:defaultPort:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t defaultPort __attribute__((swift_name("defaultPort")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHttpMethod.Companion")))
@interface SharedKtor_httpHttpMethodCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKtor_httpHttpMethodCompanion *shared __attribute__((swift_name("shared")));
- (SharedKtor_httpHttpMethod *)parseMethod:(NSString *)method __attribute__((swift_name("parse(method:)")));
@property (readonly) NSArray<SharedKtor_httpHttpMethod *> *DefaultMethods __attribute__((swift_name("DefaultMethods")));
@property (readonly) SharedKtor_httpHttpMethod *Delete __attribute__((swift_name("Delete")));
@property (readonly) SharedKtor_httpHttpMethod *Get __attribute__((swift_name("Get")));
@property (readonly) SharedKtor_httpHttpMethod *Head __attribute__((swift_name("Head")));
@property (readonly) SharedKtor_httpHttpMethod *Options __attribute__((swift_name("Options")));
@property (readonly) SharedKtor_httpHttpMethod *Patch __attribute__((swift_name("Patch")));
@property (readonly) SharedKtor_httpHttpMethod *Post __attribute__((swift_name("Post")));
@property (readonly) SharedKtor_httpHttpMethod *Put __attribute__((swift_name("Put")));
@end

__attribute__((swift_name("Ktor_httpHeaderValueWithParameters")))
@interface SharedKtor_httpHeaderValueWithParameters : SharedBase
- (instancetype)initWithContent:(NSString *)content parameters:(NSArray<SharedKtor_httpHeaderValueParam *> *)parameters __attribute__((swift_name("init(content:parameters:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedKtor_httpHeaderValueWithParametersCompanion *companion __attribute__((swift_name("companion")));
- (NSString * _Nullable)parameterName:(NSString *)name __attribute__((swift_name("parameter(name:)")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) NSString *content __attribute__((swift_name("content")));
@property (readonly) NSArray<SharedKtor_httpHeaderValueParam *> *parameters __attribute__((swift_name("parameters")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpContentType")))
@interface SharedKtor_httpContentType : SharedKtor_httpHeaderValueWithParameters
- (instancetype)initWithContentType:(NSString *)contentType contentSubtype:(NSString *)contentSubtype parameters:(NSArray<SharedKtor_httpHeaderValueParam *> *)parameters __attribute__((swift_name("init(contentType:contentSubtype:parameters:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithContent:(NSString *)content parameters:(NSArray<SharedKtor_httpHeaderValueParam *> *)parameters __attribute__((swift_name("init(content:parameters:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) SharedKtor_httpContentTypeCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)matchPattern:(SharedKtor_httpContentType *)pattern __attribute__((swift_name("match(pattern:)")));
- (BOOL)matchPattern_:(NSString *)pattern __attribute__((swift_name("match(pattern_:)")));
- (SharedKtor_httpContentType *)withParameterName:(NSString *)name value:(NSString *)value __attribute__((swift_name("withParameter(name:value:)")));
- (SharedKtor_httpContentType *)withoutParameters __attribute__((swift_name("withoutParameters()")));
@property (readonly) NSString *contentSubtype __attribute__((swift_name("contentSubtype")));
@property (readonly) NSString *contentType __attribute__((swift_name("contentType")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreChildHandle")))
@protocol SharedKotlinx_coroutines_coreChildHandle <SharedKotlinx_coroutines_coreDisposableHandle>
@required
- (BOOL)childCancelledCause:(SharedKotlinThrowable *)cause __attribute__((swift_name("childCancelled(cause:)")));
@property (readonly) id<SharedKotlinx_coroutines_coreJob> _Nullable parent __attribute__((swift_name("parent")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreChildJob")))
@protocol SharedKotlinx_coroutines_coreChildJob <SharedKotlinx_coroutines_coreJob>
@required
- (void)parentCancelledParentJob:(id<SharedKotlinx_coroutines_coreParentJob>)parentJob __attribute__((swift_name("parentCancelled(parentJob:)")));
@end

__attribute__((swift_name("KotlinSequence")))
@protocol SharedKotlinSequence
@required
- (id<SharedKotlinIterator>)iterator __attribute__((swift_name("iterator()")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreSelectClause0")))
@protocol SharedKotlinx_coroutines_coreSelectClause0
@required
- (void)registerSelectClause0Select:(id<SharedKotlinx_coroutines_coreSelectInstance>)select block:(id<SharedKotlinSuspendFunction0>)block __attribute__((swift_name("registerSelectClause0(select:block:)")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreSerializersModuleCollector")))
@protocol SharedKotlinx_serialization_coreSerializersModuleCollector
@required
- (void)contextualKClass:(id<SharedKotlinKClass>)kClass provider:(id<SharedKotlinx_serialization_coreKSerializer> (^)(NSArray<id<SharedKotlinx_serialization_coreKSerializer>> *))provider __attribute__((swift_name("contextual(kClass:provider:)")));
- (void)contextualKClass:(id<SharedKotlinKClass>)kClass serializer:(id<SharedKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("contextual(kClass:serializer:)")));
- (void)polymorphicBaseClass:(id<SharedKotlinKClass>)baseClass actualClass:(id<SharedKotlinKClass>)actualClass actualSerializer:(id<SharedKotlinx_serialization_coreKSerializer>)actualSerializer __attribute__((swift_name("polymorphic(baseClass:actualClass:actualSerializer:)")));
- (void)polymorphicDefaultBaseClass:(id<SharedKotlinKClass>)baseClass defaultDeserializerProvider:(id<SharedKotlinx_serialization_coreDeserializationStrategy> _Nullable (^)(NSString * _Nullable))defaultDeserializerProvider __attribute__((swift_name("polymorphicDefault(baseClass:defaultDeserializerProvider:)")));
- (void)polymorphicDefaultDeserializerBaseClass:(id<SharedKotlinKClass>)baseClass defaultDeserializerProvider:(id<SharedKotlinx_serialization_coreDeserializationStrategy> _Nullable (^)(NSString * _Nullable))defaultDeserializerProvider __attribute__((swift_name("polymorphicDefaultDeserializer(baseClass:defaultDeserializerProvider:)")));
- (void)polymorphicDefaultSerializerBaseClass:(id<SharedKotlinKClass>)baseClass defaultSerializerProvider:(id<SharedKotlinx_serialization_coreSerializationStrategy> _Nullable (^)(id))defaultSerializerProvider __attribute__((swift_name("polymorphicDefaultSerializer(baseClass:defaultSerializerProvider:)")));
@end

__attribute__((swift_name("KotlinKType")))
@protocol SharedKotlinKType
@required

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
@property (readonly) NSArray<SharedKotlinKTypeProjection *> *arguments __attribute__((swift_name("arguments")));

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
@property (readonly) id<SharedKotlinKClassifier> _Nullable classifier __attribute__((swift_name("classifier")));
@property (readonly) BOOL isMarkedNullable __attribute__((swift_name("isMarkedNullable")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_ioMemory.Companion")))
@interface SharedKtor_ioMemoryCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKtor_ioMemoryCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) SharedKtor_ioMemory *Empty __attribute__((swift_name("Empty")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_ioBuffer.Companion")))
@interface SharedKtor_ioBufferCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKtor_ioBufferCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) SharedKtor_ioBuffer *Empty __attribute__((swift_name("Empty")));
@property (readonly) int32_t ReservedSize __attribute__((swift_name("ReservedSize")));
@end

__attribute__((swift_name("Ktor_ioObjectPool")))
@protocol SharedKtor_ioObjectPool <SharedKtor_ioCloseable>
@required
- (id)borrow __attribute__((swift_name("borrow()")));
- (void)dispose __attribute__((swift_name("dispose()")));
- (void)recycleInstance:(id)instance __attribute__((swift_name("recycle(instance:)")));
@property (readonly) int32_t capacity __attribute__((swift_name("capacity")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_ioChunkBuffer.Companion")))
@interface SharedKtor_ioChunkBufferCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKtor_ioChunkBufferCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) SharedKtor_ioChunkBuffer *Empty __attribute__((swift_name("Empty")));
@property (readonly) id<SharedKtor_ioObjectPool> EmptyPool __attribute__((swift_name("EmptyPool")));
@property (readonly) id<SharedKtor_ioObjectPool> Pool __attribute__((swift_name("Pool")));
@end

__attribute__((swift_name("KotlinByteIterator")))
@interface SharedKotlinByteIterator : SharedBase <SharedKotlinIterator>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (SharedByte *)next __attribute__((swift_name("next()")));
- (int8_t)nextByte __attribute__((swift_name("nextByte()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_ioInput.Companion")))
@interface SharedKtor_ioInputCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKtor_ioInputCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_ioByteReadPacket.Companion")))
@interface SharedKtor_ioByteReadPacketCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKtor_ioByteReadPacketCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) SharedKtor_ioByteReadPacket *Empty __attribute__((swift_name("Empty")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsWeekDay.Companion")))
@interface SharedKtor_utilsWeekDayCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKtor_utilsWeekDayCompanion *shared __attribute__((swift_name("shared")));
- (SharedKtor_utilsWeekDay *)fromOrdinal:(int32_t)ordinal __attribute__((swift_name("from(ordinal:)")));
- (SharedKtor_utilsWeekDay *)fromValue:(NSString *)value __attribute__((swift_name("from(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsMonth.Companion")))
@interface SharedKtor_utilsMonthCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKtor_utilsMonthCompanion *shared __attribute__((swift_name("shared")));
- (SharedKtor_utilsMonth *)fromOrdinal:(int32_t)ordinal __attribute__((swift_name("from(ordinal:)")));
- (SharedKtor_utilsMonth *)fromValue:(NSString *)value __attribute__((swift_name("from(value:)")));
@end

__attribute__((swift_name("Ktor_utilsStringValuesBuilder")))
@protocol SharedKtor_utilsStringValuesBuilder
@required
- (void)appendName:(NSString *)name value:(NSString *)value __attribute__((swift_name("append(name:value:)")));
- (void)appendAllStringValues:(id<SharedKtor_utilsStringValues>)stringValues __attribute__((swift_name("appendAll(stringValues:)")));
- (void)appendAllName:(NSString *)name values:(id)values __attribute__((swift_name("appendAll(name:values:)")));
- (void)appendMissingStringValues:(id<SharedKtor_utilsStringValues>)stringValues __attribute__((swift_name("appendMissing(stringValues:)")));
- (void)appendMissingName:(NSString *)name values:(id)values __attribute__((swift_name("appendMissing(name:values:)")));
- (id<SharedKtor_utilsStringValues>)build __attribute__((swift_name("build()")));
- (void)clear __attribute__((swift_name("clear()")));
- (BOOL)containsName:(NSString *)name __attribute__((swift_name("contains(name:)")));
- (BOOL)containsName:(NSString *)name value:(NSString *)value __attribute__((swift_name("contains(name:value:)")));
- (NSSet<id<SharedKotlinMapEntry>> *)entries __attribute__((swift_name("entries()")));
- (NSString * _Nullable)getName:(NSString *)name __attribute__((swift_name("get(name:)")));
- (NSArray<NSString *> * _Nullable)getAllName:(NSString *)name __attribute__((swift_name("getAll(name:)")));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
- (NSSet<NSString *> *)names __attribute__((swift_name("names()")));
- (void)removeName:(NSString *)name __attribute__((swift_name("remove(name:)")));
- (BOOL)removeName:(NSString *)name value:(NSString *)value __attribute__((swift_name("remove(name:value:)")));
- (void)removeKeysWithNoEntries __attribute__((swift_name("removeKeysWithNoEntries()")));
- (void)setName:(NSString *)name value:(NSString *)value __attribute__((swift_name("set(name:value:)")));
@property (readonly) BOOL caseInsensitiveName __attribute__((swift_name("caseInsensitiveName")));
@end

__attribute__((swift_name("Ktor_utilsStringValuesBuilderImpl")))
@interface SharedKtor_utilsStringValuesBuilderImpl : SharedBase <SharedKtor_utilsStringValuesBuilder>
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName size:(int32_t)size __attribute__((swift_name("init(caseInsensitiveName:size:)"))) __attribute__((objc_designated_initializer));
- (void)appendName:(NSString *)name value:(NSString *)value __attribute__((swift_name("append(name:value:)")));
- (void)appendAllStringValues:(id<SharedKtor_utilsStringValues>)stringValues __attribute__((swift_name("appendAll(stringValues:)")));
- (void)appendAllName:(NSString *)name values:(id)values __attribute__((swift_name("appendAll(name:values:)")));
- (void)appendMissingStringValues:(id<SharedKtor_utilsStringValues>)stringValues __attribute__((swift_name("appendMissing(stringValues:)")));
- (void)appendMissingName:(NSString *)name values:(id)values __attribute__((swift_name("appendMissing(name:values:)")));
- (id<SharedKtor_utilsStringValues>)build __attribute__((swift_name("build()")));
- (void)clear __attribute__((swift_name("clear()")));
- (BOOL)containsName:(NSString *)name __attribute__((swift_name("contains(name:)")));
- (BOOL)containsName:(NSString *)name value:(NSString *)value __attribute__((swift_name("contains(name:value:)")));
- (NSSet<id<SharedKotlinMapEntry>> *)entries __attribute__((swift_name("entries()")));
- (NSString * _Nullable)getName:(NSString *)name __attribute__((swift_name("get(name:)")));
- (NSArray<NSString *> * _Nullable)getAllName:(NSString *)name __attribute__((swift_name("getAll(name:)")));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
- (NSSet<NSString *> *)names __attribute__((swift_name("names()")));
- (void)removeName:(NSString *)name __attribute__((swift_name("remove(name:)")));
- (BOOL)removeName:(NSString *)name value:(NSString *)value __attribute__((swift_name("remove(name:value:)")));
- (void)removeKeysWithNoEntries __attribute__((swift_name("removeKeysWithNoEntries()")));
- (void)setName:(NSString *)name value:(NSString *)value __attribute__((swift_name("set(name:value:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)validateNameName:(NSString *)name __attribute__((swift_name("validateName(name:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)validateValueValue:(NSString *)value __attribute__((swift_name("validateValue(value:)")));
@property (readonly) BOOL caseInsensitiveName __attribute__((swift_name("caseInsensitiveName")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) SharedMutableDictionary<NSString *, NSMutableArray<NSString *> *> *values __attribute__((swift_name("values")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHeadersBuilder")))
@interface SharedKtor_httpHeadersBuilder : SharedKtor_utilsStringValuesBuilderImpl
- (instancetype)initWithSize:(int32_t)size __attribute__((swift_name("init(size:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName size:(int32_t)size __attribute__((swift_name("init(caseInsensitiveName:size:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (id<SharedKtor_httpHeaders>)build __attribute__((swift_name("build()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)validateNameName:(NSString *)name __attribute__((swift_name("validateName(name:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)validateValueValue:(NSString *)value __attribute__((swift_name("validateValue(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpRequestBuilder.Companion")))
@interface SharedKtor_client_coreHttpRequestBuilderCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKtor_client_coreHttpRequestBuilderCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpURLBuilder")))
@interface SharedKtor_httpURLBuilder : SharedBase
- (instancetype)initWithProtocol:(SharedKtor_httpURLProtocol *)protocol host:(NSString *)host port:(int32_t)port user:(NSString * _Nullable)user password:(NSString * _Nullable)password pathSegments:(NSArray<NSString *> *)pathSegments parameters:(id<SharedKtor_httpParameters>)parameters fragment:(NSString *)fragment trailingQuery:(BOOL)trailingQuery __attribute__((swift_name("init(protocol:host:port:user:password:pathSegments:parameters:fragment:trailingQuery:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedKtor_httpURLBuilderCompanion *companion __attribute__((swift_name("companion")));
- (SharedKtor_httpUrl *)build __attribute__((swift_name("build()")));
- (NSString *)buildString __attribute__((swift_name("buildString()")));
@property NSString *encodedFragment __attribute__((swift_name("encodedFragment")));
@property id<SharedKtor_httpParametersBuilder> encodedParameters __attribute__((swift_name("encodedParameters")));
@property NSString * _Nullable encodedPassword __attribute__((swift_name("encodedPassword")));
@property NSArray<NSString *> *encodedPathSegments __attribute__((swift_name("encodedPathSegments")));
@property NSString * _Nullable encodedUser __attribute__((swift_name("encodedUser")));
@property NSString *fragment __attribute__((swift_name("fragment")));
@property NSString *host __attribute__((swift_name("host")));
@property (readonly) id<SharedKtor_httpParametersBuilder> parameters __attribute__((swift_name("parameters")));
@property NSString * _Nullable password __attribute__((swift_name("password")));
@property NSArray<NSString *> *pathSegments __attribute__((swift_name("pathSegments")));
@property int32_t port __attribute__((swift_name("port")));
@property SharedKtor_httpURLProtocol *protocol __attribute__((swift_name("protocol")));
@property BOOL trailingQuery __attribute__((swift_name("trailingQuery")));
@property NSString * _Nullable user __attribute__((swift_name("user")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Koin_coreKind")))
@interface SharedKoin_coreKind : SharedKotlinEnum<SharedKoin_coreKind *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedKoin_coreKind *singleton __attribute__((swift_name("singleton")));
@property (class, readonly) SharedKoin_coreKind *factory __attribute__((swift_name("factory")));
@property (class, readonly) SharedKoin_coreKind *scoped __attribute__((swift_name("scoped")));
+ (SharedKotlinArray<SharedKoin_coreKind *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Koin_coreCallbacks")))
@interface SharedKoin_coreCallbacks<T> : SharedBase
- (instancetype)initWithOnClose:(void (^ _Nullable)(T _Nullable))onClose __attribute__((swift_name("init(onClose:)"))) __attribute__((objc_designated_initializer));
- (SharedKoin_coreCallbacks<T> *)doCopyOnClose:(void (^ _Nullable)(T _Nullable))onClose __attribute__((swift_name("doCopy(onClose:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) void (^ _Nullable onClose)(T _Nullable) __attribute__((swift_name("onClose")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpURLProtocol.Companion")))
@interface SharedKtor_httpURLProtocolCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKtor_httpURLProtocolCompanion *shared __attribute__((swift_name("shared")));
- (SharedKtor_httpURLProtocol *)createOrDefaultName:(NSString *)name __attribute__((swift_name("createOrDefault(name:)")));
@property (readonly) SharedKtor_httpURLProtocol *HTTP __attribute__((swift_name("HTTP")));
@property (readonly) SharedKtor_httpURLProtocol *HTTPS __attribute__((swift_name("HTTPS")));
@property (readonly) SharedKtor_httpURLProtocol *SOCKS __attribute__((swift_name("SOCKS")));
@property (readonly) SharedKtor_httpURLProtocol *WS __attribute__((swift_name("WS")));
@property (readonly) SharedKtor_httpURLProtocol *WSS __attribute__((swift_name("WSS")));
@property (readonly) NSDictionary<NSString *, SharedKtor_httpURLProtocol *> *byName __attribute__((swift_name("byName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHeaderValueParam")))
@interface SharedKtor_httpHeaderValueParam : SharedBase
- (instancetype)initWithName:(NSString *)name value:(NSString *)value __attribute__((swift_name("init(name:value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithName:(NSString *)name value:(NSString *)value escapeValue:(BOOL)escapeValue __attribute__((swift_name("init(name:value:escapeValue:)"))) __attribute__((objc_designated_initializer));
- (SharedKtor_httpHeaderValueParam *)doCopyName:(NSString *)name value:(NSString *)value escapeValue:(BOOL)escapeValue __attribute__((swift_name("doCopy(name:value:escapeValue:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL escapeValue __attribute__((swift_name("escapeValue")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHeaderValueWithParameters.Companion")))
@interface SharedKtor_httpHeaderValueWithParametersCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKtor_httpHeaderValueWithParametersCompanion *shared __attribute__((swift_name("shared")));
- (id _Nullable)parseValue:(NSString *)value init:(id _Nullable (^)(NSString *, NSArray<SharedKtor_httpHeaderValueParam *> *))init __attribute__((swift_name("parse(value:init:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpContentType.Companion")))
@interface SharedKtor_httpContentTypeCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKtor_httpContentTypeCompanion *shared __attribute__((swift_name("shared")));
- (SharedKtor_httpContentType *)parseValue:(NSString *)value __attribute__((swift_name("parse(value:)")));
@property (readonly) SharedKtor_httpContentType *Any __attribute__((swift_name("Any")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreParentJob")))
@protocol SharedKotlinx_coroutines_coreParentJob <SharedKotlinx_coroutines_coreJob>
@required
- (SharedKotlinCancellationException *)getChildJobCancellationCause __attribute__((swift_name("getChildJobCancellationCause()")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreSelectInstance")))
@protocol SharedKotlinx_coroutines_coreSelectInstance
@required
- (void)disposeOnSelectHandle:(id<SharedKotlinx_coroutines_coreDisposableHandle>)handle __attribute__((swift_name("disposeOnSelect(handle:)")));
- (id _Nullable)performAtomicTrySelectDesc:(SharedKotlinx_coroutines_coreAtomicDesc *)desc __attribute__((swift_name("performAtomicTrySelect(desc:)")));
- (void)resumeSelectWithExceptionException:(SharedKotlinThrowable *)exception __attribute__((swift_name("resumeSelectWithException(exception:)")));
- (BOOL)trySelect __attribute__((swift_name("trySelect()")));
- (id _Nullable)trySelectOtherOtherOp:(SharedKotlinx_coroutines_coreLockFreeLinkedListNodePrepareOp * _Nullable)otherOp __attribute__((swift_name("trySelectOther(otherOp:)")));
@property (readonly) id<SharedKotlinContinuation> completion __attribute__((swift_name("completion")));
@property (readonly) BOOL isSelected __attribute__((swift_name("isSelected")));
@end

__attribute__((swift_name("KotlinSuspendFunction0")))
@protocol SharedKotlinSuspendFunction0 <SharedKotlinFunction>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(completionHandler:)")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinKTypeProjection")))
@interface SharedKotlinKTypeProjection : SharedBase
- (instancetype)initWithVariance:(SharedKotlinKVariance * _Nullable)variance type:(id<SharedKotlinKType> _Nullable)type __attribute__((swift_name("init(variance:type:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) SharedKotlinKTypeProjectionCompanion *companion __attribute__((swift_name("companion")));
- (SharedKotlinKTypeProjection *)doCopyVariance:(SharedKotlinKVariance * _Nullable)variance type:(id<SharedKotlinKType> _Nullable)type __attribute__((swift_name("doCopy(variance:type:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<SharedKotlinKType> _Nullable type __attribute__((swift_name("type")));
@property (readonly) SharedKotlinKVariance * _Nullable variance __attribute__((swift_name("variance")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpURLBuilder.Companion")))
@interface SharedKtor_httpURLBuilderCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKtor_httpURLBuilderCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("Ktor_httpParametersBuilder")))
@protocol SharedKtor_httpParametersBuilder <SharedKtor_utilsStringValuesBuilder>
@required
@end

__attribute__((swift_name("Kotlinx_coroutines_coreAtomicDesc")))
@interface SharedKotlinx_coroutines_coreAtomicDesc : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)completeOp:(SharedKotlinx_coroutines_coreAtomicOp<id> *)op failure:(id _Nullable)failure __attribute__((swift_name("complete(op:failure:)")));
- (id _Nullable)prepareOp:(SharedKotlinx_coroutines_coreAtomicOp<id> *)op __attribute__((swift_name("prepare(op:)")));
@property SharedKotlinx_coroutines_coreAtomicOp<id> *atomicOp __attribute__((swift_name("atomicOp")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreOpDescriptor")))
@interface SharedKotlinx_coroutines_coreOpDescriptor : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (BOOL)isEarlierThanThat:(SharedKotlinx_coroutines_coreOpDescriptor *)that __attribute__((swift_name("isEarlierThan(that:)")));
- (id _Nullable)performAffected:(id _Nullable)affected __attribute__((swift_name("perform(affected:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedKotlinx_coroutines_coreAtomicOp<id> * _Nullable atomicOp __attribute__((swift_name("atomicOp")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_coroutines_coreLockFreeLinkedListNode.PrepareOp")))
@interface SharedKotlinx_coroutines_coreLockFreeLinkedListNodePrepareOp : SharedKotlinx_coroutines_coreOpDescriptor
- (instancetype)initWithAffected:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)affected next:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)next desc:(SharedKotlinx_coroutines_coreLockFreeLinkedListNodeAbstractAtomicDesc *)desc __attribute__((swift_name("init(affected:next:desc:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (void)finishPrepare __attribute__((swift_name("finishPrepare()")));
- (id _Nullable)performAffected:(id _Nullable)affected __attribute__((swift_name("perform(affected:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) SharedKotlinx_coroutines_coreLockFreeLinkedListNode *affected __attribute__((swift_name("affected")));
@property (readonly) SharedKotlinx_coroutines_coreAtomicOp<id> *atomicOp __attribute__((swift_name("atomicOp")));
@property (readonly) SharedKotlinx_coroutines_coreLockFreeLinkedListNodeAbstractAtomicDesc *desc __attribute__((swift_name("desc")));
@property (readonly) SharedKotlinx_coroutines_coreLockFreeLinkedListNode *next __attribute__((swift_name("next")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinKVariance")))
@interface SharedKotlinKVariance : SharedKotlinEnum<SharedKotlinKVariance *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) SharedKotlinKVariance *invariant __attribute__((swift_name("invariant")));
@property (class, readonly) SharedKotlinKVariance *in __attribute__((swift_name("in")));
@property (class, readonly) SharedKotlinKVariance *out __attribute__((swift_name("out")));
+ (SharedKotlinArray<SharedKotlinKVariance *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinKTypeProjection.Companion")))
@interface SharedKotlinKTypeProjectionCompanion : SharedBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) SharedKotlinKTypeProjectionCompanion *shared __attribute__((swift_name("shared")));

/**
 * @note annotations
 *   kotlin.jvm.JvmStatic
*/
- (SharedKotlinKTypeProjection *)contravariantType:(id<SharedKotlinKType>)type __attribute__((swift_name("contravariant(type:)")));

/**
 * @note annotations
 *   kotlin.jvm.JvmStatic
*/
- (SharedKotlinKTypeProjection *)covariantType:(id<SharedKotlinKType>)type __attribute__((swift_name("covariant(type:)")));

/**
 * @note annotations
 *   kotlin.jvm.JvmStatic
*/
- (SharedKotlinKTypeProjection *)invariantType:(id<SharedKotlinKType>)type __attribute__((swift_name("invariant(type:)")));
@property (readonly) SharedKotlinKTypeProjection *STAR __attribute__((swift_name("STAR")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreAtomicOp")))
@interface SharedKotlinx_coroutines_coreAtomicOp<__contravariant T> : SharedKotlinx_coroutines_coreOpDescriptor
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)completeAffected:(T _Nullable)affected failure:(id _Nullable)failure __attribute__((swift_name("complete(affected:failure:)")));
- (id _Nullable)decideDecision:(id _Nullable)decision __attribute__((swift_name("decide(decision:)")));
- (id _Nullable)performAffected:(id _Nullable)affected __attribute__((swift_name("perform(affected:)")));
- (id _Nullable)prepareAffected:(T _Nullable)affected __attribute__((swift_name("prepare(affected:)")));
@property (readonly) SharedKotlinx_coroutines_coreAtomicOp<id> *atomicOp __attribute__((swift_name("atomicOp")));
@property (readonly) id _Nullable consensus __attribute__((swift_name("consensus")));
@property (readonly) BOOL isDecided __attribute__((swift_name("isDecided")));
@property (readonly) int64_t opSequence __attribute__((swift_name("opSequence")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreLockFreeLinkedListNode")))
@interface SharedKotlinx_coroutines_coreLockFreeLinkedListNode : SharedBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)addLastNode:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)node __attribute__((swift_name("addLast(node:)")));
- (BOOL)addLastIfNode:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)node condition:(SharedBoolean *(^)(void))condition __attribute__((swift_name("addLastIf(node:condition:)")));
- (BOOL)addLastIfPrevNode:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)node predicate:(SharedBoolean *(^)(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *))predicate __attribute__((swift_name("addLastIfPrev(node:predicate:)")));
- (BOOL)addLastIfPrevAndIfNode:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)node predicate:(SharedBoolean *(^)(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *))predicate condition:(SharedBoolean *(^)(void))condition __attribute__((swift_name("addLastIfPrevAndIf(node:predicate:condition:)")));
- (BOOL)addOneIfEmptyNode:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)node __attribute__((swift_name("addOneIfEmpty(node:)")));
- (SharedKotlinx_coroutines_coreLockFreeLinkedListNodeAddLastDesc<SharedKotlinx_coroutines_coreLockFreeLinkedListNode *> *)describeAddLastNode:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)node __attribute__((swift_name("describeAddLast(node:)")));
- (SharedKotlinx_coroutines_coreLockFreeLinkedListNodeRemoveFirstDesc<SharedKotlinx_coroutines_coreLockFreeLinkedListNode *> *)describeRemoveFirst __attribute__((swift_name("describeRemoveFirst()")));
- (void)helpRemove __attribute__((swift_name("helpRemove()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (SharedKotlinx_coroutines_coreLockFreeLinkedListNode * _Nullable)nextIfRemoved __attribute__((swift_name("nextIfRemoved()")));
- (BOOL)remove __attribute__((swift_name("remove()")));
- (id _Nullable)removeFirstIfIsInstanceOfOrPeekIfPredicate:(SharedBoolean *(^)(id _Nullable))predicate __attribute__((swift_name("removeFirstIfIsInstanceOfOrPeekIf(predicate:)")));
- (SharedKotlinx_coroutines_coreLockFreeLinkedListNode * _Nullable)removeFirstOrNull __attribute__((swift_name("removeFirstOrNull()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isRemoved __attribute__((swift_name("isRemoved")));
@property (readonly, getter=next_) id next __attribute__((swift_name("next")));
@property (readonly) SharedKotlinx_coroutines_coreLockFreeLinkedListNode *nextNode __attribute__((swift_name("nextNode")));
@property (readonly) SharedKotlinx_coroutines_coreLockFreeLinkedListNode *prevNode __attribute__((swift_name("prevNode")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreLockFreeLinkedListNode.AbstractAtomicDesc")))
@interface SharedKotlinx_coroutines_coreLockFreeLinkedListNodeAbstractAtomicDesc : SharedKotlinx_coroutines_coreAtomicDesc
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)completeOp:(SharedKotlinx_coroutines_coreAtomicOp<id> *)op failure:(id _Nullable)failure __attribute__((swift_name("complete(op:failure:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (id _Nullable)failureAffected:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)affected __attribute__((swift_name("failure(affected:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)finishOnSuccessAffected:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)affected next:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)next __attribute__((swift_name("finishOnSuccess(affected:next:)")));
- (void)finishPreparePrepareOp:(SharedKotlinx_coroutines_coreLockFreeLinkedListNodePrepareOp *)prepareOp __attribute__((swift_name("finishPrepare(prepareOp:)")));
- (id _Nullable)onPreparePrepareOp:(SharedKotlinx_coroutines_coreLockFreeLinkedListNodePrepareOp *)prepareOp __attribute__((swift_name("onPrepare(prepareOp:)")));
- (void)onRemovedAffected:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)affected __attribute__((swift_name("onRemoved(affected:)")));
- (id _Nullable)prepareOp:(SharedKotlinx_coroutines_coreAtomicOp<id> *)op __attribute__((swift_name("prepare(op:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (BOOL)retryAffected:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)affected next:(id)next __attribute__((swift_name("retry(affected:next:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (SharedKotlinx_coroutines_coreLockFreeLinkedListNode * _Nullable)takeAffectedNodeOp:(SharedKotlinx_coroutines_coreOpDescriptor *)op __attribute__((swift_name("takeAffectedNode(op:)")));
- (id)updatedNextAffected:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)affected next:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)next __attribute__((swift_name("updatedNext(affected:next:)")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) SharedKotlinx_coroutines_coreLockFreeLinkedListNode * _Nullable affectedNode __attribute__((swift_name("affectedNode")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) SharedKotlinx_coroutines_coreLockFreeLinkedListNode * _Nullable originalNext __attribute__((swift_name("originalNext")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreLockFreeLinkedListNodeAddLastDesc")))
@interface SharedKotlinx_coroutines_coreLockFreeLinkedListNodeAddLastDesc<T> : SharedKotlinx_coroutines_coreLockFreeLinkedListNodeAbstractAtomicDesc
- (instancetype)initWithQueue:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)queue node:(T)node __attribute__((swift_name("init(queue:node:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)finishOnSuccessAffected:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)affected next:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)next __attribute__((swift_name("finishOnSuccess(affected:next:)")));
- (void)finishPreparePrepareOp:(SharedKotlinx_coroutines_coreLockFreeLinkedListNodePrepareOp *)prepareOp __attribute__((swift_name("finishPrepare(prepareOp:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (BOOL)retryAffected:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)affected next:(id)next __attribute__((swift_name("retry(affected:next:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (SharedKotlinx_coroutines_coreLockFreeLinkedListNode * _Nullable)takeAffectedNodeOp:(SharedKotlinx_coroutines_coreOpDescriptor *)op __attribute__((swift_name("takeAffectedNode(op:)")));
- (id)updatedNextAffected:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)affected next:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)next __attribute__((swift_name("updatedNext(affected:next:)")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) SharedKotlinx_coroutines_coreLockFreeLinkedListNode * _Nullable affectedNode __attribute__((swift_name("affectedNode")));
@property (readonly) T node __attribute__((swift_name("node")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) SharedKotlinx_coroutines_coreLockFreeLinkedListNode *originalNext __attribute__((swift_name("originalNext")));
@property (readonly) SharedKotlinx_coroutines_coreLockFreeLinkedListNode *queue __attribute__((swift_name("queue")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreLockFreeLinkedListNodeRemoveFirstDesc")))
@interface SharedKotlinx_coroutines_coreLockFreeLinkedListNodeRemoveFirstDesc<T> : SharedKotlinx_coroutines_coreLockFreeLinkedListNodeAbstractAtomicDesc
- (instancetype)initWithQueue:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)queue __attribute__((swift_name("init(queue:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (id _Nullable)failureAffected:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)affected __attribute__((swift_name("failure(affected:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)finishOnSuccessAffected:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)affected next:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)next __attribute__((swift_name("finishOnSuccess(affected:next:)")));
- (void)finishPreparePrepareOp:(SharedKotlinx_coroutines_coreLockFreeLinkedListNodePrepareOp *)prepareOp __attribute__((swift_name("finishPrepare(prepareOp:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (BOOL)retryAffected:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)affected next:(id)next __attribute__((swift_name("retry(affected:next:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (SharedKotlinx_coroutines_coreLockFreeLinkedListNode * _Nullable)takeAffectedNodeOp:(SharedKotlinx_coroutines_coreOpDescriptor *)op __attribute__((swift_name("takeAffectedNode(op:)")));
- (id)updatedNextAffected:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)affected next:(SharedKotlinx_coroutines_coreLockFreeLinkedListNode *)next __attribute__((swift_name("updatedNext(affected:next:)")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) SharedKotlinx_coroutines_coreLockFreeLinkedListNode * _Nullable affectedNode __attribute__((swift_name("affectedNode")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) SharedKotlinx_coroutines_coreLockFreeLinkedListNode * _Nullable originalNext __attribute__((swift_name("originalNext")));
@property (readonly) SharedKotlinx_coroutines_coreLockFreeLinkedListNode *queue __attribute__((swift_name("queue")));
@property (readonly) T _Nullable result __attribute__((swift_name("result")));
@end

#pragma pop_macro("_Nullable_result")
#pragma clang diagnostic pop
NS_ASSUME_NONNULL_END
